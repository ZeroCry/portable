{
  "glob/common.js": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern)\n  }\n\n  return {\n    matcher: new Minimatch(pattern),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = options.cwd\n    self.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  self.nomount = !!options.nomount\n\n  // disable comments and negation unless the user explicitly\n  // passes in false as the option.\n  options.nonegate = options.nonegate === false ? false : true\n  options.nocomment = options.nocomment === false ? false : true\n  deprecationWarning(options)\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\n// TODO(isaacs): remove entirely in v6\n// exported to reset in tests\nexports.deprecationWarned\nfunction deprecationWarning(options) {\n  if (!options.nonegate || !options.nocomment) {\n    if (process.noDeprecation !== true && !exports.deprecationWarned) {\n      var msg = 'glob WARNING: comments and negation will be disabled in v6'\n      if (process.throwDeprecation)\n        throw new Error(msg)\n      else if (process.traceDeprecation)\n        console.trace(msg)\n      else\n        console.error(msg)\n\n      exports.deprecationWarned = true\n    }\n  }\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        return !(/\\/$/.test(e))\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n",
  "glob/glob.js": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nglob.hasMagic = function (pattern, options_) {\n  var options = util._extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  var n = this.minimatch.set.length\n  this._processing = 0\n  this.matches = new Array(n)\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    fs.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (this.matches[index][e])\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = this._makeAbs(e)\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  if (this.mark)\n    e = this._mark(e)\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er)\n      return cb()\n\n    var isSym = lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return cb()\n\n  return cb(null, c, stat)\n}\n",
  "glob/node_modules/inflight/inflight.js": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n    for (var i = 0; i < len; i++) {\n      cbs[i].apply(null, args)\n    }\n    if (cbs.length > len) {\n      // added more in the interim.\n      // de-zalgo, just in case, but don't call again.\n      cbs.splice(0, len)\n      process.nextTick(function () {\n        RES.apply(null, args)\n      })\n    } else {\n      delete reqs[key]\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n",
  "glob/node_modules/inflight/node_modules/wrappy/package.json": "{\n  \"name\": \"wrappy\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Callback wrapping utility\",\n  \"main\": \"wrappy.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tap\": \"^0.4.12\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/npm/wrappy.git\"\n  },\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/npm/wrappy/issues\"\n  },\n  \"homepage\": \"https://github.com/npm/wrappy\",\n  \"gitHead\": \"006a8cbac6b99988315834c207896eed71fd069a\",\n  \"_id\": \"wrappy@1.0.1\",\n  \"_shasum\": \"1e65969965ccbc2db4548c6b84a6f2c5aedd4739\",\n  \"_from\": \"wrappy@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"2.0.0\",\n  \"_nodeVersion\": \"0.10.31\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"i@izs.me\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"1e65969965ccbc2db4548c6b84a6f2c5aedd4739\",\n    \"tarball\": \"http://registry.npmjs.org/wrappy/-/wrappy-1.0.1.tgz\"\n  },\n  \"_resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.1.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/inflight/node_modules/wrappy/test/basic.js": "var test = require('tap').test\nvar wrappy = require('../wrappy.js')\n\ntest('basic', function (t) {\n  function onceifier (cb) {\n    var called = false\n    return function () {\n      if (called) return\n      called = true\n      return cb.apply(this, arguments)\n    }\n  }\n  onceifier.iAmOnce = {}\n  var once = wrappy(onceifier)\n  t.equal(once.iAmOnce, onceifier.iAmOnce)\n\n  var called = 0\n  function boo () {\n    t.equal(called, 0)\n    called++\n  }\n  // has some rando property\n  boo.iAmBoo = true\n\n  var onlyPrintOnce = once(boo)\n\n  onlyPrintOnce() // prints 'boo'\n  onlyPrintOnce() // does nothing\n  t.equal(called, 1)\n\n  // random property is retained!\n  t.equal(onlyPrintOnce.iAmBoo, true)\n\n  var logs = []\n  var logwrap = wrappy(function (msg, cb) {\n    logs.push(msg + ' wrapping cb')\n    return function () {\n      logs.push(msg + ' before cb')\n      var ret = cb.apply(this, arguments)\n      logs.push(msg + ' after cb')\n    }\n  })\n\n  var c = logwrap('foo', function () {\n    t.same(logs, [ 'foo wrapping cb', 'foo before cb' ])\n  })\n  c()\n  t.same(logs, [ 'foo wrapping cb', 'foo before cb', 'foo after cb' ])\n\n  t.end()\n})\n",
  "glob/node_modules/inflight/node_modules/wrappy/wrappy.js": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n",
  "glob/node_modules/inflight/package.json": "{\n  \"name\": \"inflight\",\n  \"version\": \"1.0.4\",\n  \"description\": \"Add callbacks to requests in flight to avoid async duplication\",\n  \"main\": \"inflight.js\",\n  \"dependencies\": {\n    \"once\": \"^1.3.0\",\n    \"wrappy\": \"1\"\n  },\n  \"devDependencies\": {\n    \"tap\": \"^0.4.10\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/inflight.git\"\n  },\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/inflight/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/inflight\",\n  \"license\": \"ISC\",\n  \"gitHead\": \"c7b5531d572a867064d4a1da9e013e8910b7d1ba\",\n  \"_id\": \"inflight@1.0.4\",\n  \"_shasum\": \"6cbb4521ebd51ce0ec0a936bfd7657ef7e9b172a\",\n  \"_from\": \"inflight@>=1.0.4 <2.0.0\",\n  \"_npmVersion\": \"2.1.3\",\n  \"_nodeVersion\": \"0.10.32\",\n  \"_npmUser\": {\n    \"name\": \"othiym23\",\n    \"email\": \"ogd@aoaioxxysz.net\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    },\n    {\n      \"name\": \"othiym23\",\n      \"email\": \"ogd@aoaioxxysz.net\"\n    },\n    {\n      \"name\": \"iarna\",\n      \"email\": \"me@re-becca.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"6cbb4521ebd51ce0ec0a936bfd7657ef7e9b172a\",\n    \"tarball\": \"http://registry.npmjs.org/inflight/-/inflight-1.0.4.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.4.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/inflight/test.js": "var test = require('tap').test\nvar inf = require('./inflight.js')\n\n\nfunction req (key, cb) {\n  cb = inf(key, cb)\n  if (cb) setTimeout(function () {\n    cb(key)\n    cb(key)\n  })\n  return cb\n}\n\ntest('basic', function (t) {\n  var calleda = false\n  var a = req('key', function (k) {\n    t.notOk(calleda)\n    calleda = true\n    t.equal(k, 'key')\n    if (calledb) t.end()\n  })\n  t.ok(a, 'first returned cb function')\n\n  var calledb = false\n  var b = req('key', function (k) {\n    t.notOk(calledb)\n    calledb = true\n    t.equal(k, 'key')\n    if (calleda) t.end()\n  })\n\n  t.notOk(b, 'second should get falsey inflight response')\n})\n\ntest('timing', function (t) {\n  var expect = [\n    'method one',\n    'start one',\n    'end one',\n    'two',\n    'tick',\n    'three'\n  ]\n  var i = 0\n\n  function log (m) {\n    t.equal(m, expect[i], m + ' === ' + expect[i])\n    ++i\n    if (i === expect.length)\n      t.end()\n  }\n\n  function method (name, cb) {\n    log('method ' + name)\n    process.nextTick(cb)\n  }\n\n  var one = inf('foo', function () {\n    log('start one')\n    var three = inf('foo', function () {\n      log('three')\n    })\n    if (three) method('three', three)\n    log('end one')\n  })\n\n  method('one', one)\n\n  var two = inf('foo', function () {\n    log('two')\n  })\n  if (two) method('one', two)\n\n  process.nextTick(log.bind(null, 'tick'))\n})\n\ntest('parameters', function (t) {\n  t.plan(8)\n\n  var a = inf('key', function (first, second, third) {\n    t.equal(first, 1)\n    t.equal(second, 2)\n    t.equal(third, 3)\n  })\n  t.ok(a, 'first returned cb function')\n\n  var b = inf('key', function (first, second, third) {\n    t.equal(first, 1)\n    t.equal(second, 2)\n    t.equal(third, 3)\n  })\n  t.notOk(b, 'second should get falsey inflight response')\n\n  setTimeout(function () {\n    a(1, 2, 3)\n  })\n})\n",
  "glob/node_modules/inherits/inherits_browser.js": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
  "glob/node_modules/inherits/inherits.js": "module.exports = require('util').inherits\n",
  "glob/node_modules/inherits/package.json": "{\n  \"name\": \"inherits\",\n  \"description\": \"Browser-friendly inheritance fully compatible with standard node.js inherits()\",\n  \"version\": \"2.0.1\",\n  \"keywords\": [\n    \"inheritance\",\n    \"class\",\n    \"klass\",\n    \"oop\",\n    \"object-oriented\",\n    \"inherits\",\n    \"browser\",\n    \"browserify\"\n  ],\n  \"main\": \"./inherits.js\",\n  \"browser\": \"./inherits_browser.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/inherits.git\"\n  },\n  \"license\": \"ISC\",\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/inherits/issues\"\n  },\n  \"_id\": \"inherits@2.0.1\",\n  \"dist\": {\n    \"shasum\": \"b17d08d326b4423e568eff719f91b0b1cbdf69f1\",\n    \"tarball\": \"http://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\"\n  },\n  \"_from\": \"inherits@>=2.0.0 <3.0.0\",\n  \"_npmVersion\": \"1.3.8\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"i@izs.me\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"b17d08d326b4423e568eff719f91b0b1cbdf69f1\",\n  \"_resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\",\n  \"readme\": \"ERROR: No README data found!\",\n  \"homepage\": \"https://github.com/isaacs/inherits#readme\"\n}\n",
  "glob/node_modules/inherits/test.js": "var inherits = require('./inherits.js')\nvar assert = require('assert')\n\nfunction test(c) {\n  assert(c.constructor === Child)\n  assert(c.constructor.super_ === Parent)\n  assert(Object.getPrototypeOf(c) === Child.prototype)\n  assert(Object.getPrototypeOf(Object.getPrototypeOf(c)) === Parent.prototype)\n  assert(c instanceof Child)\n  assert(c instanceof Parent)\n}\n\nfunction Child() {\n  Parent.call(this)\n  test(this)\n}\n\nfunction Parent() {}\n\ninherits(Child, Parent)\n\nvar c = new Child\ntest(c)\n\nconsole.log('ok')\n",
  "glob/node_modules/minimatch/browser.js": "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new Error('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var plType\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        plType = stateChar\n        patternListStack.push({ type: plType, start: i - 1, reStart: re.length })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        re += ')'\n        plType = patternListStack.pop().type\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        switch (plType) {\n          case '!':\n            re += '[^/]*?)'\n            break\n          case '?':\n          case '+':\n          case '*':\n            re += plType\n            break\n          case '@': break // the default anyway\n        }\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (var pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + 3)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2})*)(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) re = '(?=.)' + re\n\n  if (addPatternStart) re = patternStart + re\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  var regExp = new RegExp('^' + re + '$', flags)\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n\n},{\"brace-expansion\":2,\"path\":undefined}],2:[function(require,module,exports){\nvar concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  var expansions = expand(escapeBraces(str));\n  return expansions.filter(identity).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = /^(.*,)+(.+)?$/.test(m.body);\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0]).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      expansions.push([pre, N[j], post[k]].join(''))\n    }\n  }\n\n  return expansions;\n}\n\n\n},{\"balanced-match\":3,\"concat-map\":4}],3:[function(require,module,exports){\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  var bal = 0;\n  var m = {};\n  var ended = false;\n\n  for (var i = 0; i < str.length; i++) {\n    if (a == str.substr(i, a.length)) {\n      if (!('start' in m)) m.start = i;\n      bal++;\n    }\n    else if (b == str.substr(i, b.length) && 'start' in m) {\n      ended = true;\n      bal--;\n      if (!bal) {\n        m.end = i;\n        m.pre = str.substr(0, m.start);\n        m.body = (m.end - m.start > 1)\n          ? str.substring(m.start + a.length, m.end)\n          : '';\n        m.post = str.slice(m.end + b.length);\n        return m;\n      }\n    }\n  }\n\n  // if we opened more than we closed, find the one we closed\n  if (bal && ended) {\n    var start = m.start + a.length;\n    m = balanced(a, b, str.substr(start));\n    if (m) {\n      m.start += start;\n      m.end += start;\n      m.pre = str.slice(0, start) + m.pre;\n    }\n    return m;\n  }\n}\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (Array.isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\n},{}]},{},[1]);\n",
  "glob/node_modules/minimatch/minimatch.js": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new Error('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var plType\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        plType = stateChar\n        patternListStack.push({ type: plType, start: i - 1, reStart: re.length })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        re += ')'\n        plType = patternListStack.pop().type\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        switch (plType) {\n          case '!':\n            re += '[^/]*?)'\n            break\n          case '?':\n          case '+':\n          case '*':\n            re += plType\n            break\n          case '@': break // the default anyway\n        }\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (var pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + 3)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2})*)(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) re = '(?=.)' + re\n\n  if (addPatternStart) re = patternStart + re\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  var regExp = new RegExp('^' + re + '$', flags)\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/example.js": "var expand = require('./');\n\nconsole.log(expand('http://any.org/archive{1996..1999}/vol{1..4}/part{a,b,c}.html'));\nconsole.log(expand('http://www.numericals.com/file{1..100..10}.txt'));\nconsole.log(expand('http://www.letters.com/file{a..z..2}.txt'));\nconsole.log(expand('mkdir /usr/local/src/bash/{old,new,dist,bugs}'));\nconsole.log(expand('chown root /usr/{ucb/{ex,edit},lib/{ex?.?*,how_ex}}'));\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/index.js": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = /^(.*,)+(.+)?$/.test(m.body);\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/balanced-match/example.js": "var balanced = require('./');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/balanced-match/index.js": "module.exports = balanced;\nfunction balanced(a, b, str) {\n  var bal = 0;\n  var m = {};\n  var ended = false;\n\n  for (var i = 0; i < str.length; i++) {\n    if (a == str.substr(i, a.length)) {\n      if (!('start' in m)) m.start = i;\n      bal++;\n    }\n    else if (b == str.substr(i, b.length) && 'start' in m) {\n      ended = true;\n      bal--;\n      if (!bal) {\n        m.end = i;\n        m.pre = str.substr(0, m.start);\n        m.body = (m.end - m.start > 1)\n          ? str.substring(m.start + a.length, m.end)\n          : '';\n        m.post = str.slice(m.end + b.length);\n        return m;\n      }\n    }\n  }\n\n  // if we opened more than we closed, find the one we closed\n  if (bal && ended) {\n    var start = m.start + a.length;\n    m = balanced(a, b, str.substr(start));\n    if (m) {\n      m.start += start;\n      m.end += start;\n      m.pre = str.slice(0, start) + m.pre;\n    }\n    return m;\n  }\n}\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/balanced-match/package.json": "{\n  \"name\": \"balanced-match\",\n  \"description\": \"Match balanced character pairs, like \\\"{\\\" and \\\"}\\\"\",\n  \"version\": \"0.2.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/juliangruber/balanced-match.git\"\n  },\n  \"homepage\": \"https://github.com/juliangruber/balanced-match\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"make test\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tape\": \"~1.1.1\"\n  },\n  \"keywords\": [\n    \"match\",\n    \"regexp\",\n    \"test\",\n    \"balanced\",\n    \"parse\"\n  ],\n  \"author\": {\n    \"name\": \"Julian Gruber\",\n    \"email\": \"mail@juliangruber.com\",\n    \"url\": \"http://juliangruber.com\"\n  },\n  \"license\": \"MIT\",\n  \"testling\": {\n    \"files\": \"test/*.js\",\n    \"browsers\": [\n      \"ie/8..latest\",\n      \"firefox/20..latest\",\n      \"firefox/nightly\",\n      \"chrome/25..latest\",\n      \"chrome/canary\",\n      \"opera/12..latest\",\n      \"opera/next\",\n      \"safari/5.1..latest\",\n      \"ipad/6.0..latest\",\n      \"iphone/6.0..latest\",\n      \"android-browser/4.2..latest\"\n    ]\n  },\n  \"gitHead\": \"ba40ed78e7114a4a67c51da768a100184dead39c\",\n  \"bugs\": {\n    \"url\": \"https://github.com/juliangruber/balanced-match/issues\"\n  },\n  \"_id\": \"balanced-match@0.2.0\",\n  \"_shasum\": \"38f6730c03aab6d5edbb52bd934885e756d71674\",\n  \"_from\": \"balanced-match@>=0.2.0 <0.3.0\",\n  \"_npmVersion\": \"2.1.8\",\n  \"_nodeVersion\": \"0.10.32\",\n  \"_npmUser\": {\n    \"name\": \"juliangruber\",\n    \"email\": \"julian@juliangruber.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"juliangruber\",\n      \"email\": \"julian@juliangruber.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"38f6730c03aab6d5edbb52bd934885e756d71674\",\n    \"tarball\": \"http://registry.npmjs.org/balanced-match/-/balanced-match-0.2.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-0.2.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/balanced-match/test/balanced.js": "var test = require('tape');\nvar balanced = require('..');\n\ntest('balanced', function(t) {\n  t.deepEqual(balanced('{', '}', 'pre{in{nest}}post'), {\n    start: 3,\n    end: 12,\n    pre: 'pre',\n    body: 'in{nest}',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', '{{{{{{{{{in}post'), {\n    start: 8,\n    end: 11,\n    pre: '{{{{{{{{',\n    body: 'in',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre{body{in}post'), {\n    start: 8,\n    end: 11,\n    pre: 'pre{body',\n    body: 'in',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre}{in{nest}}post'), {\n    start: 4,\n    end: 13,\n    pre: 'pre}',\n    body: 'in{nest}',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre{body}between{body2}post'), {\n    start: 3,\n    end: 8,\n    pre: 'pre',\n    body: 'body',\n    post: 'between{body2}post'\n  });\n  t.notOk(balanced('{', '}', 'nope'), 'should be notOk');\n  t.deepEqual(balanced('<b>', '</b>', 'pre<b>in<b>nest</b></b>post'), {\n    start: 3,\n    end: 19,\n    pre: 'pre',\n    body: 'in<b>nest</b>',\n    post: 'post'\n  });\n  t.deepEqual(balanced('<b>', '</b>', 'pre</b><b>in<b>nest</b></b>post'), {\n    start: 7,\n    end: 23,\n    pre: 'pre</b>',\n    body: 'in<b>nest</b>',\n    post: 'post'\n  });\n  t.end();\n});\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/concat-map/example/map.js": "var concatMap = require('../');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/concat-map/index.js": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/concat-map/package.json": "{\n  \"name\": \"concat-map\",\n  \"description\": \"concatenative mapdashery\",\n  \"version\": \"0.0.1\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/substack/node-concat-map.git\"\n  },\n  \"main\": \"index.js\",\n  \"keywords\": [\n    \"concat\",\n    \"concatMap\",\n    \"map\",\n    \"functional\",\n    \"higher-order\"\n  ],\n  \"directories\": {\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"tape test/*.js\"\n  },\n  \"devDependencies\": {\n    \"tape\": \"~2.4.0\"\n  },\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"James Halliday\",\n    \"email\": \"mail@substack.net\",\n    \"url\": \"http://substack.net\"\n  },\n  \"testling\": {\n    \"files\": \"test/*.js\",\n    \"browsers\": {\n      \"ie\": [\n        6,\n        7,\n        8,\n        9\n      ],\n      \"ff\": [\n        3.5,\n        10,\n        15\n      ],\n      \"chrome\": [\n        10,\n        22\n      ],\n      \"safari\": [\n        5.1\n      ],\n      \"opera\": [\n        12\n      ]\n    }\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/substack/node-concat-map/issues\"\n  },\n  \"homepage\": \"https://github.com/substack/node-concat-map\",\n  \"_id\": \"concat-map@0.0.1\",\n  \"dist\": {\n    \"shasum\": \"d8a96bd77fd68df7793a73036a3ba0d5405d477b\",\n    \"tarball\": \"http://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\"\n  },\n  \"_from\": \"concat-map@0.0.1\",\n  \"_npmVersion\": \"1.3.21\",\n  \"_npmUser\": {\n    \"name\": \"substack\",\n    \"email\": \"mail@substack.net\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"substack\",\n      \"email\": \"mail@substack.net\"\n    }\n  ],\n  \"_shasum\": \"d8a96bd77fd68df7793a73036a3ba0d5405d477b\",\n  \"_resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/concat-map/test/map.js": "var concatMap = require('../');\nvar test = require('tape');\n\ntest('empty or not', function (t) {\n    var xs = [ 1, 2, 3, 4, 5, 6 ];\n    var ixes = [];\n    var ys = concatMap(xs, function (x, ix) {\n        ixes.push(ix);\n        return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n    });\n    t.same(ys, [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]);\n    t.same(ixes, [ 0, 1, 2, 3, 4, 5 ]);\n    t.end();\n});\n\ntest('always something', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function (x) {\n        return x === 'b' ? [ 'B', 'B', 'B' ] : [ x ];\n    });\n    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);\n    t.end();\n});\n\ntest('scalars', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function (x) {\n        return x === 'b' ? [ 'B', 'B', 'B' ] : x;\n    });\n    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);\n    t.end();\n});\n\ntest('undefs', function (t) {\n    var xs = [ 'a', 'b', 'c', 'd' ];\n    var ys = concatMap(xs, function () {});\n    t.same(ys, [ undefined, undefined, undefined, undefined ]);\n    t.end();\n});\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/package.json": "{\n  \"name\": \"brace-expansion\",\n  \"description\": \"Brace expansion as known from sh/bash\",\n  \"version\": \"1.1.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/juliangruber/brace-expansion.git\"\n  },\n  \"homepage\": \"https://github.com/juliangruber/brace-expansion\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"tape test/*.js\",\n    \"gentest\": \"bash test/generate.sh\"\n  },\n  \"dependencies\": {\n    \"balanced-match\": \"^0.2.0\",\n    \"concat-map\": \"0.0.1\"\n  },\n  \"devDependencies\": {\n    \"tape\": \"^3.0.3\"\n  },\n  \"keywords\": [],\n  \"author\": {\n    \"name\": \"Julian Gruber\",\n    \"email\": \"mail@juliangruber.com\",\n    \"url\": \"http://juliangruber.com\"\n  },\n  \"license\": \"MIT\",\n  \"testling\": {\n    \"files\": \"test/*.js\",\n    \"browsers\": [\n      \"ie/8..latest\",\n      \"firefox/20..latest\",\n      \"firefox/nightly\",\n      \"chrome/25..latest\",\n      \"chrome/canary\",\n      \"opera/12..latest\",\n      \"opera/next\",\n      \"safari/5.1..latest\",\n      \"ipad/6.0..latest\",\n      \"iphone/6.0..latest\",\n      \"android-browser/4.2..latest\"\n    ]\n  },\n  \"gitHead\": \"b5fa3b1c74e5e2dba2d0efa19b28335641bc1164\",\n  \"bugs\": {\n    \"url\": \"https://github.com/juliangruber/brace-expansion/issues\"\n  },\n  \"_id\": \"brace-expansion@1.1.0\",\n  \"_shasum\": \"c9b7d03c03f37bc704be100e522b40db8f6cfcd9\",\n  \"_from\": \"brace-expansion@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"2.1.10\",\n  \"_nodeVersion\": \"0.10.32\",\n  \"_npmUser\": {\n    \"name\": \"juliangruber\",\n    \"email\": \"julian@juliangruber.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"juliangruber\",\n      \"email\": \"julian@juliangruber.com\"\n    },\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"isaacs@npmjs.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c9b7d03c03f37bc704be100e522b40db8f6cfcd9\",\n    \"tarball\": \"http://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/bash-comparison.js": "var test = require('tape');\nvar expand = require('..');\nvar fs = require('fs');\nvar resfile = __dirname + '/bash-results.txt';\nvar cases = fs.readFileSync(resfile, 'utf8').split('><><><><');\n\n// throw away the EOF marker\ncases.pop()\n\ntest('matches bash expansions', function(t) {\n  cases.forEach(function(testcase) {\n    var set = testcase.split('\\n');\n    var pattern = set.shift();\n    var actual = expand(pattern);\n\n    // If it expands to the empty string, then it's actually\n    // just nothing, but Bash is a singly typed language, so\n    // \"nothing\" is the same as \"\".\n    if (set.length === 1 && set[0] === '') {\n      set = []\n    } else {\n      // otherwise, strip off the [] that were added so that\n      // \"\" expansions would be preserved properly.\n      set = set.map(function (s) {\n        return s.replace(/^\\[|\\]$/g, '')\n      })\n    }\n\n    t.same(actual, set, pattern);\n  });\n  t.end();\n})\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/dollar.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('ignores ${', function(t) {\n  t.deepEqual(expand('${1..3}'), ['${1..3}']);\n  t.deepEqual(expand('${a,b}${c,d}'), ['${a,b}${c,d}']);\n  t.deepEqual(expand('x${a,b}x${c,d}x'), ['x${a,b}x${c,d}x']);\n  t.end();\n});\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/empty-option.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('empty option', function(t) {\n  t.deepEqual(expand('-v{,,,,}'), [\n    '-v', '-v', '-v', '-v', '-v'\n  ]);\n  t.end();\n});\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/negative-increment.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('negative increment', function(t) {\n  t.deepEqual(expand('{3..1}'), ['3', '2', '1']);\n  t.deepEqual(expand('{10..8}'), ['10', '9', '8']);\n  t.deepEqual(expand('{10..08}'), ['10', '09', '08']);\n  t.deepEqual(expand('{c..a}'), ['c', 'b', 'a']);\n\n  t.deepEqual(expand('{4..0..2}'), ['4', '2', '0']);\n  t.deepEqual(expand('{4..0..-2}'), ['4', '2', '0']);\n  t.deepEqual(expand('{e..a..2}'), ['e', 'c', 'a']);\n\n  t.end();\n});\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/nested.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('nested', function(t) {\n  t.deepEqual(expand('{a,b{1..3},c}'), [\n    'a', 'b1', 'b2', 'b3', 'c'\n  ]);\n  t.deepEqual(expand('{{A..Z},{a..z}}'),\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\n  );\n  t.deepEqual(expand('ppp{,config,oe{,conf}}'), [\n    'ppp', 'pppconfig', 'pppoe', 'pppoeconf'\n  ]);\n  t.end();\n});\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/order.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('order', function(t) {\n  t.deepEqual(expand('a{d,c,b}e'), [\n    'ade', 'ace', 'abe'\n  ]);\n  t.end();\n});\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/pad.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('pad', function(t) {\n  t.deepEqual(expand('{9..11}'), [\n    '9', '10', '11'\n  ]);\n  t.deepEqual(expand('{09..11}'), [\n    '09', '10', '11'\n  ]);\n  t.end();\n});\n\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/same-type.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('x and y of same type', function(t) {\n  t.deepEqual(expand('{a..9}'), ['{a..9}']);\n  t.end();\n});\n",
  "glob/node_modules/minimatch/node_modules/brace-expansion/test/sequence.js": "var test = require('tape');\nvar expand = require('..');\n\ntest('numeric sequences', function(t) {\n  t.deepEqual(expand('a{1..2}b{2..3}c'), [\n    'a1b2c', 'a1b3c', 'a2b2c', 'a2b3c'\n  ]);\n  t.deepEqual(expand('{1..2}{2..3}'), [\n    '12', '13', '22', '23'\n  ]);\n  t.end();\n});\n\ntest('numeric sequences with step count', function(t) {\n  t.deepEqual(expand('{0..8..2}'), [\n    '0', '2', '4', '6', '8'\n  ]);\n  t.deepEqual(expand('{1..8..2}'), [\n    '1', '3', '5', '7'\n  ]);\n  t.end();\n});\n\ntest('numeric sequence with negative x / y', function(t) {\n  t.deepEqual(expand('{3..-2}'), [\n    '3', '2', '1', '0', '-1', '-2'\n  ]);\n  t.end();\n});\n\ntest('alphabetic sequences', function(t) {\n  t.deepEqual(expand('1{a..b}2{b..c}3'), [\n    '1a2b3', '1a2c3', '1b2b3', '1b2c3'\n  ]);\n  t.deepEqual(expand('{a..b}{b..c}'), [\n    'ab', 'ac', 'bb', 'bc'\n  ]);\n  t.end();\n});\n\ntest('alphabetic sequences with step count', function(t) {\n  t.deepEqual(expand('{a..k..2}'), [\n    'a', 'c', 'e', 'g', 'i', 'k'\n  ]);\n  t.deepEqual(expand('{b..k..2}'), [\n    'b', 'd', 'f', 'h', 'j'\n  ]);\n  t.end();\n});\n\n",
  "glob/node_modules/minimatch/package.json": "{\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me\"\n  },\n  \"name\": \"minimatch\",\n  \"description\": \"a glob matcher in javascript\",\n  \"version\": \"2.0.8\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/minimatch.git\"\n  },\n  \"main\": \"minimatch.js\",\n  \"scripts\": {\n    \"pretest\": \"standard minimatch.js test/*.js\",\n    \"test\": \"tap test/*.js\",\n    \"prepublish\": \"browserify -o browser.js -e minimatch.js --bare\"\n  },\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"dependencies\": {\n    \"brace-expansion\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^9.0.3\",\n    \"standard\": \"^3.7.2\",\n    \"tap\": \"\"\n  },\n  \"license\": \"ISC\",\n  \"files\": [\n    \"minimatch.js\",\n    \"browser.js\"\n  ],\n  \"gitHead\": \"0bc7d9c4b2bc816502184862b45bd090de3406a3\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/minimatch/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/minimatch#readme\",\n  \"_id\": \"minimatch@2.0.8\",\n  \"_shasum\": \"0bc20f6bf3570a698ef0ddff902063c6cabda6bf\",\n  \"_from\": \"minimatch@>=2.0.1 <3.0.0\",\n  \"_npmVersion\": \"2.10.0\",\n  \"_nodeVersion\": \"2.0.1\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"isaacs@npmjs.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"0bc20f6bf3570a698ef0ddff902063c6cabda6bf\",\n    \"tarball\": \"http://registry.npmjs.org/minimatch/-/minimatch-2.0.8.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-2.0.8.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/once/node_modules/wrappy/package.json": "{\n  \"name\": \"wrappy\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Callback wrapping utility\",\n  \"main\": \"wrappy.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tap\": \"^0.4.12\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/npm/wrappy.git\"\n  },\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/npm/wrappy/issues\"\n  },\n  \"homepage\": \"https://github.com/npm/wrappy\",\n  \"gitHead\": \"006a8cbac6b99988315834c207896eed71fd069a\",\n  \"_id\": \"wrappy@1.0.1\",\n  \"_shasum\": \"1e65969965ccbc2db4548c6b84a6f2c5aedd4739\",\n  \"_from\": \"wrappy@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"2.0.0\",\n  \"_nodeVersion\": \"0.10.31\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"i@izs.me\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"1e65969965ccbc2db4548c6b84a6f2c5aedd4739\",\n    \"tarball\": \"http://registry.npmjs.org/wrappy/-/wrappy-1.0.1.tgz\"\n  },\n  \"_resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.1.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/once/node_modules/wrappy/test/basic.js": "var test = require('tap').test\nvar wrappy = require('../wrappy.js')\n\ntest('basic', function (t) {\n  function onceifier (cb) {\n    var called = false\n    return function () {\n      if (called) return\n      called = true\n      return cb.apply(this, arguments)\n    }\n  }\n  onceifier.iAmOnce = {}\n  var once = wrappy(onceifier)\n  t.equal(once.iAmOnce, onceifier.iAmOnce)\n\n  var called = 0\n  function boo () {\n    t.equal(called, 0)\n    called++\n  }\n  // has some rando property\n  boo.iAmBoo = true\n\n  var onlyPrintOnce = once(boo)\n\n  onlyPrintOnce() // prints 'boo'\n  onlyPrintOnce() // does nothing\n  t.equal(called, 1)\n\n  // random property is retained!\n  t.equal(onlyPrintOnce.iAmBoo, true)\n\n  var logs = []\n  var logwrap = wrappy(function (msg, cb) {\n    logs.push(msg + ' wrapping cb')\n    return function () {\n      logs.push(msg + ' before cb')\n      var ret = cb.apply(this, arguments)\n      logs.push(msg + ' after cb')\n    }\n  })\n\n  var c = logwrap('foo', function () {\n    t.same(logs, [ 'foo wrapping cb', 'foo before cb' ])\n  })\n  c()\n  t.same(logs, [ 'foo wrapping cb', 'foo before cb', 'foo after cb' ])\n\n  t.end()\n})\n",
  "glob/node_modules/once/node_modules/wrappy/wrappy.js": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n",
  "glob/node_modules/once/once.js": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n",
  "glob/node_modules/once/package.json": "{\n  \"name\": \"once\",\n  \"version\": \"1.3.2\",\n  \"description\": \"Run a function exactly one time\",\n  \"main\": \"once.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"dependencies\": {\n    \"wrappy\": \"1\"\n  },\n  \"devDependencies\": {\n    \"tap\": \"~0.3.0\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/once.git\"\n  },\n  \"keywords\": [\n    \"once\",\n    \"function\",\n    \"one\",\n    \"single\"\n  ],\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"license\": \"ISC\",\n  \"gitHead\": \"e35eed5a7867574e2bf2260a1ba23970958b22f2\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/once/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/once#readme\",\n  \"_id\": \"once@1.3.2\",\n  \"_shasum\": \"d8feeca93b039ec1dcdee7741c92bdac5e28081b\",\n  \"_from\": \"once@>=1.3.0 <2.0.0\",\n  \"_npmVersion\": \"2.9.1\",\n  \"_nodeVersion\": \"2.0.0\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"isaacs@npmjs.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"d8feeca93b039ec1dcdee7741c92bdac5e28081b\",\n    \"tarball\": \"http://registry.npmjs.org/once/-/once-1.3.2.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/once/-/once-1.3.2.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/node_modules/once/test/once.js": "var test = require('tap').test\nvar once = require('../once.js')\n\ntest('once', function (t) {\n  var f = 0\n  function fn (g) {\n    t.equal(f, 0)\n    f ++\n    return f + g + this\n  }\n  fn.ownProperty = {}\n  var foo = once(fn)\n  t.equal(fn.ownProperty, foo.ownProperty)\n  t.notOk(foo.called)\n  for (var i = 0; i < 1E3; i++) {\n    t.same(f, i === 0 ? 0 : 1)\n    var g = foo.call(1, 1)\n    t.ok(foo.called)\n    t.same(g, 3)\n    t.same(f, 1)\n  }\n  t.end()\n})\n",
  "glob/node_modules/path-is-absolute/index.js": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n};\n\nfunction win32(path) {\n\t// https://github.com/joyent/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = !!device && device.charAt(1) !== ':';\n\n\t// UNC paths are always absolute\n\treturn !!result[2] || isUnc;\n};\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n",
  "glob/node_modules/path-is-absolute/package.json": "{\n  \"name\": \"path-is-absolute\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Node.js 0.12 path.isAbsolute() ponyfill\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/sindresorhus/path-is-absolute.git\"\n  },\n  \"author\": {\n    \"name\": \"Sindre Sorhus\",\n    \"email\": \"sindresorhus@gmail.com\",\n    \"url\": \"sindresorhus.com\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node test.js\"\n  },\n  \"files\": [\n    \"index.js\"\n  ],\n  \"keywords\": [\n    \"path\",\n    \"paths\",\n    \"file\",\n    \"dir\",\n    \"absolute\",\n    \"isabsolute\",\n    \"is-absolute\",\n    \"built-in\",\n    \"util\",\n    \"utils\",\n    \"core\",\n    \"ponyfill\",\n    \"polyfill\",\n    \"shim\",\n    \"is\",\n    \"detect\",\n    \"check\"\n  ],\n  \"gitHead\": \"7a76a0c9f2263192beedbe0a820e4d0baee5b7a1\",\n  \"bugs\": {\n    \"url\": \"https://github.com/sindresorhus/path-is-absolute/issues\"\n  },\n  \"homepage\": \"https://github.com/sindresorhus/path-is-absolute\",\n  \"_id\": \"path-is-absolute@1.0.0\",\n  \"_shasum\": \"263dada66ab3f2fb10bf7f9d24dd8f3e570ef912\",\n  \"_from\": \"path-is-absolute@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"2.5.1\",\n  \"_nodeVersion\": \"0.12.0\",\n  \"_npmUser\": {\n    \"name\": \"sindresorhus\",\n    \"email\": \"sindresorhus@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"263dada66ab3f2fb10bf7f9d24dd8f3e570ef912\",\n    \"tarball\": \"http://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "glob/package.json": "{\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"name\": \"glob\",\n  \"description\": \"a little globber\",\n  \"version\": \"5.0.10\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/node-glob.git\"\n  },\n  \"main\": \"glob.js\",\n  \"files\": [\n    \"glob.js\",\n    \"sync.js\",\n    \"common.js\"\n  ],\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"dependencies\": {\n    \"inflight\": \"^1.0.4\",\n    \"inherits\": \"2\",\n    \"minimatch\": \"^2.0.1\",\n    \"once\": \"^1.3.0\",\n    \"path-is-absolute\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"mkdirp\": \"0\",\n    \"rimraf\": \"^2.2.8\",\n    \"tap\": \"^1.1.4\",\n    \"tick\": \"0.0.6\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"npm run benchclean\",\n    \"profclean\": \"rm -f v8.log profile.txt\",\n    \"test\": \"tap test/*.js --cov\",\n    \"test-regen\": \"npm run profclean && TEST_REGEN=1 node test/00-setup.js\",\n    \"bench\": \"bash benchmark.sh\",\n    \"prof\": \"bash prof.sh && cat profile.txt\",\n    \"benchclean\": \"bash benchclean.sh\"\n  },\n  \"license\": \"ISC\",\n  \"gitHead\": \"e3cdccc0e295c2e1d5f40cf74c73ea17a8319c5c\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/node-glob/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/node-glob#readme\",\n  \"_id\": \"glob@5.0.10\",\n  \"_shasum\": \"3ee350319f31f352cef6899a48f6b6b7834c6899\",\n  \"_from\": \"glob@5.0.10\",\n  \"_npmVersion\": \"2.10.1\",\n  \"_nodeVersion\": \"2.0.1\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"isaacs@npmjs.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"3ee350319f31f352cef6899a48f6b6b7834c6899\",\n    \"tarball\": \"http://registry.npmjs.org/glob/-/glob-5.0.10.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.10.tgz\"\n}\n",
  "glob/sync.js": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = fs.realpathSync(p, this.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this.matches[index][e] = true\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  var abs = this._makeAbs(e)\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[this._makeAbs(e)]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    // lstat failed, doesn't exist\n    return null\n  }\n\n  var isSym = lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this.matches[index][prefix] = true\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      return false\n    }\n\n    if (lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n",
  "npmlog/example.js": "var log = require('./log.js')\n\nlog.heading = 'npm'\n\nconsole.error('log.level=silly')\nlog.level = 'silly'\nlog.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\n\nconsole.error('log.level=silent')\nlog.level = 'silent'\nlog.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\n\nconsole.error('log.level=info')\nlog.level = 'info'\nlog.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\nlog.error('404', 'This is a longer\\n'+\n                 'message, with some details\\n'+\n                 'and maybe a stack.\\n'+\n                 new Error('a 404 error').stack)\nlog.addLevel('noise', 10000, {beep: true})\nlog.noise(false, 'LOUD NOISES')\n",
  "npmlog/log.js": "'use strict'\nvar Progress = require('are-we-there-yet')\nvar Gauge = require('gauge')\nvar EE = require('events').EventEmitter\nvar log = exports = module.exports = new EE\nvar util = require('util')\n\nvar ansi = require('ansi')\nlog.cursor = ansi(process.stderr)\nlog.stream = process.stderr\n\n// by default, let ansi decide based on tty-ness.\nvar colorEnabled = undefined\nlog.enableColor = function () {\n  colorEnabled = true\n  this.cursor.enabled = true\n}\nlog.disableColor = function () {\n  colorEnabled = false\n  this.cursor.enabled = false\n}\n\n// default level\nlog.level = 'info'\n\nlog.gauge = new Gauge(log.cursor)\nlog.tracker = new Progress.TrackerGroup()\n\n// no progress bars unless asked\nlog.progressEnabled = false\n\nvar gaugeTheme = undefined\n\nlog.enableUnicode = function () {\n  gaugeTheme = Gauge.unicode\n  log.gauge.setTheme(gaugeTheme)\n}\n\nlog.disableUnicode = function () {\n  gaugeTheme = Gauge.ascii\n  log.gauge.setTheme(gaugeTheme)\n}\n\nvar gaugeTemplate = undefined\nlog.setGaugeTemplate = function (template) {\n  gaugeTemplate = template\n  log.gauge.setTemplate(gaugeTemplate)\n}\n\nlog.enableProgress = function () {\n  if (this.progressEnabled) return\n  this.progressEnabled = true\n  if (this._pause) return\n  this.tracker.on('change', this.showProgress)\n  this.gauge.enable()\n  this.showProgress()\n}\n\nlog.disableProgress = function () {\n  if (!this.progressEnabled) return\n  this.clearProgress()\n  this.progressEnabled = false\n  this.tracker.removeListener('change', this.showProgress)\n  this.gauge.disable()\n}\n\nvar trackerConstructors = ['newGroup', 'newItem', 'newStream']\n\nvar mixinLog = function (tracker) {\n  // mixin the public methods from log into the tracker\n  // (except: conflicts and one's we handle specially)\n  Object.keys(log).forEach(function (P) {\n    if (P[0] === '_') return\n    if (trackerConstructors.filter(function (C) { return C === P }).length) return\n    if (tracker[P]) return\n    if (typeof log[P] !== 'function') return\n    var func = log[P]\n    tracker[P] = function () {\n      return func.apply(log, arguments)\n    }\n  })\n  // if the new tracker is a group, make sure any subtrackers get\n  // mixed in too\n  if (tracker instanceof Progress.TrackerGroup) {\n    trackerConstructors.forEach(function (C) {\n      var func = tracker[C]\n      tracker[C] = function () { return mixinLog(func.apply(tracker, arguments)) }\n    })\n  }\n  return tracker\n}\n\n// Add tracker constructors to the top level log object\ntrackerConstructors.forEach(function (C) {\n  log[C] = function () { return mixinLog(this.tracker[C].apply(this.tracker, arguments)) }\n})\n\nlog.clearProgress = function () {\n  if (!this.progressEnabled) return\n  this.gauge.hide()\n}\n\nlog.showProgress = function (name) {\n  if (!this.progressEnabled) return\n  this.gauge.show(name, this.tracker.completed())\n}.bind(log) // bind for use in tracker's on-change listener\n\n// temporarily stop emitting, but don't drop\nlog.pause = function () {\n  this._paused = true\n}\n\nlog.resume = function () {\n  if (!this._paused) return\n  this._paused = false\n\n  var b = this._buffer\n  this._buffer = []\n  b.forEach(function (m) {\n    this.emitLog(m)\n  }, this)\n  if (this.progressEnabled) this.enableProgress()\n}\n\nlog._buffer = []\n\nvar id = 0\nlog.record = []\nlog.maxRecordSize = 10000\nlog.log = function (lvl, prefix, message) {\n  var l = this.levels[lvl]\n  if (l === undefined) {\n    return this.emit('error', new Error(util.format(\n      'Undefined log level: %j', lvl)))\n  }\n\n  var a = new Array(arguments.length - 2)\n  var stack = null\n  for (var i = 2; i < arguments.length; i ++) {\n    var arg = a[i-2] = arguments[i]\n\n    // resolve stack traces to a plain string.\n    if (typeof arg === 'object' && arg &&\n        (arg instanceof Error) && arg.stack) {\n      arg.stack = stack = arg.stack + ''\n    }\n  }\n  if (stack) a.unshift(stack + '\\n')\n  message = util.format.apply(util, a)\n\n  var m = { id: id++,\n            level: lvl,\n            prefix: String(prefix || ''),\n            message: message,\n            messageRaw: a }\n\n  this.emit('log', m)\n  this.emit('log.' + lvl, m)\n  if (m.prefix) this.emit(m.prefix, m)\n\n  this.record.push(m)\n  var mrs = this.maxRecordSize\n  var n = this.record.length - mrs\n  if (n > mrs / 10) {\n    var newSize = Math.floor(mrs * 0.9)\n    this.record = this.record.slice(-1 * newSize)\n  }\n\n  this.emitLog(m)\n}.bind(log)\n\nlog.emitLog = function (m) {\n  if (this._paused) {\n    this._buffer.push(m)\n    return\n  }\n  if (this.progressEnabled) this.gauge.pulse(m.prefix)\n  var l = this.levels[m.level]\n  if (l === undefined) return\n  if (l < this.levels[this.level]) return\n  if (l > 0 && !isFinite(l)) return\n\n  var style = log.style[m.level]\n  var disp = log.disp[m.level] || m.level\n  this.clearProgress()\n  m.message.split(/\\r?\\n/).forEach(function (line) {\n    if (this.heading) {\n      this.write(this.heading, this.headingStyle)\n      this.write(' ')\n    }\n    this.write(disp, log.style[m.level])\n    var p = m.prefix || ''\n    if (p) this.write(' ')\n    this.write(p, this.prefixStyle)\n    this.write(' ' + line + '\\n')\n  }, this)\n  this.showProgress()\n}\n\nlog.write = function (msg, style) {\n  if (!this.cursor) return\n  if (this.stream !== this.cursor.stream) {\n    this.cursor = ansi(this.stream, { enabled: colorEnabled })\n    var options = {}\n    if (gaugeTheme != null) options.theme = gaugeTheme\n    if (gaugeTemplate != null) options.template = gaugeTemplate\n    this.gauge = new Gauge(options, this.cursor)\n  }\n\n  style = style || {}\n  if (style.fg) this.cursor.fg[style.fg]()\n  if (style.bg) this.cursor.bg[style.bg]()\n  if (style.bold) this.cursor.bold()\n  if (style.underline) this.cursor.underline()\n  if (style.inverse) this.cursor.inverse()\n  if (style.beep) this.cursor.beep()\n  this.cursor.write(msg).reset()\n}\n\nlog.addLevel = function (lvl, n, style, disp) {\n  if (!disp) disp = lvl\n  this.levels[lvl] = n\n  this.style[lvl] = style\n  if (!this[lvl]) this[lvl] = function () {\n    var a = new Array(arguments.length + 1)\n    a[0] = lvl\n    for (var i = 0; i < arguments.length; i ++) {\n      a[i + 1] = arguments[i]\n    }\n    return this.log.apply(this, a)\n  }.bind(this)\n  this.disp[lvl] = disp\n}\n\nlog.prefixStyle = { fg: 'magenta' }\nlog.headingStyle = { fg: 'white', bg: 'black' }\n\nlog.style = {}\nlog.levels = {}\nlog.disp = {}\nlog.addLevel('silly', -Infinity, { inverse: true }, 'sill')\nlog.addLevel('verbose', 1000, { fg: 'blue', bg: 'black' }, 'verb')\nlog.addLevel('info', 2000, { fg: 'green' })\nlog.addLevel('http', 3000, { fg: 'green', bg: 'black' })\nlog.addLevel('warn', 4000, { fg: 'black', bg: 'yellow' }, 'WARN')\nlog.addLevel('error', 5000, { fg: 'red', bg: 'black' }, 'ERR!')\nlog.addLevel('silent', Infinity)\n",
  "npmlog/node_modules/ansi/examples/beep/index.js": "#!/usr/bin/env node\n\n/**\n * Invokes the terminal \"beep\" sound once per second on every exact second.\n */\n\nprocess.title = 'beep'\n\nvar cursor = require('../../')(process.stdout)\n\nfunction beep () {\n  cursor.beep()\n  setTimeout(beep, 1000 - (new Date()).getMilliseconds())\n}\n\nsetTimeout(beep, 1000 - (new Date()).getMilliseconds())\n",
  "npmlog/node_modules/ansi/examples/clear/index.js": "#!/usr/bin/env node\n\n/**\n * Like GNU ncurses \"clear\" command.\n * https://github.com/mscdex/node-ncurses/blob/master/deps/ncurses/progs/clear.c\n */\n\nprocess.title = 'clear'\n\nfunction lf () { return '\\n' }\n\nrequire('../../')(process.stdout)\n  .write(Array.apply(null, Array(process.stdout.getWindowSize()[1])).map(lf).join(''))\n  .eraseData(2)\n  .goto(1, 1)\n",
  "npmlog/node_modules/ansi/examples/cursorPosition.js": "#!/usr/bin/env node\n\nvar tty = require('tty')\nvar cursor = require('../')(process.stdout)\n\n// listen for the queryPosition report on stdin\nprocess.stdin.resume()\nraw(true)\n\nprocess.stdin.once('data', function (b) {\n  var match = /\\[(\\d+)\\;(\\d+)R$/.exec(b.toString())\n  if (match) {\n    var xy = match.slice(1, 3).reverse().map(Number)\n    console.error(xy)\n  }\n\n  // cleanup and close stdin\n  raw(false)\n  process.stdin.pause()\n})\n\n\n// send the query position request code to stdout\ncursor.queryPosition()\n\nfunction raw (mode) {\n  if (process.stdin.setRawMode) {\n    process.stdin.setRawMode(mode)\n  } else {\n    tty.setRawMode(mode)\n  }\n}\n",
  "npmlog/node_modules/ansi/examples/progress/index.js": "#!/usr/bin/env node\n\nvar assert = require('assert')\n  , ansi = require('../../')\n\nfunction Progress (stream, width) {\n  this.cursor = ansi(stream)\n  this.delta = this.cursor.newlines\n  this.width = width | 0 || 10\n  this.open = '['\n  this.close = ']'\n  this.complete = '█'\n  this.incomplete = '_'\n\n  // initial render\n  this.progress = 0\n}\n\nObject.defineProperty(Progress.prototype, 'progress', {\n    get: get\n  , set: set\n  , configurable: true\n  , enumerable: true\n})\n\nfunction get () {\n  return this._progress\n}\n\nfunction set (v) {\n  this._progress = Math.max(0, Math.min(v, 100))\n\n  var w = this.width - this.complete.length - this.incomplete.length\n    , n = w * (this._progress / 100) | 0\n    , i = w - n\n    , com = c(this.complete, n)\n    , inc = c(this.incomplete, i)\n    , delta = this.cursor.newlines - this.delta\n\n  assert.equal(com.length + inc.length, w)\n\n  if (delta > 0) {\n    this.cursor.up(delta)\n    this.delta = this.cursor.newlines\n  }\n\n  this.cursor\n    .horizontalAbsolute(0)\n    .eraseLine(2)\n    .fg.white()\n    .write(this.open)\n    .fg.grey()\n    .bold()\n    .write(com)\n    .resetBold()\n    .write(inc)\n    .fg.white()\n    .write(this.close)\n    .fg.reset()\n    .write('\\n')\n}\n\nfunction c (char, length) {\n  return Array.apply(null, Array(length)).map(function () {\n    return char\n  }).join('')\n}\n\n\n\n\n// Usage\nvar width = parseInt(process.argv[2], 10) || process.stdout.getWindowSize()[0] / 2\n  , p = new Progress(process.stdout, width)\n\n;(function tick () {\n  p.progress += Math.random() * 5\n  p.cursor\n    .eraseLine(2)\n    .write('Progress: ')\n    .bold().write(p.progress.toFixed(2))\n    .write('%')\n    .resetBold()\n    .write('\\n')\n  if (p.progress < 100)\n    setTimeout(tick, 100)\n})()\n",
  "npmlog/node_modules/ansi/lib/ansi.js": "\n/**\n * References:\n *\n *   - http://en.wikipedia.org/wiki/ANSI_escape_code\n *   - http://www.termsys.demon.co.uk/vtansi.htm\n *\n */\n\n/**\n * Module dependencies.\n */\n\nvar emitNewlineEvents = require('./newlines')\n  , prefix = '\\x1b[' // For all escape codes\n  , suffix = 'm'     // Only for color codes\n\n/**\n * The ANSI escape sequences.\n */\n\nvar codes = {\n    up: 'A'\n  , down: 'B'\n  , forward: 'C'\n  , back: 'D'\n  , nextLine: 'E'\n  , previousLine: 'F'\n  , horizontalAbsolute: 'G'\n  , eraseData: 'J'\n  , eraseLine: 'K'\n  , scrollUp: 'S'\n  , scrollDown: 'T'\n  , savePosition: 's'\n  , restorePosition: 'u'\n  , queryPosition: '6n'\n  , hide: '?25l'\n  , show: '?25h'\n}\n\n/**\n * Rendering ANSI codes.\n */\n\nvar styles = {\n    bold: 1\n  , italic: 3\n  , underline: 4\n  , inverse: 7\n}\n\n/**\n * The negating ANSI code for the rendering modes.\n */\n\nvar reset = {\n    bold: 22\n  , italic: 23\n  , underline: 24\n  , inverse: 27\n}\n\n/**\n * The standard, styleable ANSI colors.\n */\n\nvar colors = {\n    white: 37\n  , black: 30\n  , blue: 34\n  , cyan: 36\n  , green: 32\n  , magenta: 35\n  , red: 31\n  , yellow: 33\n  , grey: 90\n  , brightBlack: 90\n  , brightRed: 91\n  , brightGreen: 92\n  , brightYellow: 93\n  , brightBlue: 94\n  , brightMagenta: 95\n  , brightCyan: 96\n  , brightWhite: 97\n}\n\n\n/**\n * Creates a Cursor instance based off the given `writable stream` instance.\n */\n\nfunction ansi (stream, options) {\n  if (stream._ansicursor) {\n    return stream._ansicursor\n  } else {\n    return stream._ansicursor = new Cursor(stream, options)\n  }\n}\nmodule.exports = exports = ansi\n\n/**\n * The `Cursor` class.\n */\n\nfunction Cursor (stream, options) {\n  if (!(this instanceof Cursor)) {\n    return new Cursor(stream, options)\n  }\n  if (typeof stream != 'object' || typeof stream.write != 'function') {\n    throw new Error('a valid Stream instance must be passed in')\n  }\n\n  // the stream to use\n  this.stream = stream\n\n  // when 'enabled' is false then all the functions are no-ops except for write()\n  this.enabled = options && options.enabled\n  if (typeof this.enabled === 'undefined') {\n    this.enabled = stream.isTTY\n  }\n  this.enabled = !!this.enabled\n\n  // then `buffering` is true, then `write()` calls are buffered in\n  // memory until `flush()` is invoked\n  this.buffering = !!(options && options.buffering)\n  this._buffer = []\n\n  // controls the foreground and background colors\n  this.fg = this.foreground = new Colorer(this, 0)\n  this.bg = this.background = new Colorer(this, 10)\n\n  // defaults\n  this.Bold = false\n  this.Italic = false\n  this.Underline = false\n  this.Inverse = false\n\n  // keep track of the number of \"newlines\" that get encountered\n  this.newlines = 0\n  emitNewlineEvents(stream)\n  stream.on('newline', function () {\n    this.newlines++\n  }.bind(this))\n}\nexports.Cursor = Cursor\n\n/**\n * Helper function that calls `write()` on the underlying Stream.\n * Returns `this` instead of the write() return value to keep\n * the chaining going.\n */\n\nCursor.prototype.write = function (data) {\n  if (this.buffering) {\n    this._buffer.push(arguments)\n  } else {\n    this.stream.write.apply(this.stream, arguments)\n  }\n  return this\n}\n\n/**\n * Buffer `write()` calls into memory.\n *\n * @api public\n */\n\nCursor.prototype.buffer = function () {\n  this.buffering = true\n  return this\n}\n\n/**\n * Write out the in-memory buffer.\n *\n * @api public\n */\n\nCursor.prototype.flush = function () {\n  this.buffering = false\n  var str = this._buffer.map(function (args) {\n    if (args.length != 1) throw new Error('unexpected args length! ' + args.length);\n    return args[0];\n  }).join('');\n  this._buffer.splice(0); // empty\n  this.write(str);\n  return this\n}\n\n\n/**\n * The `Colorer` class manages both the background and foreground colors.\n */\n\nfunction Colorer (cursor, base) {\n  this.current = null\n  this.cursor = cursor\n  this.base = base\n}\nexports.Colorer = Colorer\n\n/**\n * Write an ANSI color code, ensuring that the same code doesn't get rewritten.\n */\n\nColorer.prototype._setColorCode = function setColorCode (code) {\n  var c = String(code)\n  if (this.current === c) return\n  this.cursor.enabled && this.cursor.write(prefix + c + suffix)\n  this.current = c\n  return this\n}\n\n\n/**\n * Set up the positional ANSI codes.\n */\n\nObject.keys(codes).forEach(function (name) {\n  var code = String(codes[name])\n  Cursor.prototype[name] = function () {\n    var c = code\n    if (arguments.length > 0) {\n      c = toArray(arguments).map(Math.round).join(';') + code\n    }\n    this.enabled && this.write(prefix + c)\n    return this\n  }\n})\n\n/**\n * Set up the functions for the rendering ANSI codes.\n */\n\nObject.keys(styles).forEach(function (style) {\n  var name = style[0].toUpperCase() + style.substring(1)\n    , c = styles[style]\n    , r = reset[style]\n\n  Cursor.prototype[style] = function () {\n    if (this[name]) return\n    this.enabled && this.write(prefix + c + suffix)\n    this[name] = true\n    return this\n  }\n\n  Cursor.prototype['reset' + name] = function () {\n    if (!this[name]) return\n    this.enabled && this.write(prefix + r + suffix)\n    this[name] = false\n    return this\n  }\n})\n\n/**\n * Setup the functions for the standard colors.\n */\n\nObject.keys(colors).forEach(function (color) {\n  var code = colors[color]\n\n  Colorer.prototype[color] = function () {\n    this._setColorCode(this.base + code)\n    return this.cursor\n  }\n\n  Cursor.prototype[color] = function () {\n    return this.foreground[color]()\n  }\n})\n\n/**\n * Makes a beep sound!\n */\n\nCursor.prototype.beep = function () {\n  this.enabled && this.write('\\x07')\n  return this\n}\n\n/**\n * Moves cursor to specific position\n */\n\nCursor.prototype.goto = function (x, y) {\n  x = x | 0\n  y = y | 0\n  this.enabled && this.write(prefix + y + ';' + x + 'H')\n  return this\n}\n\n/**\n * Resets the color.\n */\n\nColorer.prototype.reset = function () {\n  this._setColorCode(this.base + 39)\n  return this.cursor\n}\n\n/**\n * Resets all ANSI formatting on the stream.\n */\n\nCursor.prototype.reset = function () {\n  this.enabled && this.write(prefix + '0' + suffix)\n  this.Bold = false\n  this.Italic = false\n  this.Underline = false\n  this.Inverse = false\n  this.foreground.current = null\n  this.background.current = null\n  return this\n}\n\n/**\n * Sets the foreground color with the given RGB values.\n * The closest match out of the 216 colors is picked.\n */\n\nColorer.prototype.rgb = function (r, g, b) {\n  var base = this.base + 38\n    , code = rgb(r, g, b)\n  this._setColorCode(base + ';5;' + code)\n  return this.cursor\n}\n\n/**\n * Same as `cursor.fg.rgb(r, g, b)`.\n */\n\nCursor.prototype.rgb = function (r, g, b) {\n  return this.foreground.rgb(r, g, b)\n}\n\n/**\n * Accepts CSS color codes for use with ANSI escape codes.\n * For example: `#FF000` would be bright red.\n */\n\nColorer.prototype.hex = function (color) {\n  return this.rgb.apply(this, hex(color))\n}\n\n/**\n * Same as `cursor.fg.hex(color)`.\n */\n\nCursor.prototype.hex = function (color) {\n  return this.foreground.hex(color)\n}\n\n\n// UTIL FUNCTIONS //\n\n/**\n * Translates a 255 RGB value to a 0-5 ANSI RGV value,\n * then returns the single ANSI color code to use.\n */\n\nfunction rgb (r, g, b) {\n  var red = r / 255 * 5\n    , green = g / 255 * 5\n    , blue = b / 255 * 5\n  return rgb5(red, green, blue)\n}\n\n/**\n * Turns rgb 0-5 values into a single ANSI color code to use.\n */\n\nfunction rgb5 (r, g, b) {\n  var red = Math.round(r)\n    , green = Math.round(g)\n    , blue = Math.round(b)\n  return 16 + (red*36) + (green*6) + blue\n}\n\n/**\n * Accepts a hex CSS color code string (# is optional) and\n * translates it into an Array of 3 RGB 0-255 values, which\n * can then be used with rgb().\n */\n\nfunction hex (color) {\n  var c = color[0] === '#' ? color.substring(1) : color\n    , r = c.substring(0, 2)\n    , g = c.substring(2, 4)\n    , b = c.substring(4, 6)\n  return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)]\n}\n\n/**\n * Turns an array-like object into a real array.\n */\n\nfunction toArray (a) {\n  var i = 0\n    , l = a.length\n    , rtn = []\n  for (; i<l; i++) {\n    rtn.push(a[i])\n  }\n  return rtn\n}\n",
  "npmlog/node_modules/ansi/lib/newlines.js": "\n/**\n * Accepts any node Stream instance and hijacks its \"write()\" function,\n * so that it can count any newlines that get written to the output.\n *\n * When a '\\n' byte is encountered, then a \"newline\" event will be emitted\n * on the stream, with no arguments. It is up to the listeners to determine\n * any necessary deltas required for their use-case.\n *\n * Ex:\n *\n *   var cursor = ansi(process.stdout)\n *     , ln = 0\n *   process.stdout.on('newline', function () {\n *    ln++\n *   })\n */\n\n/**\n * Module dependencies.\n */\n\nvar assert = require('assert')\nvar NEWLINE = '\\n'.charCodeAt(0)\n\nfunction emitNewlineEvents (stream) {\n  if (stream._emittingNewlines) {\n    // already emitting newline events\n    return\n  }\n\n  var write = stream.write\n\n  stream.write = function (data) {\n    // first write the data\n    var rtn = write.apply(stream, arguments)\n\n    if (stream.listeners('newline').length > 0) {\n      var len = data.length\n        , i = 0\n      // now try to calculate any deltas\n      if (typeof data == 'string') {\n        for (; i<len; i++) {\n          processByte(stream, data.charCodeAt(i))\n        }\n      } else {\n        // buffer\n        for (; i<len; i++) {\n          processByte(stream, data[i])\n        }\n      }\n    }\n\n    return rtn\n  }\n\n  stream._emittingNewlines = true\n}\nmodule.exports = emitNewlineEvents\n\n\n/**\n * Processes an individual byte being written to a stream\n */\n\nfunction processByte (stream, b) {\n  assert.equal(typeof b, 'number')\n  if (b === NEWLINE) {\n    stream.emit('newline')\n  }\n}\n",
  "npmlog/node_modules/ansi/package.json": "{\n  \"name\": \"ansi\",\n  \"description\": \"Advanced ANSI formatting tool for Node.js\",\n  \"keywords\": [\n    \"ansi\",\n    \"formatting\",\n    \"cursor\",\n    \"color\",\n    \"terminal\",\n    \"rgb\",\n    \"256\",\n    \"stream\"\n  ],\n  \"version\": \"0.3.0\",\n  \"author\": {\n    \"name\": \"Nathan Rajlich\",\n    \"email\": \"nathan@tootallnate.net\",\n    \"url\": \"http://tootallnate.net\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/TooTallNate/ansi.js.git\"\n  },\n  \"main\": \"./lib/ansi.js\",\n  \"bugs\": {\n    \"url\": \"https://github.com/TooTallNate/ansi.js/issues\"\n  },\n  \"homepage\": \"https://github.com/TooTallNate/ansi.js\",\n  \"_id\": \"ansi@0.3.0\",\n  \"_shasum\": \"74b2f1f187c8553c7f95015bcb76009fb43d38e0\",\n  \"_from\": \"ansi@>=0.3.0 <0.4.0\",\n  \"_npmVersion\": \"1.4.9\",\n  \"_npmUser\": {\n    \"name\": \"tootallnate\",\n    \"email\": \"nathan@tootallnate.net\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"TooTallNate\",\n      \"email\": \"nathan@tootallnate.net\"\n    },\n    {\n      \"name\": \"tootallnate\",\n      \"email\": \"nathan@tootallnate.net\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"74b2f1f187c8553c7f95015bcb76009fb43d38e0\",\n    \"tarball\": \"http://registry.npmjs.org/ansi/-/ansi-0.3.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/ansi/-/ansi-0.3.0.tgz\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/index.js": "\"use strict\"\nvar stream = require(\"readable-stream\");\nvar EventEmitter = require(\"events\").EventEmitter\nvar util = require(\"util\")\nvar delegate = require(\"delegates\")\n\nvar TrackerGroup = exports.TrackerGroup = function (name) {\n  EventEmitter.call(this)\n  this.name = name\n  this.trackGroup = []\n  var self = this\n  this.totalWeight = 0\n  var noteChange = this.noteChange = function (name) {\n    self.emit(\"change\", name || this.name)\n  }.bind(this)\n  this.trackGroup.forEach(function(unit) {\n    unit.on(\"change\", noteChange)\n  })\n}\nutil.inherits(TrackerGroup, EventEmitter)\n\nTrackerGroup.prototype.completed = function () {\n  if (this.trackGroup.length==0) return 0\n  var valPerWeight = 1 / this.totalWeight\n  var completed = 0\n  this.trackGroup.forEach(function(T) {\n    completed += valPerWeight * T.weight *  T.completed()\n  })\n  return completed\n}\n\nTrackerGroup.prototype.addUnit = function (unit, weight, noChange) {\n  unit.weight = weight || 1\n  this.totalWeight += unit.weight\n  this.trackGroup.push(unit)\n  unit.on(\"change\", this.noteChange)\n  if (! noChange) this.emit(\"change\", this.name)\n  return unit\n}\n\nTrackerGroup.prototype.newGroup = function (name, weight) {\n  return this.addUnit(new TrackerGroup(name), weight)\n}\n\nTrackerGroup.prototype.newItem = function (name, todo, weight) {\n  return this.addUnit(new Tracker(name, todo), weight)\n}\n\nTrackerGroup.prototype.newStream = function (name, todo, weight) {\n  return this.addUnit(new TrackerStream(name, todo), weight)\n}\n\nTrackerGroup.prototype.finish = function () {\n  if (! this.trackGroup.length) { this.addUnit(new Tracker(), 1, true) }\n  var self = this\n  this.trackGroup.forEach(function(T) {\n    T.removeListener(\"change\", self.noteChange)\n    T.finish()\n  })\n  this.emit(\"change\", this.name)\n}\n\nvar buffer = \"                                  \"\nTrackerGroup.prototype.debug = function (depth) {\n  depth = depth || 0\n  var indent = depth ? buffer.substr(0,depth) : \"\"\n  var output = indent + (this.name||\"top\") + \": \" + this.completed() + \"\\n\"\n  this.trackGroup.forEach(function(T) {\n    if (T instanceof TrackerGroup) {\n      output += T.debug(depth + 1)\n    }\n    else {\n      output += indent + \" \" + T.name + \": \" + T.completed() + \"\\n\"\n    }\n  })\n  return output\n}\n\nvar Tracker = exports.Tracker = function (name,todo) {\n  EventEmitter.call(this)\n  this.name = name\n  this.workDone =  0\n  this.workTodo = todo || 0\n}\nutil.inherits(Tracker, EventEmitter)\n\nTracker.prototype.completed = function () {\n  return this.workTodo==0 ? 0 : this.workDone / this.workTodo\n}\n\nTracker.prototype.addWork = function (work) {\n  this.workTodo += work\n  this.emit(\"change\", this.name)\n}\n\nTracker.prototype.completeWork = function (work) {\n  this.workDone += work\n  if (this.workDone > this.workTodo) this.workDone = this.workTodo\n  this.emit(\"change\", this.name)\n}\n\nTracker.prototype.finish = function () {\n  this.workTodo = this.workDone = 1\n  this.emit(\"change\", this.name)\n}\n\n\nvar TrackerStream = exports.TrackerStream = function (name, size, options) {\n  stream.Transform.call(this, options)\n  this.tracker = new Tracker(name, size)\n  this.name = name\n  var self = this\n  this.tracker.on(\"change\", function (name) { self.emit(\"change\", name) })\n}\nutil.inherits(TrackerStream, stream.Transform)\n\nTrackerStream.prototype._transform = function (data, encoding, cb) {\n  this.tracker.completeWork(data.length ? data.length : 1)\n  this.push(data)\n  cb()\n}\n\nTrackerStream.prototype._flush = function (cb) {\n  this.tracker.finish()\n  cb()\n}\n\ndelegate(TrackerStream.prototype, \"tracker\")\n  .method(\"completed\")\n  .method(\"addWork\")\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/delegates/index.js": "\n/**\n * Expose `Delegator`.\n */\n\nmodule.exports = Delegator;\n\n/**\n * Initialize a delegator.\n *\n * @param {Object} proto\n * @param {String} target\n * @api public\n */\n\nfunction Delegator(proto, target) {\n  if (!(this instanceof Delegator)) return new Delegator(proto, target);\n  this.proto = proto;\n  this.target = target;\n  this.methods = [];\n  this.getters = [];\n  this.setters = [];\n  this.fluents = [];\n}\n\n/**\n * Delegate method `name`.\n *\n * @param {String} name\n * @return {Delegator} self\n * @api public\n */\n\nDelegator.prototype.method = function(name){\n  var proto = this.proto;\n  var target = this.target;\n  this.methods.push(name);\n\n  proto[name] = function(){\n    return this[target][name].apply(this[target], arguments);\n  };\n\n  return this;\n};\n\n/**\n * Delegator accessor `name`.\n *\n * @param {String} name\n * @return {Delegator} self\n * @api public\n */\n\nDelegator.prototype.access = function(name){\n  return this.getter(name).setter(name);\n};\n\n/**\n * Delegator getter `name`.\n *\n * @param {String} name\n * @return {Delegator} self\n * @api public\n */\n\nDelegator.prototype.getter = function(name){\n  var proto = this.proto;\n  var target = this.target;\n  this.getters.push(name);\n\n  proto.__defineGetter__(name, function(){\n    return this[target][name];\n  });\n\n  return this;\n};\n\n/**\n * Delegator setter `name`.\n *\n * @param {String} name\n * @return {Delegator} self\n * @api public\n */\n\nDelegator.prototype.setter = function(name){\n  var proto = this.proto;\n  var target = this.target;\n  this.setters.push(name);\n\n  proto.__defineSetter__(name, function(val){\n    return this[target][name] = val;\n  });\n\n  return this;\n};\n\n/**\n * Delegator fluent accessor\n *\n * @param {String} name\n * @return {Delegator} self\n * @api public\n */\n\nDelegator.prototype.fluent = function (name) {\n  var proto = this.proto;\n  var target = this.target;\n  this.fluents.push(name);\n\n  proto[name] = function(val){\n    if ('undefined' != typeof val) {\n      this[target][name] = val;\n      return this;\n    } else {\n      return this[target][name];\n    }\n  };\n\n  return this;\n};\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/delegates/package.json": "{\n  \"name\": \"delegates\",\n  \"version\": \"0.1.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/visionmedia/node-delegates\"\n  },\n  \"description\": \"delegate methods and accessors to another property\",\n  \"keywords\": [\n    \"delegate\",\n    \"delegation\"\n  ],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"mocha\": \"*\",\n    \"should\": \"*\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/visionmedia/node-delegates/issues\"\n  },\n  \"homepage\": \"https://github.com/visionmedia/node-delegates\",\n  \"_id\": \"delegates@0.1.0\",\n  \"_shasum\": \"b4b57be11a1653517a04b27f0949bdc327dfe390\",\n  \"_from\": \"delegates@>=0.1.0 <0.2.0\",\n  \"_npmVersion\": \"1.4.9\",\n  \"_npmUser\": {\n    \"name\": \"dominicbarnes\",\n    \"email\": \"dominic@dbarnes.info\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"tjholowaychuk\",\n      \"email\": \"tj@vision-media.ca\"\n    },\n    {\n      \"name\": \"dominicbarnes\",\n      \"email\": \"dominic@dbarnes.info\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"b4b57be11a1653517a04b27f0949bdc327dfe390\",\n    \"tarball\": \"http://registry.npmjs.org/delegates/-/delegates-0.1.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/delegates/-/delegates-0.1.0.tgz\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/delegates/test/index.js": "\nvar assert = require('assert');\nvar delegate = require('..');\n\ndescribe('.method(name)', function(){\n  it('should delegate methods', function(){\n    var obj = {};\n\n    obj.request = {\n      foo: function(bar){\n        assert(this == obj.request);\n        return bar;\n      }\n    };\n\n    delegate(obj, 'request').method('foo');\n\n    obj.foo('something').should.equal('something');\n  })\n})\n\ndescribe('.getter(name)', function(){\n  it('should delegate getters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return 'text/html';\n      }\n    }\n\n    delegate(obj, 'request').getter('type');\n\n    obj.type.should.equal('text/html');\n  })\n})\n\ndescribe('.setter(name)', function(){\n  it('should delegate setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').setter('type');\n\n    obj.type = 'hey';\n    obj.request.type.should.equal('HEY');\n  })\n})\n\ndescribe('.access(name)', function(){\n  it('should delegate getters and setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').access('type');\n\n    obj.type = 'hey';\n    obj.type.should.equal('HEY');\n  })\n})\n\ndescribe('.fluent(name)', function () {\n  it('should delegate in a fluent fashion', function () {\n    var obj = {\n      settings: {\n        env: 'development'\n      }\n    };\n\n    delegate(obj, 'settings').fluent('env');\n\n    obj.env().should.equal('development');\n    obj.env('production').should.equal(obj);\n    obj.settings.env.should.equal('production');\n  })\n})\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/duplex.js": "module.exports = require(\"./lib/_stream_duplex.js\")\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_duplex.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_passthrough.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_readable.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_transform.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/lib/_stream_writable.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/core-util-is/lib/util.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/core-util-is/package.json": "{\n  \"name\": \"core-util-is\",\n  \"version\": \"1.0.1\",\n  \"description\": \"The `util.is*` functions introduced in Node v0.12.\",\n  \"main\": \"lib/util.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/core-util-is.git\"\n  },\n  \"keywords\": [\n    \"util\",\n    \"isBuffer\",\n    \"isArray\",\n    \"isNumber\",\n    \"isString\",\n    \"isRegExp\",\n    \"isThis\",\n    \"isThat\",\n    \"polyfill\"\n  ],\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/core-util-is/issues\"\n  },\n  \"readme\": \"# core-util-is\\n\\nThe `util.is*` functions introduced in Node v0.12.\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"homepage\": \"https://github.com/isaacs/core-util-is\",\n  \"_id\": \"core-util-is@1.0.1\",\n  \"dist\": {\n    \"shasum\": \"6b07085aef9a3ccac6ee53bf9d3df0c1521a5538\",\n    \"tarball\": \"http://registry.npmjs.org/core-util-is/-/core-util-is-1.0.1.tgz\"\n  },\n  \"_from\": \"core-util-is@>=1.0.0 <1.1.0\",\n  \"_npmVersion\": \"1.3.23\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"i@izs.me\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"6b07085aef9a3ccac6ee53bf9d3df0c1521a5538\",\n  \"_resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.1.tgz\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/core-util-is/util.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && objectToString(e) === '[object Error]';\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return arg instanceof Buffer;\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/inherits/inherits_browser.js": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/inherits/inherits.js": "module.exports = require('util').inherits\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/inherits/package.json": "{\n  \"name\": \"inherits\",\n  \"description\": \"Browser-friendly inheritance fully compatible with standard node.js inherits()\",\n  \"version\": \"2.0.1\",\n  \"keywords\": [\n    \"inheritance\",\n    \"class\",\n    \"klass\",\n    \"oop\",\n    \"object-oriented\",\n    \"inherits\",\n    \"browser\",\n    \"browserify\"\n  ],\n  \"main\": \"./inherits.js\",\n  \"browser\": \"./inherits_browser.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/inherits.git\"\n  },\n  \"license\": \"ISC\",\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/inherits/issues\"\n  },\n  \"_id\": \"inherits@2.0.1\",\n  \"dist\": {\n    \"shasum\": \"b17d08d326b4423e568eff719f91b0b1cbdf69f1\",\n    \"tarball\": \"http://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\"\n  },\n  \"_from\": \"inherits@>=2.0.1 <2.1.0\",\n  \"_npmVersion\": \"1.3.8\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"i@izs.me\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"b17d08d326b4423e568eff719f91b0b1cbdf69f1\",\n  \"_resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\",\n  \"readme\": \"ERROR: No README data found!\",\n  \"homepage\": \"https://github.com/isaacs/inherits#readme\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/inherits/test.js": "var inherits = require('./inherits.js')\nvar assert = require('assert')\n\nfunction test(c) {\n  assert(c.constructor === Child)\n  assert(c.constructor.super_ === Parent)\n  assert(Object.getPrototypeOf(c) === Child.prototype)\n  assert(Object.getPrototypeOf(Object.getPrototypeOf(c)) === Parent.prototype)\n  assert(c instanceof Child)\n  assert(c instanceof Parent)\n}\n\nfunction Child() {\n  Parent.call(this)\n  test(this)\n}\n\nfunction Parent() {}\n\ninherits(Child, Parent)\n\nvar c = new Child\ntest(c)\n\nconsole.log('ok')\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/isarray/build/build.js": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n  var index = path + '/index.js';\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n  }\n\n  if (require.aliases.hasOwnProperty(index)) {\n    return require.aliases[index];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"isarray/index.js\", function(exports, require, module){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n});\nrequire.alias(\"isarray/index.js\", \"isarray/index.js\");\n\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/isarray/component.json": "{\n  \"name\" : \"isarray\",\n  \"description\" : \"Array#isArray for older browsers\",\n  \"version\" : \"0.0.1\",\n  \"repository\" : \"juliangruber/isarray\",\n  \"homepage\": \"https://github.com/juliangruber/isarray\",\n  \"main\" : \"index.js\",\n  \"scripts\" : [\n    \"index.js\"\n  ],\n  \"dependencies\" : {},\n  \"keywords\": [\"browser\",\"isarray\",\"array\"],\n  \"author\": {\n    \"name\": \"Julian Gruber\",\n    \"email\": \"mail@juliangruber.com\",\n    \"url\": \"http://juliangruber.com\"\n  },\n  \"license\": \"MIT\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/isarray/index.js": "module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/isarray/package.json": "{\n  \"name\": \"isarray\",\n  \"description\": \"Array#isArray for older browsers\",\n  \"version\": \"0.0.1\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/juliangruber/isarray.git\"\n  },\n  \"homepage\": \"https://github.com/juliangruber/isarray\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tap\": \"*\"\n  },\n  \"keywords\": [\n    \"browser\",\n    \"isarray\",\n    \"array\"\n  ],\n  \"author\": {\n    \"name\": \"Julian Gruber\",\n    \"email\": \"mail@juliangruber.com\",\n    \"url\": \"http://juliangruber.com\"\n  },\n  \"license\": \"MIT\",\n  \"_id\": \"isarray@0.0.1\",\n  \"dist\": {\n    \"shasum\": \"8a18acfca9a8f4177e09abfc6038939b05d1eedf\",\n    \"tarball\": \"http://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\"\n  },\n  \"_from\": \"isarray@0.0.1\",\n  \"_npmVersion\": \"1.2.18\",\n  \"_npmUser\": {\n    \"name\": \"juliangruber\",\n    \"email\": \"julian@juliangruber.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"juliangruber\",\n      \"email\": \"julian@juliangruber.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"8a18acfca9a8f4177e09abfc6038939b05d1eedf\",\n  \"_resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",\n  \"bugs\": {\n    \"url\": \"https://github.com/juliangruber/isarray/issues\"\n  },\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/index.js": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/package.json": "{\n  \"name\": \"string_decoder\",\n  \"version\": \"0.10.31\",\n  \"description\": \"The string_decoder module from Node core\",\n  \"main\": \"index.js\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tap\": \"~0.4.8\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test/simple/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/rvagg/string_decoder.git\"\n  },\n  \"homepage\": \"https://github.com/rvagg/string_decoder\",\n  \"keywords\": [\n    \"string\",\n    \"decoder\",\n    \"browser\",\n    \"browserify\"\n  ],\n  \"license\": \"MIT\",\n  \"gitHead\": \"d46d4fd87cf1d06e031c23f1ba170ca7d4ade9a0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/rvagg/string_decoder/issues\"\n  },\n  \"_id\": \"string_decoder@0.10.31\",\n  \"_shasum\": \"62e203bc41766c6c28c9fc84301dab1c5310fa94\",\n  \"_from\": \"string_decoder@>=0.10.0 <0.11.0\",\n  \"_npmVersion\": \"1.4.23\",\n  \"_npmUser\": {\n    \"name\": \"rvagg\",\n    \"email\": \"rod@vagg.org\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"substack\",\n      \"email\": \"mail@substack.net\"\n    },\n    {\n      \"name\": \"rvagg\",\n      \"email\": \"rod@vagg.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"62e203bc41766c6c28c9fc84301dab1c5310fa94\",\n    \"tarball\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/package.json": "{\n  \"name\": \"readable-stream\",\n  \"version\": \"1.1.13\",\n  \"description\": \"Streams3, a user-land copy of the stream library from Node.js v0.11.x\",\n  \"main\": \"readable.js\",\n  \"dependencies\": {\n    \"core-util-is\": \"~1.0.0\",\n    \"isarray\": \"0.0.1\",\n    \"string_decoder\": \"~0.10.x\",\n    \"inherits\": \"~2.0.1\"\n  },\n  \"devDependencies\": {\n    \"tap\": \"~0.2.6\"\n  },\n  \"scripts\": {\n    \"test\": \"tap test/simple/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/readable-stream.git\"\n  },\n  \"keywords\": [\n    \"readable\",\n    \"stream\",\n    \"pipe\"\n  ],\n  \"browser\": {\n    \"util\": false\n  },\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"license\": \"MIT\",\n  \"gitHead\": \"3b672fd7ae92acf5b4ffdbabf74b372a0a56b051\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/readable-stream/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/readable-stream\",\n  \"_id\": \"readable-stream@1.1.13\",\n  \"_shasum\": \"f6eef764f514c89e2b9e23146a75ba106756d23e\",\n  \"_from\": \"readable-stream@>=1.1.13 <2.0.0\",\n  \"_npmVersion\": \"1.4.23\",\n  \"_npmUser\": {\n    \"name\": \"rvagg\",\n    \"email\": \"rod@vagg.org\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    },\n    {\n      \"name\": \"tootallnate\",\n      \"email\": \"nathan@tootallnate.net\"\n    },\n    {\n      \"name\": \"rvagg\",\n      \"email\": \"rod@vagg.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"f6eef764f514c89e2b9e23146a75ba106756d23e\",\n    \"tarball\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-1.1.13.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.13.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/passthrough.js": "module.exports = require(\"./lib/_stream_passthrough.js\")\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/readable.js": "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/transform.js": "module.exports = require(\"./lib/_stream_transform.js\")\n",
  "npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/writable.js": "module.exports = require(\"./lib/_stream_writable.js\")\n",
  "npmlog/node_modules/are-we-there-yet/package.json": "{\n  \"name\": \"are-we-there-yet\",\n  \"version\": \"1.0.4\",\n  \"description\": \"Keep track of the overall completion of many dispirate processes\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/iarna/are-we-there-yet.git\"\n  },\n  \"author\": {\n    \"name\": \"Rebecca Turner\",\n    \"url\": \"http://re-becca.org\"\n  },\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/iarna/are-we-there-yet/issues\"\n  },\n  \"homepage\": \"https://github.com/iarna/are-we-there-yet\",\n  \"devDependencies\": {\n    \"tap\": \"^0.4.13\"\n  },\n  \"dependencies\": {\n    \"delegates\": \"^0.1.0\",\n    \"readable-stream\": \"^1.1.13\"\n  },\n  \"gitHead\": \"7ce414849b81ab83935a935275def01914821bde\",\n  \"_id\": \"are-we-there-yet@1.0.4\",\n  \"_shasum\": \"527fe389f7bcba90806106b99244eaa07e886f85\",\n  \"_from\": \"are-we-there-yet@>=1.0.0 <1.1.0\",\n  \"_npmVersion\": \"2.0.0\",\n  \"_npmUser\": {\n    \"name\": \"iarna\",\n    \"email\": \"me@re-becca.org\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"iarna\",\n      \"email\": \"me@re-becca.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"527fe389f7bcba90806106b99244eaa07e886f85\",\n    \"tarball\": \"http://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.0.4.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.0.4.tgz\"\n}\n",
  "npmlog/node_modules/are-we-there-yet/test/tracker.js": "\"use strict\"\nvar test = require(\"tap\").test\nvar Tracker = require(\"../index.js\").Tracker\n\nvar timeoutError = new Error(\"timeout\")\nvar testEvent = function (obj,event,next) {\n  var timeout = setTimeout(function(){\n    obj.removeListener(event, eventHandler)\n    next(timeoutError)\n  }, 10)\n  var eventHandler = function () {\n    var args = Array.prototype.slice.call(arguments)\n    args.unshift(null)\n    clearTimeout(timeout)\n    next.apply(null, args)\n  }\n  obj.once(event, eventHandler)\n}\n\ntest(\"Tracker\", function (t) {\n  t.plan(10)\n\n  var name = \"test\"\n  var track = new Tracker(name)\n\n  t.is(track.completed(), 0, \"Nothing todo is 0 completion\")\n\n  var todo = 100\n  track = new Tracker(name, todo)\n  t.is(track.completed(), 0, \"Nothing done is 0 completion\")\n\n  testEvent(track, \"change\", afterCompleteWork)\n  track.completeWork(100)\n  function afterCompleteWork(er, onChangeName) {\n    t.is(er, null, \"completeWork: on change event fired\")\n    t.is(onChangeName, name, \"completeWork: on change emits the correct name\")\n  }\n  t.is(track.completed(), 1, \"completeWork: 100% completed\")\n\n  testEvent(track, \"change\", afterAddWork)\n  track.addWork(100)\n  function afterAddWork(er, onChangeName) {\n    t.is(er, null, \"addWork: on change event fired\")\n    t.is(onChangeName, name, \"addWork: on change emits the correct name\")\n  }\n  t.is(track.completed(), 0.5, \"addWork: 50% completed\")\n\n\n  track.completeWork(200)\n  t.is(track.completed(), 1, \"completeWork: Over completion is still only 100% complete\")\n\n  track = new Tracker(name, todo)\n  track.completeWork(50)\n  track.finish()\n  t.is(track.completed(), 1, \"finish: Explicitly finishing moves to 100%\")\n})\n",
  "npmlog/node_modules/are-we-there-yet/test/trackergroup.js": "\"use strict\"\nvar test = require(\"tap\").test\nvar Tracker = require(\"../index.js\").Tracker\nvar TrackerGroup = require(\"../index.js\").TrackerGroup\n\nvar timeoutError = new Error(\"timeout\")\nvar testEvent = function (obj,event,next) {\n  var timeout = setTimeout(function(){\n    obj.removeListener(event, eventHandler)\n    next(timeoutError)\n  }, 10)\n  var eventHandler = function () {\n    var args = Array.prototype.slice.call(arguments)\n    args.unshift(null)\n    clearTimeout(timeout)\n    next.apply(null, args)\n  }\n  obj.once(event, eventHandler)\n}\n\ntest(\"TrackerGroup\", function (t) {\n  var name = \"test\"\n\n  var track = new TrackerGroup(name)\n  t.is(track.completed(), 0, \"Nothing todo is 0 completion\")\n  testEvent(track, \"change\", afterFinishEmpty)\n  track.finish()\n  var a, b\n  function afterFinishEmpty(er, onChangeName) {\n    t.is(er, null, \"finishEmpty: on change event fired\")\n    t.is(onChangeName, name, \"finishEmpty: on change emits the correct name\")\n    t.is(track.completed(), 1, \"finishEmpty: Finishing an empty group actually finishes it\")\n\n    track = new TrackerGroup(name)\n    a = track.newItem(\"a\", 10, 1)\n    b = track.newItem(\"b\", 10, 1)\n    t.is(track.completed(), 0, \"Initially empty\")\n    testEvent(track, \"change\", afterCompleteWork)\n    a.completeWork(5)\n  }\n  function afterCompleteWork(er, onChangeName) {\n    t.is(er, null, \"on change event fired\")\n    t.is(onChangeName, \"a\", \"on change emits the correct name\")\n    t.is(track.completed(), 0.25, \"Complete half of one is a quarter overall\")\n    testEvent(track, \"change\", afterFinishAll)\n    track.finish()\n  }\n  function afterFinishAll(er, onChangeName) {\n    t.is(er, null, \"finishAll: on change event fired\")\n    t.is(onChangeName, name, \"finishAll: on change emits the correct name\")\n    t.is(track.completed(), 1, \"Finishing everything \")\n    \n    track = new TrackerGroup(name)\n    a = track.newItem(\"a\", 10, 2)\n    b = track.newItem(\"b\", 10, 1)\n    t.is(track.completed(), 0, \"weighted: Initially empty\")\n    testEvent(track, \"change\", afterWeightedCompleteWork)\n    a.completeWork(5)\n  }\n  function afterWeightedCompleteWork(er, onChangeName) {\n    t.is(er, null, \"weighted: on change event fired\")\n    t.is(onChangeName, \"a\", \"weighted: on change emits the correct name\")\n    t.is(Math.round(track.completed()*100), 33, \"weighted: Complete half of double weighted\")\n    testEvent(track, \"change\", afterWeightedFinishAll)\n    track.finish()\n  }\n  function afterWeightedFinishAll(er, onChangeName) {\n    t.is(er, null, \"weightedFinishAll: on change event fired\")\n    t.is(onChangeName, name, \"weightedFinishAll: on change emits the correct name\")\n    t.is(track.completed(), 1, \"weightedFinishaAll: Finishing everything \")\n    \n    track = new TrackerGroup(name)\n    a = track.newGroup(\"a\", 10)\n    b = track.newGroup(\"b\", 10)\n    var a1 = a.newItem(\"a.1\",10)\n    a1.completeWork(5)\n    t.is(track.completed(), 0.25, \"nested: Initially quarter done\")\n    testEvent(track, \"change\", afterNestedComplete)\n    b.finish()\n  }\n  function afterNestedComplete(er, onChangeName) {\n    t.is(er, null, \"nestedComplete: on change event fired\")\n    t.is(onChangeName, \"b\", \"nestedComplete: on change emits the correct name\")\n    t.is(track.completed(), 0.75, \"nestedComplete: Finishing everything \")\n    t.end()\n  }\n})\n",
  "npmlog/node_modules/are-we-there-yet/test/trackerstream.js": "\"use strict\"\nvar test = require(\"tap\").test\nvar util = require(\"util\")\nvar stream = require(\"readable-stream\")\nvar TrackerStream = require(\"../index.js\").TrackerStream\n\nvar timeoutError = new Error(\"timeout\")\nvar testEvent = function (obj,event,next) {\n  var timeout = setTimeout(function(){\n    obj.removeListener(event, eventHandler)\n    next(timeoutError)\n  }, 10)\n  var eventHandler = function () {\n    var args = Array.prototype.slice.call(arguments)\n    args.unshift(null)\n    clearTimeout(timeout)\n    next.apply(null, args)\n  }\n  obj.once(event, eventHandler)\n}\n\nvar Sink = function () {\n  stream.Writable.apply(this,arguments)\n}\nutil.inherits(Sink, stream.Writable)\nSink.prototype._write = function (data, encoding, cb) {\n  cb()\n}\n\ntest(\"TrackerStream\", function (t) {\n  t.plan(9)\n\n  var name = \"test\"\n  var track = new TrackerStream(name)\n\n  t.is(track.completed(), 0, \"Nothing todo is 0 completion\")\n\n  var todo = 10\n  track = new TrackerStream(name, todo)\n  t.is(track.completed(), 0, \"Nothing done is 0 completion\")\n\n  track.pipe(new Sink())\n\n  testEvent(track, \"change\", afterCompleteWork)\n  track.write(\"0123456789\")\n  function afterCompleteWork(er, onChangeName) {\n    t.is(er, null, \"write: on change event fired\")\n    t.is(onChangeName, name, \"write: on change emits the correct name\")\n    t.is(track.completed(), 1, \"write: 100% completed\")\n\n    testEvent(track, \"change\", afterAddWork)\n    track.addWork(10)\n  }\n  function afterAddWork(er, onChangeName) {\n    t.is(er, null, \"addWork: on change event fired\")\n    t.is(track.completed(), 0.5, \"addWork: 50% completed\")\n\n    testEvent(track, \"change\", afterAllWork)\n    track.write(\"ABCDEFGHIJKLMNOPQRST\")\n  }\n  function afterAllWork(er) {\n    t.is(er, null, \"allWork: on change event fired\")\n    t.is(track.completed(), 1, \"allWork: 100% completed\")\n  }\n})\n",
  "npmlog/node_modules/gauge/node_modules/has-unicode/index.js": "\"use strict\"\nvar os = require(\"os\")\nvar child_process = require(\"child_process\")\n\nvar hasUnicode = module.exports = function () {\n  // Supported Win32 platforms (>XP) support unicode in the console, though\n  // font support isn't fantastic.\n  if (os.type() == \"Windows_NT\") { return true }\n\n  var isUTF8 = /[.]UTF-8/\n  if (isUTF8.test(process.env.LC_ALL)\n   || process.env.LC_CTYPE == 'UTF-8'\n   || isUTF8.test(process.env.LANG)) {\n    return true\n  }\n\n  return false\n}\n",
  "npmlog/node_modules/gauge/node_modules/has-unicode/package.json": "{\n  \"name\": \"has-unicode\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Try to guess if your terminal supports unicode\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/iarna/has-unicode\"\n  },\n  \"keywords\": [\n    \"unicode\",\n    \"terminal\"\n  ],\n  \"author\": {\n    \"name\": \"Rebecca Turner\",\n    \"email\": \"me@re-becca.org\"\n  },\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/iarna/has-unicode/issues\"\n  },\n  \"homepage\": \"https://github.com/iarna/has-unicode\",\n  \"devDependencies\": {\n    \"require-inject\": \"^1.1.1\",\n    \"tap\": \"^0.4.13\"\n  },\n  \"gitHead\": \"a8c3dcf3be5f0c8f8e26a3e7ffea7da24344a006\",\n  \"_id\": \"has-unicode@1.0.0\",\n  \"_shasum\": \"bac5c44e064c2ffc3b8fcbd8c71afe08f9afc8cc\",\n  \"_from\": \"has-unicode@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"2.1.11\",\n  \"_nodeVersion\": \"0.10.33\",\n  \"_npmUser\": {\n    \"name\": \"iarna\",\n    \"email\": \"me@re-becca.org\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"iarna\",\n      \"email\": \"me@re-becca.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"bac5c44e064c2ffc3b8fcbd8c71afe08f9afc8cc\",\n    \"tarball\": \"http://registry.npmjs.org/has-unicode/-/has-unicode-1.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/has-unicode/-/has-unicode-1.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/has-unicode/test/index.js": "\"use strict\"\nvar test = require(\"tap\").test\nvar requireInject = require(\"require-inject\")\n\ntest(\"Windows\", function (t) {\n  t.plan(1)\n  var hasUnicode = requireInject(\"../index.js\", {\n    os: { type: function () { return \"Windows_NT\" } }\n  })\n  t.is(hasUnicode(), true, \"Windows is assumed to be unicode aware\")\n})\ntest(\"Unix Env\", function (t) {\n  t.plan(3)\n  var hasUnicode = requireInject(\"../index.js\", {\n    os: { type: function () { return \"Linux\" } },\n    child_process: { exec: function (cmd,cb) { cb(new Error(\"not available\")) } }\n  })\n  process.env.LANG = \"en_US.UTF-8\"\n  process.env.LC_ALL = null\n  t.is(hasUnicode(), true, \"Linux with a UTF8 language\")\n  process.env.LANG = null\n  process.env.LC_ALL = \"en_US.UTF-8\"\n  t.is(hasUnicode(), true, \"Linux with UTF8 locale\")\n  process.env.LC_ALL = null\n  t.is(hasUnicode(), false, \"Linux without UTF8 language or locale\")\n})\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/index.js": "/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring'),\n    createPadding = require('lodash._createpadding');\n\n/** Native method references. */\nvar ceil = Math.ceil,\n    floor = Math.floor;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Pads `string` on the left and right sides if it is shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = baseToString(string);\n  length = +length;\n\n  var strLength = string.length;\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return string;\n  }\n  var mid = (length - strLength) / 2,\n      leftLength = floor(mid),\n      rightLength = ceil(mid);\n\n  chars = createPadding('', rightLength, chars);\n  return chars.slice(0, leftLength) + string + chars;\n}\n\nmodule.exports = pad;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._basetostring/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._basetostring/package.json": "{\n  \"name\": \"lodash._basetostring\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s internal `baseToString` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._basetostring@3.0.0\",\n  \"_shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n  \"_from\": \"lodash._basetostring@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._createpadding/index.js": "/**\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar repeat = require('lodash.repeat');\n\n/** Native method references. */\nvar ceil = Math.ceil;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Creates the padding required for `string` based on the given `length`.\n * The `chars` string is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {string} string The string to create padding for.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the pad for `string`.\n */\nfunction createPadding(string, length, chars) {\n  var strLength = string.length;\n  length = +length;\n\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return '';\n  }\n  var padLength = length - strLength;\n  chars = chars == null ? ' ' : (chars + '');\n  return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n}\n\nmodule.exports = createPadding;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._createpadding/node_modules/lodash.repeat/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring');\n\n/** Native method references. */\nvar floor = Math.floor;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=0] The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n) {\n  var result = '';\n  string = baseToString(string);\n  n = +n;\n  if (n < 1 || !string || !nativeIsFinite(n)) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = floor(n / 2);\n    string += string;\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = repeat;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._createpadding/node_modules/lodash.repeat/package.json": "{\n  \"name\": \"lodash.repeat\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s `_.repeat` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.repeat@3.0.0\",\n  \"_shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n  \"_from\": \"lodash.repeat@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/node_modules/lodash._createpadding/package.json": "{\n  \"name\": \"lodash._createpadding\",\n  \"version\": \"3.6.0\",\n  \"description\": \"The modern build of lodash’s internal `createPadding` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash.repeat\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._createpadding@3.6.0\",\n  \"_shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n  \"_from\": \"lodash._createpadding@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.7.3\",\n  \"_nodeVersion\": \"0.12.0\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.pad/package.json": "{\n  \"name\": \"lodash.pad\",\n  \"version\": \"3.1.0\",\n  \"description\": \"The modern build of lodash’s `_.pad` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\",\n    \"lodash._createpadding\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.pad@3.1.0\",\n  \"_shasum\": \"9f18b1f3749a95e197b5ff2ae752ea9851ada965\",\n  \"_from\": \"lodash.pad@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.7.3\",\n  \"_nodeVersion\": \"0.12.0\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    },\n    {\n      \"name\": \"d10\",\n      \"email\": \"demoneaux@gmail.com\"\n    },\n    {\n      \"name\": \"kitcambridge\",\n      \"email\": \"github@kitcambridge.be\"\n    },\n    {\n      \"name\": \"mathias\",\n      \"email\": \"mathias@qiwi.be\"\n    },\n    {\n      \"name\": \"phated\",\n      \"email\": \"blaine@iceddev.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"9f18b1f3749a95e197b5ff2ae752ea9851ada965\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.pad/-/lodash.pad-3.1.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.pad/-/lodash.pad-3.1.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/index.js": "/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring'),\n    createPadding = require('lodash._createpadding');\n\n/**\n * Creates a function for `_.padLeft` or `_.padRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify padding from the right.\n * @returns {Function} Returns the new pad function.\n */\nfunction createPadDir(fromRight) {\n  return function(string, length, chars) {\n    string = baseToString(string);\n    return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n  };\n}\n\n/**\n * Pads `string` on the left side if it is shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padLeft('abc', 6);\n * // => '   abc'\n *\n * _.padLeft('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padLeft('abc', 3);\n * // => 'abc'\n */\nvar padLeft = createPadDir();\n\nmodule.exports = padLeft;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._basetostring/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._basetostring/package.json": "{\n  \"name\": \"lodash._basetostring\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s internal `baseToString` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._basetostring@3.0.0\",\n  \"_shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n  \"_from\": \"lodash._basetostring@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._createpadding/index.js": "/**\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar repeat = require('lodash.repeat');\n\n/** Native method references. */\nvar ceil = Math.ceil;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Creates the padding required for `string` based on the given `length`.\n * The `chars` string is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {string} string The string to create padding for.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the pad for `string`.\n */\nfunction createPadding(string, length, chars) {\n  var strLength = string.length;\n  length = +length;\n\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return '';\n  }\n  var padLength = length - strLength;\n  chars = chars == null ? ' ' : (chars + '');\n  return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n}\n\nmodule.exports = createPadding;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._createpadding/node_modules/lodash.repeat/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring');\n\n/** Native method references. */\nvar floor = Math.floor;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=0] The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n) {\n  var result = '';\n  string = baseToString(string);\n  n = +n;\n  if (n < 1 || !string || !nativeIsFinite(n)) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = floor(n / 2);\n    string += string;\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = repeat;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._createpadding/node_modules/lodash.repeat/package.json": "{\n  \"name\": \"lodash.repeat\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s `_.repeat` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.repeat@3.0.0\",\n  \"_shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n  \"_from\": \"lodash.repeat@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/node_modules/lodash._createpadding/package.json": "{\n  \"name\": \"lodash._createpadding\",\n  \"version\": \"3.6.0\",\n  \"description\": \"The modern build of lodash’s internal `createPadding` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash.repeat\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._createpadding@3.6.0\",\n  \"_shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n  \"_from\": \"lodash._createpadding@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.7.3\",\n  \"_nodeVersion\": \"0.12.0\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padleft/package.json": "{\n  \"name\": \"lodash.padleft\",\n  \"version\": \"3.1.1\",\n  \"description\": \"The modern build of lodash’s `_.padLeft` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/lodash/lodash.git\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\",\n    \"lodash._createpadding\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.padleft@3.1.1\",\n  \"_shasum\": \"150151f1e0245edba15d50af2d71f1d5cff46530\",\n  \"_from\": \"lodash.padleft@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.9.0\",\n  \"_nodeVersion\": \"0.12.2\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    },\n    {\n      \"name\": \"d10\",\n      \"email\": \"demoneaux@gmail.com\"\n    },\n    {\n      \"name\": \"kitcambridge\",\n      \"email\": \"github@kitcambridge.be\"\n    },\n    {\n      \"name\": \"mathias\",\n      \"email\": \"mathias@qiwi.be\"\n    },\n    {\n      \"name\": \"phated\",\n      \"email\": \"blaine@iceddev.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"150151f1e0245edba15d50af2d71f1d5cff46530\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.padleft/-/lodash.padleft-3.1.1.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.padleft/-/lodash.padleft-3.1.1.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/index.js": "/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring'),\n    createPadding = require('lodash._createpadding');\n\n/**\n * Creates a function for `_.padLeft` or `_.padRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify padding from the right.\n * @returns {Function} Returns the new pad function.\n */\nfunction createPadDir(fromRight) {\n  return function(string, length, chars) {\n    string = baseToString(string);\n    return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n  };\n}\n\n/**\n * Pads `string` on the right side if it is shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padRight('abc', 6);\n * // => 'abc   '\n *\n * _.padRight('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padRight('abc', 3);\n * // => 'abc'\n */\nvar padRight = createPadDir(true);\n\nmodule.exports = padRight;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._basetostring/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._basetostring/package.json": "{\n  \"name\": \"lodash._basetostring\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s internal `baseToString` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._basetostring@3.0.0\",\n  \"_shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n  \"_from\": \"lodash._basetostring@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"75a9a4aaaa2b2a8761111ff5431e7d83c1daf0e2\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._createpadding/index.js": "/**\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar repeat = require('lodash.repeat');\n\n/** Native method references. */\nvar ceil = Math.ceil;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Creates the padding required for `string` based on the given `length`.\n * The `chars` string is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {string} string The string to create padding for.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the pad for `string`.\n */\nfunction createPadding(string, length, chars) {\n  var strLength = string.length;\n  length = +length;\n\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return '';\n  }\n  var padLength = length - strLength;\n  chars = chars == null ? ' ' : (chars + '');\n  return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n}\n\nmodule.exports = createPadding;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._createpadding/node_modules/lodash.repeat/index.js": "/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseToString = require('lodash._basetostring');\n\n/** Native method references. */\nvar floor = Math.floor;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=0] The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n) {\n  var result = '';\n  string = baseToString(string);\n  n = +n;\n  if (n < 1 || !string || !nativeIsFinite(n)) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = floor(n / 2);\n    string += string;\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = repeat;\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._createpadding/node_modules/lodash.repeat/package.json": "{\n  \"name\": \"lodash.repeat\",\n  \"version\": \"3.0.0\",\n  \"description\": \"The modern build of lodash’s `_.repeat` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.repeat@3.0.0\",\n  \"_shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n  \"_from\": \"lodash.repeat@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.3.0\",\n  \"_nodeVersion\": \"0.10.35\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c340f4136c99dc5b2e397b3fd50cffbd172a94b0\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.repeat/-/lodash.repeat-3.0.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/node_modules/lodash._createpadding/package.json": "{\n  \"name\": \"lodash._createpadding\",\n  \"version\": \"3.6.0\",\n  \"description\": \"The modern build of lodash’s internal `createPadding` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/lodash/lodash\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash.repeat\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash._createpadding@3.6.0\",\n  \"_shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n  \"_from\": \"lodash._createpadding@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.7.3\",\n  \"_nodeVersion\": \"0.12.0\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"c466850dd1a05e6bfec54fd0cf0db28b68332d5e\",\n    \"tarball\": \"http://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash._createpadding/-/lodash._createpadding-3.6.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/node_modules/lodash.padright/package.json": "{\n  \"name\": \"lodash.padright\",\n  \"version\": \"3.1.1\",\n  \"description\": \"The modern build of lodash’s `_.padRight` as a module.\",\n  \"homepage\": \"https://lodash.com/\",\n  \"icon\": \"https://lodash.com/icon.svg\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"lodash\",\n    \"lodash-modularized\",\n    \"stdlib\",\n    \"util\"\n  ],\n  \"author\": {\n    \"name\": \"John-David Dalton\",\n    \"email\": \"john.david.dalton@gmail.com\",\n    \"url\": \"http://allyoucanleet.com/\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"John-David Dalton\",\n      \"email\": \"john.david.dalton@gmail.com\",\n      \"url\": \"http://allyoucanleet.com/\"\n    },\n    {\n      \"name\": \"Benjamin Tan\",\n      \"email\": \"demoneaux@gmail.com\",\n      \"url\": \"https://d10.github.io/\"\n    },\n    {\n      \"name\": \"Blaine Bublitz\",\n      \"email\": \"blaine@iceddev.com\",\n      \"url\": \"http://www.iceddev.com/\"\n    },\n    {\n      \"name\": \"Kit Cambridge\",\n      \"email\": \"github@kitcambridge.be\",\n      \"url\": \"http://kitcambridge.be/\"\n    },\n    {\n      \"name\": \"Mathias Bynens\",\n      \"email\": \"mathias@qiwi.be\",\n      \"url\": \"https://mathiasbynens.be/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/lodash/lodash.git\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\\"\"\n  },\n  \"dependencies\": {\n    \"lodash._basetostring\": \"^3.0.0\",\n    \"lodash._createpadding\": \"^3.0.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/lodash/lodash/issues\"\n  },\n  \"_id\": \"lodash.padright@3.1.1\",\n  \"_shasum\": \"79f7770baaa39738c040aeb5465e8d88f2aacec0\",\n  \"_from\": \"lodash.padright@>=3.0.0 <4.0.0\",\n  \"_npmVersion\": \"2.9.0\",\n  \"_nodeVersion\": \"0.12.2\",\n  \"_npmUser\": {\n    \"name\": \"jdalton\",\n    \"email\": \"john.david.dalton@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jdalton\",\n      \"email\": \"john.david.dalton@gmail.com\"\n    },\n    {\n      \"name\": \"d10\",\n      \"email\": \"demoneaux@gmail.com\"\n    },\n    {\n      \"name\": \"kitcambridge\",\n      \"email\": \"github@kitcambridge.be\"\n    },\n    {\n      \"name\": \"mathias\",\n      \"email\": \"mathias@qiwi.be\"\n    },\n    {\n      \"name\": \"phated\",\n      \"email\": \"blaine@iceddev.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"79f7770baaa39738c040aeb5465e8d88f2aacec0\",\n    \"tarball\": \"http://registry.npmjs.org/lodash.padright/-/lodash.padright-3.1.1.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/lodash.padright/-/lodash.padright-3.1.1.tgz\"\n}\n",
  "npmlog/node_modules/gauge/package.json": "{\n  \"name\": \"gauge\",\n  \"version\": \"1.2.0\",\n  \"description\": \"A terminal based horizontal guage\",\n  \"main\": \"progress-bar.js\",\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/iarna/gauge\"\n  },\n  \"keywords\": [\n    \"progressbar\",\n    \"progress\",\n    \"gauge\"\n  ],\n  \"author\": {\n    \"name\": \"Rebecca Turner\",\n    \"email\": \"me@re-becca.org\"\n  },\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/iarna/gauge/issues\"\n  },\n  \"homepage\": \"https://github.com/iarna/gauge\",\n  \"dependencies\": {\n    \"ansi\": \"^0.3.0\",\n    \"has-unicode\": \"^1.0.0\",\n    \"lodash.pad\": \"^3.0.0\",\n    \"lodash.padleft\": \"^3.0.0\",\n    \"lodash.padright\": \"^3.0.0\"\n  },\n  \"devDependencies\": {\n    \"tap\": \"^0.4.13\"\n  },\n  \"gitHead\": \"db15c35374816b3fc3b9e1e54866f31ed7f4a733\",\n  \"_id\": \"gauge@1.2.0\",\n  \"_shasum\": \"3094ab1285633f799814388fc8f2de67b4c012c5\",\n  \"_from\": \"gauge@>=1.2.0 <1.3.0\",\n  \"_npmVersion\": \"2.6.0\",\n  \"_nodeVersion\": \"1.1.0\",\n  \"_npmUser\": {\n    \"name\": \"iarna\",\n    \"email\": \"me@re-becca.org\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"iarna\",\n      \"email\": \"me@re-becca.org\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"3094ab1285633f799814388fc8f2de67b4c012c5\",\n    \"tarball\": \"http://registry.npmjs.org/gauge/-/gauge-1.2.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/gauge/-/gauge-1.2.0.tgz\"\n}\n",
  "npmlog/node_modules/gauge/progress-bar.js": "\"use strict\"\nvar hasUnicode = require(\"has-unicode\")\nvar ansi = require(\"ansi\")\nvar align = {\n  center: require(\"lodash.pad\"),\n  left:   require(\"lodash.padright\"),\n  right:  require(\"lodash.padleft\")\n}\nvar defaultStream = process.stderr\nfunction isTTY() {\n  return process.stderr.isTTY\n}\nfunction getWritableTTYColumns() {\n  // One less than the actual as writing to the final column wraps the line\n  return process.stderr.columns - 1\n}\n\nvar ProgressBar = module.exports = function (options, cursor) {\n  if (! options) options = {}\n  if (! cursor && options.write) {\n    cursor = options\n    options = {}\n  }\n  if (! cursor) {\n    cursor = ansi(defaultStream)\n  }\n  this.cursor = cursor\n  this.showing = false\n  this.theme = options.theme || (hasUnicode() ? ProgressBar.unicode : ProgressBar.ascii)\n  this.template = options.template || [\n    {type: \"name\", separated: true, length: 25},\n    {type: \"spinner\", separated: true},\n    {type: \"startgroup\"},\n    {type: \"completionbar\"},\n    {type: \"endgroup\"}\n  ]\n  this.updatefreq = options.maxUpdateFrequency || 50\n  this.lastName = \"\"\n  this.lastCompleted = 0\n  this.spun = 0\n  this.last = new Date(0)\n}\nProgressBar.prototype = {}\n\nProgressBar.unicode = {\n  startgroup: \"╢\",\n  endgroup: \"╟\",\n  complete: \"█\",\n  incomplete: \"░\",\n  spinner: \"▀▐▄▌\",\n  subsection: \"→\"\n}\n\nProgressBar.ascii = {\n  startgroup: \"|\",\n  endgroup: \"|\",\n  complete: \"#\",\n  incomplete: \"-\",\n  spinner: \"-\\\\|/\",\n  subsection: \"->\"\n}\n\nProgressBar.prototype.setTheme = function(theme) {\n  this.theme = theme\n}\n\nProgressBar.prototype.setTemplate = function(template) {\n  this.template = template\n}\n\nProgressBar.prototype.disable = function() {\n  this.hide()\n  this.disabled = true\n}\n\nProgressBar.prototype.enable = function() {\n  this.disabled = false\n  this.show()\n}\n\nProgressBar.prototype.hide = function() {\n  if (!isTTY()) return\n  if (this.disabled) return\n  this.cursor.show()\n  if (this.showing) this.cursor.up(1)\n  this.cursor.horizontalAbsolute(0).eraseLine()\n  this.showing = false\n}\n\nvar repeat = function (str, count) {\n  var out = \"\"\n  for (var ii=0; ii<count; ++ii) out += str\n  return out\n}\n\nProgressBar.prototype.pulse = function(name) {\n  ++ this.spun\n  if (! this.showing) return\n  if (this.disabled) return\n\n  var baseName = this.lastName\n  name = name\n       ? ( baseName\n         ? baseName + \" \" + this.theme.subsection + \" \" + name\n         : null )\n       : baseName\n  this.show(name)\n  this.lastName = baseName\n}\n\nProgressBar.prototype.show = function(name, completed) {\n  name = this.lastName = name || this.lastName\n  completed = this.lastCompleted = completed || this.lastCompleted\n\n  if (!isTTY()) return\n  if (this.disabled) return\n  if (! this.spun && ! completed) return\n  if (this.tryAgain) {\n    clearTimeout(this.tryAgain)\n    this.tryAgain = null\n  }\n  var self = this\n  if (this.showing && new Date() - this.last < this.updatefreq) {\n    this.tryAgain = setTimeout(function () {\n      if (self.disabled) return\n      if (! self.spun && ! completed) return\n      drawBar()\n    }, this.updatefreq - (new Date() - this.last))\n    return\n  }\n\n  return drawBar()\n\n  function drawBar() {\n    var values = {\n      name: name,\n      spinner: self.spun,\n      completed: completed\n    }\n\n    self.last = new Date()\n\n    var statusline = self.renderTemplate(self.theme, self.template, values)\n\n    if (self.showing) self.cursor.up(1)\n    self.cursor\n        .hide()\n        .horizontalAbsolute(0)\n        .write(statusline.substr(0, getWritableTTYColumns()) + \"\\n\")\n        .show()\n\n    self.showing = true\n  }\n}\n\nProgressBar.prototype.renderTemplate = function (theme, template, values) {\n  values.startgroup = theme.startgroup\n  values.endgroup = theme.endgroup\n  values.spinner = values.spinner\n    ? theme.spinner.substr(values.spinner % theme.spinner.length,1)\n    : \"\"\n\n  var output = {prebar: \"\", postbar: \"\"}\n  var status = \"prebar\"\n  var self = this\n  template.forEach(function(T) {\n    if (typeof T === \"string\") {\n      output[status] += T\n      return\n    }\n    if (T.type === \"completionbar\") {\n      status = \"postbar\"\n      return\n    }\n    if (!values.hasOwnProperty(T.type)) throw new Error(\"Unknown template value '\"+T.type+\"'\")\n    var value = self.renderValue(T, values[T.type])\n    if (value === \"\") return\n    var sofar = output[status].length\n    var lastChar = sofar ? output[status][sofar-1] : null\n    if (T.separated && sofar && lastChar !== \" \") {\n      output[status] += \" \"\n    }\n    output[status] += value\n    if (T.separated) output[status] += \" \"\n  })\n\n  var bar = \"\"\n  if (status === \"postbar\") {\n    var nonBarLen = output.prebar.length + output.postbar.length\n\n    var barLen = getWritableTTYColumns() - nonBarLen\n    var sofar = Math.round(barLen * Math.max(0,Math.min(1,values.completed||0)))\n    var rest = barLen - sofar\n    bar = repeat(theme.complete, sofar)\n        + repeat(theme.incomplete, rest)\n  }\n\n  return output.prebar + bar + output.postbar\n}\nProgressBar.prototype.renderValue = function (template, value) {\n  if (value == null || value === \"\") return \"\"\n  var maxLength = template.maxLength || template.length\n  var minLength = template.minLength || template.length\n  var alignWith = align[template.align] || align.left\n//  if (maxLength) value = value.substr(-1 * maxLength)\n  if (maxLength) value = value.substr(0, maxLength)\n  if (minLength) value = alignWith(value, minLength)\n  return value\n}\n",
  "npmlog/node_modules/gauge/test/progress-bar.js": "\"use strict\"\nvar test = require(\"tap\").test\nvar ProgressBar = require(\"../progress-bar.js\")\n\nvar cursor = []\nvar C\nvar bar = new ProgressBar({theme: ProgressBar.ascii}, C = {\n  show: function () {\n    cursor.push([\"show\"])\n    return C\n  },\n  hide: function () {\n    cursor.push([\"hide\"])\n    return C\n  },\n  up: function (lines) {\n    cursor.push([\"up\",lines])\n    return C\n  },\n  horizontalAbsolute: function (col) {\n    cursor.push([\"horizontalAbsolute\", col])\n    return C\n  },\n  eraseLine: function () {\n    cursor.push([\"eraseLine\"])\n    return C\n  },\n  write: function (line) {\n    cursor.push([\"write\", line])\n    return C\n  }\n})\n\n\nfunction isOutput(t, msg, output) {\n  var tests = []\n  for (var ii = 0; ii<output.length; ++ii) {\n    for (var jj = 0; jj<output[ii].length; ++jj) {\n      tests.push({cmd: ii, arg: jj})\n    }\n  }\n  tests.forEach(function(test) {\n    t.is(cursor[test.cmd] ? cursor[test.cmd][test.arg] : null,\n         output[test.cmd][test.arg],\n         msg + \": \" + output[test.cmd] + (test.arg ? \" arg #\"+test.arg : \"\"))\n  })\n}\n\ntest(\"hide\", function (t) {\n  t.plan(11)\n  process.stderr.isTTY = false\n  bar.hide()\n  t.is(cursor.length, 0, \"We don't progress bar without a tty\")\n  cursor = []\n  process.stderr.isTTY = true\n  bar.hide()\n  isOutput(t, \"hide while not showing\",[\n    [\"show\"], // cursor\n    [\"horizontalAbsolute\",0],\n    [\"eraseLine\"]])\n  cursor = []\n  bar.showing = true\n  bar.hide()\n  isOutput(t, \"hide while showing\",[\n    [\"show\"], // cursor\n    [\"up\", 1],\n    [\"horizontalAbsolute\",0],\n    [\"eraseLine\"]])\n})\n\ntest(\"renderTemplate\", function (t) {\n  t.plan(16)\n  process.stderr.columns = 11\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"name\"}],{name: \"NAME\"})\n  t.is(result, \"NAME\", \"name substitution\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"completionbar\"}],{completed: 0})\n  t.is(result, \"----------\", \"0% bar\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"completionbar\"}],{completed: 0.5})\n  t.is(result, \"#####-----\", \"50% bar\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"completionbar\"}],{completed: 1})\n  t.is(result, \"##########\", \"100% bar\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"completionbar\"}],{completed: -100})\n  t.is(result, \"----------\", \"0% underflow bar\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"completionbar\"}],{completed: 100})\n  t.is(result, \"##########\", \"100% overflow bar\")\n  var result = bar.renderTemplate(ProgressBar.ascii,[{type: \"name\"},{type: \"completionbar\"}],{name: \"NAME\", completed: 0.5})\n  t.is(result, \"NAME###---\", \"name + 50%\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [\"static\"], {})\n  t.is(result, \"static\", \"static text\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [\"static\",{type: \"name\"}], {name: \"NAME\"})\n  t.is(result, \"staticNAME\", \"static text + var\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [\"static\",{type: \"name\", separated: true}], {name: \"NAME\"})\n  t.is(result, \"static NAME \", \"pre-separated\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [{type: \"name\", separated: true}, \"static\"], {name: \"NAME\"})\n  t.is(result, \"NAME static\", \"post-separated\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [\"1\",{type: \"name\", separated: true}, \"2\"], {name: \"\"})\n  t.is(result, \"12\", \"separated no value\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [\"1\",{type: \"name\", separated: true}, \"2\"], {name: \"NAME\"})\n  t.is(result, \"1 NAME 2\", \"separated value\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [{type: \"spinner\"}], {spinner: 0})\n  t.is(result, \"\", \"No spinner\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [{type: \"spinner\"}], {spinner: 1})\n  t.is(result, \"\\\\\", \"Spinner 1\")\n  var result = bar.renderTemplate(ProgressBar.ascii, [{type: \"spinner\"}], {spinner: 10})\n  t.is(result, \"|\", \"Spinner 10\")\n})\n\ntest(\"show & pulse\", function (t) {\n  t.plan(23)\n\n  process.stderr.columns = 16\n  cursor = []\n  process.stderr.isTTY = false\n  bar.template[0].length = 6\n  bar.last = new Date(0)\n  bar.show(\"NAME\", 0)\n  t.is(cursor.length, 0, \"no tty, no progressbar\")\n\n  cursor = []\n  process.stderr.isTTY = true\n  bar.last = new Date(0)\n  bar.show(\"NAME\", 0.1)\n  isOutput(t, \"tty, name, completion\",\n    [ [ 'hide' ],\n      [ 'horizontalAbsolute', 0 ],\n      [ 'write', 'NAME   |#-----|\\n' ],\n      [ 'show' ] ])\n\n  bar.show(\"S\")\n  cursor = []\n  bar.last = new Date(0)\n  bar.pulse()\n  isOutput(t, \"pulsed spinner\",\n    [ [ 'up', 1 ],\n      [ 'hide' ],\n      [ 'horizontalAbsolute', 0 ],\n      [ 'write', 'S      \\\\ |----|\\n' ],\n      [ 'show' ] ])\n  cursor = []\n  bar.last = new Date(0)\n  bar.pulse(\"P\")\n  isOutput(t, \"pulsed spinner with subsection\",\n    [ [ 'up', 1 ],\n      [ 'hide' ],\n      [ 'horizontalAbsolute', 0 ],\n      [ 'write', 'S -> P | |----|\\n' ],\n      [ 'show' ] ])\n})\n",
  "npmlog/package.json": "{\n  \"author\": {\n    \"name\": \"Isaac Z. Schlueter\",\n    \"email\": \"i@izs.me\",\n    \"url\": \"http://blog.izs.me/\"\n  },\n  \"name\": \"npmlog\",\n  \"description\": \"logger for npm\",\n  \"version\": \"1.2.1\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/isaacs/npmlog.git\"\n  },\n  \"main\": \"log.js\",\n  \"scripts\": {\n    \"test\": \"tap test/*.js\"\n  },\n  \"dependencies\": {\n    \"ansi\": \"~0.3.0\",\n    \"are-we-there-yet\": \"~1.0.0\",\n    \"gauge\": \"~1.2.0\"\n  },\n  \"devDependencies\": {\n    \"tap\": \"\"\n  },\n  \"license\": \"ISC\",\n  \"gitHead\": \"4e1a73a567036064ded425a7d48c863d53550b4f\",\n  \"bugs\": {\n    \"url\": \"https://github.com/isaacs/npmlog/issues\"\n  },\n  \"homepage\": \"https://github.com/isaacs/npmlog#readme\",\n  \"_id\": \"npmlog@1.2.1\",\n  \"_shasum\": \"28e7be619609b53f7ad1dd300a10d64d716268b6\",\n  \"_from\": \"npmlog@1.2.1\",\n  \"_npmVersion\": \"2.10.0\",\n  \"_nodeVersion\": \"2.0.1\",\n  \"_npmUser\": {\n    \"name\": \"isaacs\",\n    \"email\": \"isaacs@npmjs.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"28e7be619609b53f7ad1dd300a10d64d716268b6\",\n    \"tarball\": \"http://registry.npmjs.org/npmlog/-/npmlog-1.2.1.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"isaacs\",\n      \"email\": \"i@izs.me\"\n    },\n    {\n      \"name\": \"iarna\",\n      \"email\": \"me@re-becca.org\"\n    }\n  ],\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/npmlog/-/npmlog-1.2.1.tgz\"\n}\n",
  "npmlog/test/basic.js": "var tap = require('tap')\nvar log = require('../')\n\nvar result = []\nvar logEvents = []\nvar logInfoEvents = []\nvar logPrefixEvents = []\n\nvar util = require('util')\n\nvar resultExpect =\n[ '\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[7msill\\u001b[0m \\u001b[0m\\u001b[35msilly prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[34m\\u001b[40mverb\\u001b[0m \\u001b[0m\\u001b[35mverbose prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[32minfo\\u001b[0m \\u001b[0m\\u001b[35minfo prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[32m\\u001b[40mhttp\\u001b[0m \\u001b[0m\\u001b[35mhttp prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[30m\\u001b[43mWARN\\u001b[0m \\u001b[0m\\u001b[35mwarn prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35merror prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[32minfo\\u001b[0m \\u001b[0m\\u001b[35minfo prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[32m\\u001b[40mhttp\\u001b[0m \\u001b[0m\\u001b[35mhttp prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[30m\\u001b[43mWARN\\u001b[0m \\u001b[0m\\u001b[35mwarn prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35merror prefix\\u001b[0m x = {\"foo\":{\"bar\":\"baz\"}}\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35m404\\u001b[0m This is a longer\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35m404\\u001b[0m message, with some details\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35m404\\u001b[0m and maybe a stack.\\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u001b[31m\\u001b[40mERR!\\u001b[0m \\u001b[0m\\u001b[35m404\\u001b[0m \\n',\n  '\\u001b[0m\\u001b[37m\\u001b[40mnpm\\u001b[0m \\u001b[0m\\u0007noise\\u001b[0m\\u001b[35m\\u001b[0m LOUD NOISES\\n',\n  '\\u001b[0m' ]\n\nvar logPrefixEventsExpect =\n[ { id: 2,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 9,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 16,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] } ]\n\n// should be the same.\nvar logInfoEventsExpect = logPrefixEventsExpect\n\nvar logEventsExpect =\n[ { id: 0,\n    level: 'silly',\n    prefix: 'silly prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 1,\n    level: 'verbose',\n    prefix: 'verbose prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 2,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 3,\n    level: 'http',\n    prefix: 'http prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 4,\n    level: 'warn',\n    prefix: 'warn prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 5,\n    level: 'error',\n    prefix: 'error prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 6,\n    level: 'silent',\n    prefix: 'silent prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 7,\n    level: 'silly',\n    prefix: 'silly prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 8,\n    level: 'verbose',\n    prefix: 'verbose prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 9,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 10,\n    level: 'http',\n    prefix: 'http prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 11,\n    level: 'warn',\n    prefix: 'warn prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 12,\n    level: 'error',\n    prefix: 'error prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 13,\n    level: 'silent',\n    prefix: 'silent prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 14,\n    level: 'silly',\n    prefix: 'silly prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 15,\n    level: 'verbose',\n    prefix: 'verbose prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 16,\n    level: 'info',\n    prefix: 'info prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 17,\n    level: 'http',\n    prefix: 'http prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 18,\n    level: 'warn',\n    prefix: 'warn prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 19,\n    level: 'error',\n    prefix: 'error prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 20,\n    level: 'silent',\n    prefix: 'silent prefix',\n    message: 'x = {\"foo\":{\"bar\":\"baz\"}}',\n    messageRaw: [ 'x = %j', { foo: { bar: 'baz' } } ] },\n  { id: 21,\n    level: 'error',\n    prefix: '404',\n    message: 'This is a longer\\nmessage, with some details\\nand maybe a stack.\\n',\n    messageRaw: [ 'This is a longer\\nmessage, with some details\\nand maybe a stack.\\n' ] },\n  { id: 22,\n    level: 'noise',\n    prefix: false,\n    message: 'LOUD NOISES',\n    messageRaw: [ 'LOUD NOISES' ] } ]\n\nvar Stream = require('stream').Stream\nvar s = new Stream()\ns.write = function (m) {\n  result.push(m)\n}\n\ns.writable = true\ns.isTTY = true\ns.end = function () {}\n\nlog.stream = s\n\nlog.heading = 'npm'\n\n\ntap.test('basic', function (t) {\n  log.on('log', logEvents.push.bind(logEvents))\n  log.on('log.info', logInfoEvents.push.bind(logInfoEvents))\n  log.on('info prefix', logPrefixEvents.push.bind(logPrefixEvents))\n\n  console.error('log.level=silly')\n  log.level = 'silly'\n  log.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\n\n  console.error('log.level=silent')\n  log.level = 'silent'\n  log.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\n\n  console.error('log.level=info')\n  log.level = 'info'\n  log.silly('silly prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.verbose('verbose prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.info('info prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.http('http prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.warn('warn prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.error('error prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.silent('silent prefix', 'x = %j', {foo:{bar:'baz'}})\n  log.error('404', 'This is a longer\\n'+\n                   'message, with some details\\n'+\n                   'and maybe a stack.\\n')\n  log.addLevel('noise', 10000, {beep: true})\n  log.noise(false, 'LOUD NOISES')\n\n  t.deepEqual(result.join('').trim(), resultExpect.join('').trim(), 'result')\n  t.deepEqual(log.record, logEventsExpect, 'record')\n  t.deepEqual(logEvents, logEventsExpect, 'logEvents')\n  t.deepEqual(logInfoEvents, logInfoEventsExpect, 'logInfoEvents')\n  t.deepEqual(logPrefixEvents, logPrefixEventsExpect, 'logPrefixEvents')\n\n  t.end()\n})\n",
  "npmlog/test/progress.js": "'use strict'\n\nvar test = require('tap').test\nvar log = require('../log.js')\n\nvar actions = []\nlog.gauge = {\n  enable: function () {\n    actions.push(['enable'])\n  },\n  disable: function () {\n    actions.push(['disable'])\n  },\n  hide: function () {\n    actions.push(['hide'])\n  },\n  show: function (name, completed) {\n    actions.push(['show', name, completed])\n  },\n  pulse: function (name) {\n    actions.push(['pulse', name])\n  }\n}\n\nfunction didActions(t, msg, output) {\n  var tests = []\n  for (var ii = 0; ii < output.length; ++ ii) {\n    for (var jj = 0; jj < output[ii].length; ++ jj) {\n      tests.push({cmd: ii, arg: jj})\n    }\n  }\n  t.is(actions.length, output.length, msg)\n  tests.forEach(function (test) {\n    t.is(actions[test.cmd] ? actions[test.cmd][test.arg] : null, \n         output[test.cmd][test.arg],\n         msg + ': ' + output[test.cmd] + (test.arg ? ' arg #'+test.arg : ''))\n  })\n  actions = []\n}\n\n\ntest('enableProgress', function (t) {\n  t.plan(6)\n  log.enableProgress()\n  didActions(t, 'enableProgress', [ [ 'enable' ], [ 'show', undefined, 0 ] ])\n  log.enableProgress()\n  didActions(t, 'enableProgress again', [])\n})\n\ntest('disableProgress', function (t) {\n  t.plan(4)\n  log.disableProgress()\n  didActions(t, 'disableProgress', [ [ 'hide' ], [ 'disable' ] ])\n  log.disableProgress()\n  didActions(t, 'disableProgress again', [])\n})\n\ntest('showProgress', function (t) {\n  t.plan(5)\n  log.showProgress('foo')\n  didActions(t, 'showProgress disabled', [])\n  log.enableProgress()\n  actions = []\n  log.showProgress('foo')\n  didActions(t, 'showProgress', [ [ 'show', 'foo', 0 ] ])\n})\n\ntest('clearProgress', function (t) {\n  t.plan(3)\n  log.clearProgress()\n  didActions(t, 'clearProgress', [ [ 'hide' ] ])\n  log.disableProgress()\n  actions = []\n  log.clearProgress()\n  didActions(t, 'clearProgress disabled', [ ])\n})\n\ntest(\"newItem\", function (t) {\n  t.plan(12)\n  log.enableProgress()\n  actions = []\n  var a = log.newItem(\"test\", 10)\n  didActions(t, \"newItem\", [ [ 'show', undefined, 0 ] ])\n  a.completeWork(5)\n  didActions(t, \"newItem:completeWork\", [ [ 'show', 'test', 0.5 ] ])\n  a.finish()\n  didActions(t, \"newItem:finish\", [ [ 'show', 'test', 1 ] ])\n})\n\n// test that log objects proxy through. And test that completion status filters up\ntest(\"newGroup\", function (t) {\n  t.plan(23)\n  var a = log.newGroup(\"newGroup\")\n  didActions(t, \"newGroup\", [ [ 'show', undefined, 0.5 ] ])\n  a.warn(\"test\", \"this is a test\")\n  didActions(t, \"newGroup:warn\", [ [ 'pulse', 'test' ], [ 'hide' ], [ 'show', undefined, 0.5 ] ])\n  var b = a.newItem(\"newGroup2\", 10)\n  didActions(t, \"newGroup:newItem\", [ [ 'show', 'newGroup', 0.5 ] ])\n  b.completeWork(5)\n  didActions(t, \"newGroup:completeWork\", [ [ 'show', 'newGroup2', 0.75 ] ])\n  a.finish()\n  didActions(t, \"newGroup:finish\", [ [ 'show', 'newGroup', 1 ] ])\n})\n\ntest(\"newStream\", function (t) {\n  t.plan(13)\n  var a = log.newStream(\"newStream\", 10)\n  didActions(t, \"newStream\", [ [ 'show', undefined, 0.6666666666666666 ] ])\n  a.write(\"abcde\")\n  didActions(t, \"newStream\", [ [ 'show', 'newStream', 0.8333333333333333 ] ])\n  a.write(\"fghij\")\n  didActions(t, \"newStream\", [ [ 'show', 'newStream', 1 ] ])\n  t.is(log.tracker.completed(), 1, \"Overall completion\")\n})\n",
  "uglify-js/bin/extract-props.js": "#! /usr/bin/env node\n\n\"use strict\";\n\nvar U2 = require(\"../tools/node\");\nvar fs = require(\"fs\");\nvar yargs = require(\"yargs\");\nvar ARGS = yargs\n    .describe(\"o\", \"Output file\")\n    .argv;\nvar files = ARGS._.slice();\nvar output = {\n    vars: {},\n    props: {}\n};\n\nif (ARGS.o) try {\n    output = JSON.parse(fs.readFileSync(ARGS.o, \"utf8\"));\n} catch(ex) {}\n\nfiles.forEach(getProps);\n\nif (ARGS.o) {\n    fs.writeFileSync(ARGS.o, JSON.stringify(output, null, 2), \"utf8\");\n} else {\n    console.log(\"%s\", JSON.stringify(output, null, 2));\n}\n\nfunction getProps(filename) {\n    var code = fs.readFileSync(filename, \"utf8\");\n    var ast = U2.parse(code);\n\n    ast.walk(new U2.TreeWalker(function(node){\n        if (node instanceof U2.AST_ObjectKeyVal) {\n            add(node.key);\n        }\n        else if (node instanceof U2.AST_ObjectProperty) {\n            add(node.key.name);\n        }\n        else if (node instanceof U2.AST_Dot) {\n            add(node.property);\n        }\n        else if (node instanceof U2.AST_Sub) {\n            addStrings(node.property);\n        }\n    }));\n\n    function addStrings(node) {\n        var out = {};\n        try {\n            (function walk(node){\n                node.walk(new U2.TreeWalker(function(node){\n                    if (node instanceof U2.AST_Seq) {\n                        walk(node.cdr);\n                        return true;\n                    }\n                    if (node instanceof U2.AST_String) {\n                        add(node.value);\n                        return true;\n                    }\n                    if (node instanceof U2.AST_Conditional) {\n                        walk(node.consequent);\n                        walk(node.alternative);\n                        return true;\n                    }\n                    throw out;\n                }));\n            })(node);\n        } catch(ex) {\n            if (ex !== out) throw ex;\n        }\n    }\n\n    function add(name) {\n        output.props[name] = true;\n    }\n}\n",
  "uglify-js/lib/ast.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction DEFNODE(type, props, methods, base) {\n    if (arguments.length < 4) base = AST_Node;\n    if (!props) props = [];\n    else props = props.split(/\\s+/);\n    var self_props = props;\n    if (base && base.PROPS)\n        props = props.concat(base.PROPS);\n    var code = \"return function AST_\" + type + \"(props){ if (props) { \";\n    for (var i = props.length; --i >= 0;) {\n        code += \"this.\" + props[i] + \" = props.\" + props[i] + \";\";\n    }\n    var proto = base && new base;\n    if (proto && proto.initialize || (methods && methods.initialize))\n        code += \"this.initialize();\";\n    code += \"}}\";\n    var ctor = new Function(code)();\n    if (proto) {\n        ctor.prototype = proto;\n        ctor.BASE = base;\n    }\n    if (base) base.SUBCLASSES.push(ctor);\n    ctor.prototype.CTOR = ctor;\n    ctor.PROPS = props || null;\n    ctor.SELF_PROPS = self_props;\n    ctor.SUBCLASSES = [];\n    if (type) {\n        ctor.prototype.TYPE = ctor.TYPE = type;\n    }\n    if (methods) for (i in methods) if (methods.hasOwnProperty(i)) {\n        if (/^\\$/.test(i)) {\n            ctor[i.substr(1)] = methods[i];\n        } else {\n            ctor.prototype[i] = methods[i];\n        }\n    }\n    ctor.DEFMETHOD = function(name, method) {\n        this.prototype[name] = method;\n    };\n    return ctor;\n};\n\nvar AST_Token = DEFNODE(\"Token\", \"type value line col pos endline endcol endpos nlb comments_before file\", {\n}, null);\n\nvar AST_Node = DEFNODE(\"Node\", \"start end\", {\n    clone: function() {\n        return new this.CTOR(this);\n    },\n    $documentation: \"Base class of all AST nodes\",\n    $propdoc: {\n        start: \"[AST_Token] The first token of this node\",\n        end: \"[AST_Token] The last token of this node\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    },\n    walk: function(visitor) {\n        return this._walk(visitor); // not sure the indirection will be any help\n    }\n}, null);\n\nAST_Node.warn_function = null;\nAST_Node.warn = function(txt, props) {\n    if (AST_Node.warn_function)\n        AST_Node.warn_function(string_template(txt, props));\n};\n\n/* -----[ statements ]----- */\n\nvar AST_Statement = DEFNODE(\"Statement\", null, {\n    $documentation: \"Base class of all statements\",\n});\n\nvar AST_Debugger = DEFNODE(\"Debugger\", null, {\n    $documentation: \"Represents a debugger statement\",\n}, AST_Statement);\n\nvar AST_Directive = DEFNODE(\"Directive\", \"value scope quote\", {\n    $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n    $propdoc: {\n        value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n        scope: \"[AST_Scope/S] The scope that this directive affects\",\n        quote: \"[string] the original quote character\"\n    },\n}, AST_Statement);\n\nvar AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", {\n    $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n    $propdoc: {\n        body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nfunction walk_body(node, visitor) {\n    if (node.body instanceof AST_Statement) {\n        node.body._walk(visitor);\n    }\n    else node.body.forEach(function(stat){\n        stat._walk(visitor);\n    });\n};\n\nvar AST_Block = DEFNODE(\"Block\", \"body\", {\n    $documentation: \"A body of statements (usually bracketed)\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_BlockStatement = DEFNODE(\"BlockStatement\", null, {\n    $documentation: \"A block statement\",\n}, AST_Block);\n\nvar AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, {\n    $documentation: \"The empty statement (empty block or simply a semicolon)\",\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    }\n}, AST_Statement);\n\nvar AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", {\n    $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n    $propdoc: {\n        body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n        });\n    }\n}, AST_Statement);\n\nvar AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", {\n    $documentation: \"Statement with a label\",\n    $propdoc: {\n        label: \"[AST_Label] a label definition\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.label._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\nvar AST_IterationStatement = DEFNODE(\"IterationStatement\", null, {\n    $documentation: \"Internal class.  All loops inherit from it.\"\n}, AST_StatementWithBody);\n\nvar AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", {\n    $documentation: \"Base class for do/while statements\",\n    $propdoc: {\n        condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n    }\n}, AST_IterationStatement);\n\nvar AST_Do = DEFNODE(\"Do\", null, {\n    $documentation: \"A `do` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.body._walk(visitor);\n            this.condition._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_While = DEFNODE(\"While\", null, {\n    $documentation: \"A `while` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_DWLoop);\n\nvar AST_For = DEFNODE(\"For\", \"init condition step\", {\n    $documentation: \"A `for` statement\",\n    $propdoc: {\n        init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n        condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n        step: \"[AST_Node?] the `for` update clause, or null if empty\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_ForIn = DEFNODE(\"ForIn\", \"init name object\", {\n    $documentation: \"A `for ... in` statement\",\n    $propdoc: {\n        init: \"[AST_Node] the `for/in` initialization code\",\n        name: \"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var\",\n        object: \"[AST_Node] the object that we're looping through\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.init._walk(visitor);\n            this.object._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_IterationStatement);\n\nvar AST_With = DEFNODE(\"With\", \"expression\", {\n    $documentation: \"A `with` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `with` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.body._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ scope and functions ]----- */\n\nvar AST_Scope = DEFNODE(\"Scope\", \"directives variables functions uses_with uses_eval parent_scope enclosed cname\", {\n    $documentation: \"Base class for all statements introducing a lexical scope\",\n    $propdoc: {\n        directives: \"[string*/S] an array of directives declared in this scope\",\n        variables: \"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n        functions: \"[Object/S] like `variables`, but only lists function declarations\",\n        uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n        uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n        parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n        enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n        cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\",\n    },\n}, AST_Block);\n\nvar AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", {\n    $documentation: \"The toplevel scope\",\n    $propdoc: {\n        globals: \"[Object/S] a map of name -> SymbolDef for all undeclared names\",\n    },\n    wrap_enclose: function(arg_parameter_pairs) {\n        var self = this;\n        var args = [];\n        var parameters = [];\n\n        arg_parameter_pairs.forEach(function(pair) {\n            var splitAt = pair.lastIndexOf(\":\");\n\n            args.push(pair.substr(0, splitAt));\n            parameters.push(pair.substr(splitAt + 1));\n        });\n\n        var wrapped_tl = \"(function(\" + parameters.join(\",\") + \"){ '$ORIG'; })(\" + args.join(\",\") + \")\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(self.body);\n            }\n        }));\n        return wrapped_tl;\n    },\n    wrap_commonjs: function(name, export_all) {\n        var self = this;\n        var to_export = [];\n        if (export_all) {\n            self.figure_out_scope();\n            self.walk(new TreeWalker(function(node){\n                if (node instanceof AST_SymbolDeclaration && node.definition().global) {\n                    if (!find_if(function(n){ return n.name == node.name }, to_export))\n                        to_export.push(node);\n                }\n            }));\n        }\n        var wrapped_tl = \"(function(exports, global){ global['\" + name + \"'] = exports; '$ORIG'; '$EXPORTS'; }({}, (function(){return this}())))\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function before(node){\n            if (node instanceof AST_SimpleStatement) {\n                node = node.body;\n                if (node instanceof AST_String) switch (node.getValue()) {\n                  case \"$ORIG\":\n                    return MAP.splice(self.body);\n                  case \"$EXPORTS\":\n                    var body = [];\n                    to_export.forEach(function(sym){\n                        body.push(new AST_SimpleStatement({\n                            body: new AST_Assign({\n                                left: new AST_Sub({\n                                    expression: new AST_SymbolRef({ name: \"exports\" }),\n                                    property: new AST_String({ value: sym.name }),\n                                }),\n                                operator: \"=\",\n                                right: new AST_SymbolRef(sym),\n                            }),\n                        }));\n                    });\n                    return MAP.splice(body);\n                }\n            }\n        }));\n        return wrapped_tl;\n    }\n}, AST_Scope);\n\nvar AST_Lambda = DEFNODE(\"Lambda\", \"name argnames uses_arguments\", {\n    $documentation: \"Base class for functions\",\n    $propdoc: {\n        name: \"[AST_SymbolDeclaration?] the name of this function\",\n        argnames: \"[AST_SymbolFunarg*] array of function arguments\",\n        uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            if (this.name) this.name._walk(visitor);\n            this.argnames.forEach(function(arg){\n                arg._walk(visitor);\n            });\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Scope);\n\nvar AST_Accessor = DEFNODE(\"Accessor\", null, {\n    $documentation: \"A setter/getter function.  The `name` property is always null.\"\n}, AST_Lambda);\n\nvar AST_Function = DEFNODE(\"Function\", null, {\n    $documentation: \"A function expression\"\n}, AST_Lambda);\n\nvar AST_Defun = DEFNODE(\"Defun\", null, {\n    $documentation: \"A function definition\"\n}, AST_Lambda);\n\n/* -----[ JUMPS ]----- */\n\nvar AST_Jump = DEFNODE(\"Jump\", null, {\n    $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n}, AST_Statement);\n\nvar AST_Exit = DEFNODE(\"Exit\", \"value\", {\n    $documentation: \"Base class for “exits” (`return` and `throw`)\",\n    $propdoc: {\n        value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.value && function(){\n            this.value._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Return = DEFNODE(\"Return\", null, {\n    $documentation: \"A `return` statement\"\n}, AST_Exit);\n\nvar AST_Throw = DEFNODE(\"Throw\", null, {\n    $documentation: \"A `throw` statement\"\n}, AST_Exit);\n\nvar AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", {\n    $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n    $propdoc: {\n        label: \"[AST_LabelRef?] the label, or null if none\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.label && function(){\n            this.label._walk(visitor);\n        });\n    }\n}, AST_Jump);\n\nvar AST_Break = DEFNODE(\"Break\", null, {\n    $documentation: \"A `break` statement\"\n}, AST_LoopControl);\n\nvar AST_Continue = DEFNODE(\"Continue\", null, {\n    $documentation: \"A `continue` statement\"\n}, AST_LoopControl);\n\n/* -----[ IF ]----- */\n\nvar AST_If = DEFNODE(\"If\", \"condition alternative\", {\n    $documentation: \"A `if` statement\",\n    $propdoc: {\n        condition: \"[AST_Node] the `if` condition\",\n        alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n            if (this.alternative) this.alternative._walk(visitor);\n        });\n    }\n}, AST_StatementWithBody);\n\n/* -----[ SWITCH ]----- */\n\nvar AST_Switch = DEFNODE(\"Switch\", \"expression\", {\n    $documentation: \"A `switch` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `switch` “discriminant”\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, {\n    $documentation: \"Base class for `switch` branches\",\n}, AST_Block);\n\nvar AST_Default = DEFNODE(\"Default\", null, {\n    $documentation: \"A `default` switch branch\",\n}, AST_SwitchBranch);\n\nvar AST_Case = DEFNODE(\"Case\", \"expression\", {\n    $documentation: \"A `case` switch branch\",\n    $propdoc: {\n        expression: \"[AST_Node] the `case` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_SwitchBranch);\n\n/* -----[ EXCEPTIONS ]----- */\n\nvar AST_Try = DEFNODE(\"Try\", \"bcatch bfinally\", {\n    $documentation: \"A `try` statement\",\n    $propdoc: {\n        bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n        bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            walk_body(this, visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Catch = DEFNODE(\"Catch\", \"argname\", {\n    $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n    $propdoc: {\n        argname: \"[AST_SymbolCatch] symbol for the exception\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.argname._walk(visitor);\n            walk_body(this, visitor);\n        });\n    }\n}, AST_Block);\n\nvar AST_Finally = DEFNODE(\"Finally\", null, {\n    $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n}, AST_Block);\n\n/* -----[ VAR/CONST ]----- */\n\nvar AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", {\n    $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n    $propdoc: {\n        definitions: \"[AST_VarDef*] array of variable definitions\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.definitions.forEach(function(def){\n                def._walk(visitor);\n            });\n        });\n    }\n}, AST_Statement);\n\nvar AST_Var = DEFNODE(\"Var\", null, {\n    $documentation: \"A `var` statement\"\n}, AST_Definitions);\n\nvar AST_Const = DEFNODE(\"Const\", null, {\n    $documentation: \"A `const` statement\"\n}, AST_Definitions);\n\nvar AST_VarDef = DEFNODE(\"VarDef\", \"name value\", {\n    $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n    $propdoc: {\n        name: \"[AST_SymbolVar|AST_SymbolConst] name of the variable\",\n        value: \"[AST_Node?] initializer, or null of there's no initializer\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.name._walk(visitor);\n            if (this.value) this.value._walk(visitor);\n        });\n    }\n});\n\n/* -----[ OTHER ]----- */\n\nvar AST_Call = DEFNODE(\"Call\", \"expression args\", {\n    $documentation: \"A function call expression\",\n    $propdoc: {\n        expression: \"[AST_Node] expression to invoke as function\",\n        args: \"[AST_Node*] array of arguments\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.args.forEach(function(arg){\n                arg._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_New = DEFNODE(\"New\", null, {\n    $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n}, AST_Call);\n\nvar AST_Seq = DEFNODE(\"Seq\", \"car cdr\", {\n    $documentation: \"A sequence expression (two comma-separated expressions)\",\n    $propdoc: {\n        car: \"[AST_Node] first element in sequence\",\n        cdr: \"[AST_Node] second element in sequence\"\n    },\n    $cons: function(x, y) {\n        var seq = new AST_Seq(x);\n        seq.car = x;\n        seq.cdr = y;\n        return seq;\n    },\n    $from_array: function(array) {\n        if (array.length == 0) return null;\n        if (array.length == 1) return array[0].clone();\n        var list = null;\n        for (var i = array.length; --i >= 0;) {\n            list = AST_Seq.cons(array[i], list);\n        }\n        var p = list;\n        while (p) {\n            if (p.cdr && !p.cdr.cdr) {\n                p.cdr = p.cdr.car;\n                break;\n            }\n            p = p.cdr;\n        }\n        return list;\n    },\n    to_array: function() {\n        var p = this, a = [];\n        while (p) {\n            a.push(p.car);\n            if (p.cdr && !(p.cdr instanceof AST_Seq)) {\n                a.push(p.cdr);\n                break;\n            }\n            p = p.cdr;\n        }\n        return a;\n    },\n    add: function(node) {\n        var p = this;\n        while (p) {\n            if (!(p.cdr instanceof AST_Seq)) {\n                var cell = AST_Seq.cons(p.cdr, node);\n                return p.cdr = cell;\n            }\n            p = p.cdr;\n        }\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.car._walk(visitor);\n            if (this.cdr) this.cdr._walk(visitor);\n        });\n    }\n});\n\nvar AST_PropAccess = DEFNODE(\"PropAccess\", \"expression property\", {\n    $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n    $propdoc: {\n        expression: \"[AST_Node] the “container” expression\",\n        property: \"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\"\n    }\n});\n\nvar AST_Dot = DEFNODE(\"Dot\", null, {\n    $documentation: \"A dotted property access expression\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Sub = DEFNODE(\"Sub\", null, {\n    $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n            this.property._walk(visitor);\n        });\n    }\n}, AST_PropAccess);\n\nvar AST_Unary = DEFNODE(\"Unary\", \"operator expression\", {\n    $documentation: \"Base class for unary expressions\",\n    $propdoc: {\n        operator: \"[string] the operator\",\n        expression: \"[AST_Node] expression that this unary operator applies to\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.expression._walk(visitor);\n        });\n    }\n});\n\nvar AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, {\n    $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n}, AST_Unary);\n\nvar AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, {\n    $documentation: \"Unary postfix expression, i.e. `i++`\"\n}, AST_Unary);\n\nvar AST_Binary = DEFNODE(\"Binary\", \"left operator right\", {\n    $documentation: \"Binary expression, i.e. `a + b`\",\n    $propdoc: {\n        left: \"[AST_Node] left-hand side expression\",\n        operator: \"[string] the operator\",\n        right: \"[AST_Node] right-hand side expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.left._walk(visitor);\n            this.right._walk(visitor);\n        });\n    }\n});\n\nvar AST_Conditional = DEFNODE(\"Conditional\", \"condition consequent alternative\", {\n    $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n    $propdoc: {\n        condition: \"[AST_Node]\",\n        consequent: \"[AST_Node]\",\n        alternative: \"[AST_Node]\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.condition._walk(visitor);\n            this.consequent._walk(visitor);\n            this.alternative._walk(visitor);\n        });\n    }\n});\n\nvar AST_Assign = DEFNODE(\"Assign\", null, {\n    $documentation: \"An assignment expression — `a = b + 5`\",\n}, AST_Binary);\n\n/* -----[ LITERALS ]----- */\n\nvar AST_Array = DEFNODE(\"Array\", \"elements\", {\n    $documentation: \"An array literal\",\n    $propdoc: {\n        elements: \"[AST_Node*] array of elements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.elements.forEach(function(el){\n                el._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_Object = DEFNODE(\"Object\", \"properties\", {\n    $documentation: \"An object literal\",\n    $propdoc: {\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.properties.forEach(function(prop){\n                prop._walk(visitor);\n            });\n        });\n    }\n});\n\nvar AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", {\n    $documentation: \"Base class for literal object properties\",\n    $propdoc: {\n        key: \"[string] the property name converted to a string for ObjectKeyVal.  For setters and getters this is an arbitrary AST_Node.\",\n        value: \"[AST_Node] property value.  For setters and getters this is an AST_Function.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function(){\n            this.value._walk(visitor);\n        });\n    }\n});\n\nvar AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", {\n    $documentation: \"A key: value object property\",\n    $propdoc: {\n        quote: \"[string] the original quote character\"\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectSetter = DEFNODE(\"ObjectSetter\", null, {\n    $documentation: \"An object setter property\",\n}, AST_ObjectProperty);\n\nvar AST_ObjectGetter = DEFNODE(\"ObjectGetter\", null, {\n    $documentation: \"An object getter property\",\n}, AST_ObjectProperty);\n\nvar AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", {\n    $propdoc: {\n        name: \"[string] name of this symbol\",\n        scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n        thedef: \"[SymbolDef/S] the definition of this symbol\"\n    },\n    $documentation: \"Base class for all symbols\",\n});\n\nvar AST_SymbolAccessor = DEFNODE(\"SymbolAccessor\", null, {\n    $documentation: \"The name of a property accessor (setter/getter function)\"\n}, AST_Symbol);\n\nvar AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", {\n    $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\",\n    $propdoc: {\n        init: \"[AST_Node*/S] array of initializers for this declaration.\"\n    }\n}, AST_Symbol);\n\nvar AST_SymbolVar = DEFNODE(\"SymbolVar\", null, {\n    $documentation: \"Symbol defining a variable\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolConst = DEFNODE(\"SymbolConst\", null, {\n    $documentation: \"A constant declaration\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, {\n    $documentation: \"Symbol naming a function argument\",\n}, AST_SymbolVar);\n\nvar AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, {\n    $documentation: \"Symbol defining a function\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, {\n    $documentation: \"Symbol naming a function expression\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, {\n    $documentation: \"Symbol naming the exception in catch\",\n}, AST_SymbolDeclaration);\n\nvar AST_Label = DEFNODE(\"Label\", \"references\", {\n    $documentation: \"Symbol naming a label (declaration)\",\n    $propdoc: {\n        references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n    },\n    initialize: function() {\n        this.references = [];\n        this.thedef = this;\n    }\n}, AST_Symbol);\n\nvar AST_SymbolRef = DEFNODE(\"SymbolRef\", null, {\n    $documentation: \"Reference to some symbol (not definition/declaration)\",\n}, AST_Symbol);\n\nvar AST_LabelRef = DEFNODE(\"LabelRef\", null, {\n    $documentation: \"Reference to a label symbol\",\n}, AST_Symbol);\n\nvar AST_This = DEFNODE(\"This\", null, {\n    $documentation: \"The `this` symbol\",\n}, AST_Symbol);\n\nvar AST_Constant = DEFNODE(\"Constant\", null, {\n    $documentation: \"Base class for all constants\",\n    getValue: function() {\n        return this.value;\n    }\n});\n\nvar AST_String = DEFNODE(\"String\", \"value quote\", {\n    $documentation: \"A string literal\",\n    $propdoc: {\n        value: \"[string] the contents of this string\",\n        quote: \"[string] the original quote character\"\n    }\n}, AST_Constant);\n\nvar AST_Number = DEFNODE(\"Number\", \"value\", {\n    $documentation: \"A number literal\",\n    $propdoc: {\n        value: \"[number] the numeric value\"\n    }\n}, AST_Constant);\n\nvar AST_RegExp = DEFNODE(\"RegExp\", \"value\", {\n    $documentation: \"A regexp literal\",\n    $propdoc: {\n        value: \"[RegExp] the actual regexp\"\n    }\n}, AST_Constant);\n\nvar AST_Atom = DEFNODE(\"Atom\", null, {\n    $documentation: \"Base class for atoms\",\n}, AST_Constant);\n\nvar AST_Null = DEFNODE(\"Null\", null, {\n    $documentation: \"The `null` atom\",\n    value: null\n}, AST_Atom);\n\nvar AST_NaN = DEFNODE(\"NaN\", null, {\n    $documentation: \"The impossible value\",\n    value: 0/0\n}, AST_Atom);\n\nvar AST_Undefined = DEFNODE(\"Undefined\", null, {\n    $documentation: \"The `undefined` value\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Hole = DEFNODE(\"Hole\", null, {\n    $documentation: \"A hole in an array\",\n    value: (function(){}())\n}, AST_Atom);\n\nvar AST_Infinity = DEFNODE(\"Infinity\", null, {\n    $documentation: \"The `Infinity` value\",\n    value: 1/0\n}, AST_Atom);\n\nvar AST_Boolean = DEFNODE(\"Boolean\", null, {\n    $documentation: \"Base class for booleans\",\n}, AST_Atom);\n\nvar AST_False = DEFNODE(\"False\", null, {\n    $documentation: \"The `false` atom\",\n    value: false\n}, AST_Boolean);\n\nvar AST_True = DEFNODE(\"True\", null, {\n    $documentation: \"The `true` atom\",\n    value: true\n}, AST_Boolean);\n\n/* -----[ TreeWalker ]----- */\n\nfunction TreeWalker(callback) {\n    this.visit = callback;\n    this.stack = [];\n};\nTreeWalker.prototype = {\n    _visit: function(node, descend) {\n        this.stack.push(node);\n        var ret = this.visit(node, descend ? function(){\n            descend.call(node);\n        } : noop);\n        if (!ret && descend) {\n            descend.call(node);\n        }\n        this.stack.pop();\n        return ret;\n    },\n    parent: function(n) {\n        return this.stack[this.stack.length - 2 - (n || 0)];\n    },\n    push: function (node) {\n        this.stack.push(node);\n    },\n    pop: function() {\n        return this.stack.pop();\n    },\n    self: function() {\n        return this.stack[this.stack.length - 1];\n    },\n    find_parent: function(type) {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n        }\n    },\n    has_directive: function(type) {\n        return this.find_parent(AST_Scope).has_directive(type);\n    },\n    in_boolean_context: function() {\n        var stack = this.stack;\n        var i = stack.length, self = stack[--i];\n        while (i > 0) {\n            var p = stack[--i];\n            if ((p instanceof AST_If           && p.condition === self) ||\n                (p instanceof AST_Conditional  && p.condition === self) ||\n                (p instanceof AST_DWLoop       && p.condition === self) ||\n                (p instanceof AST_For          && p.condition === self) ||\n                (p instanceof AST_UnaryPrefix  && p.operator == \"!\" && p.expression === self))\n            {\n                return true;\n            }\n            if (!(p instanceof AST_Binary && (p.operator == \"&&\" || p.operator == \"||\")))\n                return false;\n            self = p;\n        }\n    },\n    loopcontrol_target: function(label) {\n        var stack = this.stack;\n        if (label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == label.name) {\n                return x.body;\n            }\n        } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_Switch || x instanceof AST_IterationStatement)\n                return x;\n        }\n    }\n};\n",
  "uglify-js/lib/compress.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction Compressor(options, false_by_default) {\n    if (!(this instanceof Compressor))\n        return new Compressor(options, false_by_default);\n    TreeTransformer.call(this, this.before, this.after);\n    this.options = defaults(options, {\n        sequences     : !false_by_default,\n        properties    : !false_by_default,\n        dead_code     : !false_by_default,\n        drop_debugger : !false_by_default,\n        unsafe        : false,\n        unsafe_comps  : false,\n        conditionals  : !false_by_default,\n        comparisons   : !false_by_default,\n        evaluate      : !false_by_default,\n        booleans      : !false_by_default,\n        loops         : !false_by_default,\n        unused        : !false_by_default,\n        hoist_funs    : !false_by_default,\n        keep_fargs    : false,\n        keep_fnames   : false,\n        hoist_vars    : false,\n        if_return     : !false_by_default,\n        join_vars     : !false_by_default,\n        cascade       : !false_by_default,\n        side_effects  : !false_by_default,\n        pure_getters  : false,\n        pure_funcs    : null,\n        negate_iife   : !false_by_default,\n        screw_ie8     : false,\n        drop_console  : false,\n        angular       : false,\n\n        warnings      : true,\n        global_defs   : {}\n    }, true);\n};\n\nCompressor.prototype = new TreeTransformer;\nmerge(Compressor.prototype, {\n    option: function(key) { return this.options[key] },\n    warn: function() {\n        if (this.options.warnings)\n            AST_Node.warn.apply(AST_Node, arguments);\n    },\n    before: function(node, descend, in_list) {\n        if (node._squeezed) return node;\n        var was_scope = false;\n        if (node instanceof AST_Scope) {\n            node = node.hoist_declarations(this);\n            was_scope = true;\n        }\n        descend(node, this);\n        node = node.optimize(this);\n        if (was_scope && node instanceof AST_Scope) {\n            node.drop_unused(this);\n            descend(node, this);\n        }\n        node._squeezed = true;\n        return node;\n    }\n});\n\n(function(){\n\n    function OPT(node, optimizer) {\n        node.DEFMETHOD(\"optimize\", function(compressor){\n            var self = this;\n            if (self._optimized) return self;\n            var opt = optimizer(self, compressor);\n            opt._optimized = true;\n            if (opt === self) return opt;\n            return opt.transform(compressor);\n        });\n    };\n\n    OPT(AST_Node, function(self, compressor){\n        return self;\n    });\n\n    AST_Node.DEFMETHOD(\"equivalent_to\", function(node){\n        // XXX: this is a rather expensive way to test two node's equivalence:\n        return this.print_to_string() == node.print_to_string();\n    });\n\n    function make_node(ctor, orig, props) {\n        if (!props) props = {};\n        if (orig) {\n            if (!props.start) props.start = orig.start;\n            if (!props.end) props.end = orig.end;\n        }\n        return new ctor(props);\n    };\n\n    function make_node_from_constant(compressor, val, orig) {\n        // XXX: WIP.\n        // if (val instanceof AST_Node) return val.transform(new TreeTransformer(null, function(node){\n        //     if (node instanceof AST_SymbolRef) {\n        //         var scope = compressor.find_parent(AST_Scope);\n        //         var def = scope.find_variable(node);\n        //         node.thedef = def;\n        //         return node;\n        //     }\n        // })).transform(compressor);\n\n        if (val instanceof AST_Node) return val.transform(compressor);\n        switch (typeof val) {\n          case \"string\":\n            return make_node(AST_String, orig, {\n                value: val\n            }).optimize(compressor);\n          case \"number\":\n            return make_node(isNaN(val) ? AST_NaN : AST_Number, orig, {\n                value: val\n            }).optimize(compressor);\n          case \"boolean\":\n            return make_node(val ? AST_True : AST_False, orig).optimize(compressor);\n          case \"undefined\":\n            return make_node(AST_Undefined, orig).optimize(compressor);\n          default:\n            if (val === null) {\n                return make_node(AST_Null, orig, { value: null }).optimize(compressor);\n            }\n            if (val instanceof RegExp) {\n                return make_node(AST_RegExp, orig, { value: val }).optimize(compressor);\n            }\n            throw new Error(string_template(\"Can't handle constant of type: {type}\", {\n                type: typeof val\n            }));\n        }\n    };\n\n    function as_statement_array(thing) {\n        if (thing === null) return [];\n        if (thing instanceof AST_BlockStatement) return thing.body;\n        if (thing instanceof AST_EmptyStatement) return [];\n        if (thing instanceof AST_Statement) return [ thing ];\n        throw new Error(\"Can't convert thing to statement array\");\n    };\n\n    function is_empty(thing) {\n        if (thing === null) return true;\n        if (thing instanceof AST_EmptyStatement) return true;\n        if (thing instanceof AST_BlockStatement) return thing.body.length == 0;\n        return false;\n    };\n\n    function loop_body(x) {\n        if (x instanceof AST_Switch) return x;\n        if (x instanceof AST_For || x instanceof AST_ForIn || x instanceof AST_DWLoop) {\n            return (x.body instanceof AST_BlockStatement ? x.body : x);\n        }\n        return x;\n    };\n\n    function tighten_body(statements, compressor) {\n        var CHANGED;\n        do {\n            CHANGED = false;\n            if (compressor.option(\"angular\")) {\n                statements = process_for_angular(statements);\n            }\n            statements = eliminate_spurious_blocks(statements);\n            if (compressor.option(\"dead_code\")) {\n                statements = eliminate_dead_code(statements, compressor);\n            }\n            if (compressor.option(\"if_return\")) {\n                statements = handle_if_return(statements, compressor);\n            }\n            if (compressor.option(\"sequences\")) {\n                statements = sequencesize(statements, compressor);\n            }\n            if (compressor.option(\"join_vars\")) {\n                statements = join_consecutive_vars(statements, compressor);\n            }\n        } while (CHANGED);\n\n        if (compressor.option(\"negate_iife\")) {\n            negate_iifes(statements, compressor);\n        }\n\n        return statements;\n\n        function process_for_angular(statements) {\n            function has_inject(comment) {\n                return /@ngInject/.test(comment.value);\n            }\n            function make_arguments_names_list(func) {\n                return func.argnames.map(function(sym){\n                    return make_node(AST_String, sym, { value: sym.name });\n                });\n            }\n            function make_array(orig, elements) {\n                return make_node(AST_Array, orig, { elements: elements });\n            }\n            function make_injector(func, name) {\n                return make_node(AST_SimpleStatement, func, {\n                    body: make_node(AST_Assign, func, {\n                        operator: \"=\",\n                        left: make_node(AST_Dot, name, {\n                            expression: make_node(AST_SymbolRef, name, name),\n                            property: \"$inject\"\n                        }),\n                        right: make_array(func, make_arguments_names_list(func))\n                    })\n                });\n            }\n            function check_expression(body) {\n                if (body && body.args) {\n                    // if this is a function call check all of arguments passed\n                    body.args.forEach(function(argument, index, array) {\n                        var comments = argument.start.comments_before;\n                        // if the argument is function preceded by @ngInject\n                        if (argument instanceof AST_Lambda && comments.length && has_inject(comments[0])) {\n                            // replace the function with an array of names of its parameters and function at the end\n                            array[index] = make_array(argument, make_arguments_names_list(argument).concat(argument));\n                        }\n                    });\n                    // if this is chained call check previous one recursively\n                    if (body.expression && body.expression.expression) {\n                        check_expression(body.expression.expression);\n                    }\n                }\n            }\n            return statements.reduce(function(a, stat){\n                a.push(stat);\n\n                if (stat.body && stat.body.args) {\n                    check_expression(stat.body);\n                } else {\n                    var token = stat.start;\n                    var comments = token.comments_before;\n                    if (comments && comments.length > 0) {\n                        var last = comments.pop();\n                        if (has_inject(last)) {\n                            // case 1: defun\n                            if (stat instanceof AST_Defun) {\n                                a.push(make_injector(stat, stat.name));\n                            }\n                            else if (stat instanceof AST_Definitions) {\n                                stat.definitions.forEach(function(def) {\n                                    if (def.value && def.value instanceof AST_Lambda) {\n                                        a.push(make_injector(def.value, def.name));\n                                    }\n                                });\n                            }\n                            else {\n                                compressor.warn(\"Unknown statement marked with @ngInject [{file}:{line},{col}]\", token);\n                            }\n                        }\n                    }\n                }\n\n                return a;\n            }, []);\n        }\n\n        function eliminate_spurious_blocks(statements) {\n            var seen_dirs = [];\n            return statements.reduce(function(a, stat){\n                if (stat instanceof AST_BlockStatement) {\n                    CHANGED = true;\n                    a.push.apply(a, eliminate_spurious_blocks(stat.body));\n                } else if (stat instanceof AST_EmptyStatement) {\n                    CHANGED = true;\n                } else if (stat instanceof AST_Directive) {\n                    if (seen_dirs.indexOf(stat.value) < 0) {\n                        a.push(stat);\n                        seen_dirs.push(stat.value);\n                    } else {\n                        CHANGED = true;\n                    }\n                } else {\n                    a.push(stat);\n                }\n                return a;\n            }, []);\n        };\n\n        function handle_if_return(statements, compressor) {\n            var self = compressor.self();\n            var in_lambda = self instanceof AST_Lambda;\n            var ret = [];\n            loop: for (var i = statements.length; --i >= 0;) {\n                var stat = statements[i];\n                switch (true) {\n                  case (in_lambda && stat instanceof AST_Return && !stat.value && ret.length == 0):\n                    CHANGED = true;\n                    // note, ret.length is probably always zero\n                    // because we drop unreachable code before this\n                    // step.  nevertheless, it's good to check.\n                    continue loop;\n                  case stat instanceof AST_If:\n                    if (stat.body instanceof AST_Return) {\n                        //---\n                        // pretty silly case, but:\n                        // if (foo()) return; return; ==> foo(); return;\n                        if (((in_lambda && ret.length == 0)\n                             || (ret[0] instanceof AST_Return && !ret[0].value))\n                            && !stat.body.value && !stat.alternative) {\n                            CHANGED = true;\n                            var cond = make_node(AST_SimpleStatement, stat.condition, {\n                                body: stat.condition\n                            });\n                            ret.unshift(cond);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return x; return y; ==> return foo() ? x : y;\n                        if (ret[0] instanceof AST_Return && stat.body.value && ret[0].value && !stat.alternative) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.alternative = ret[0];\n                            ret[0] = stat.transform(compressor);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;\n                        if ((ret.length == 0 || ret[0] instanceof AST_Return) && stat.body.value && !stat.alternative && in_lambda) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.alternative = ret[0] || make_node(AST_Return, stat, {\n                                value: make_node(AST_Undefined, stat)\n                            });\n                            ret[0] = stat.transform(compressor);\n                            continue loop;\n                        }\n                        //---\n                        // if (foo()) return; [ else x... ]; y... ==> if (!foo()) { x...; y... }\n                        if (!stat.body.value && in_lambda) {\n                            CHANGED = true;\n                            stat = stat.clone();\n                            stat.condition = stat.condition.negate(compressor);\n                            stat.body = make_node(AST_BlockStatement, stat, {\n                                body: as_statement_array(stat.alternative).concat(ret)\n                            });\n                            stat.alternative = null;\n                            ret = [ stat.transform(compressor) ];\n                            continue loop;\n                        }\n                        //---\n                        if (ret.length == 1 && in_lambda && ret[0] instanceof AST_SimpleStatement\n                            && (!stat.alternative || stat.alternative instanceof AST_SimpleStatement)) {\n                            CHANGED = true;\n                            ret.push(make_node(AST_Return, ret[0], {\n                                value: make_node(AST_Undefined, ret[0])\n                            }).transform(compressor));\n                            ret = as_statement_array(stat.alternative).concat(ret);\n                            ret.unshift(stat);\n                            continue loop;\n                        }\n                    }\n\n                    var ab = aborts(stat.body);\n                    var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab.label) : null;\n                    if (ab && ((ab instanceof AST_Return && !ab.value && in_lambda)\n                               || (ab instanceof AST_Continue && self === loop_body(lct))\n                               || (ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct))) {\n                        if (ab.label) {\n                            remove(ab.label.thedef.references, ab);\n                        }\n                        CHANGED = true;\n                        var body = as_statement_array(stat.body).slice(0, -1);\n                        stat = stat.clone();\n                        stat.condition = stat.condition.negate(compressor);\n                        stat.body = make_node(AST_BlockStatement, stat, {\n                            body: as_statement_array(stat.alternative).concat(ret)\n                        });\n                        stat.alternative = make_node(AST_BlockStatement, stat, {\n                            body: body\n                        });\n                        ret = [ stat.transform(compressor) ];\n                        continue loop;\n                    }\n\n                    var ab = aborts(stat.alternative);\n                    var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab.label) : null;\n                    if (ab && ((ab instanceof AST_Return && !ab.value && in_lambda)\n                               || (ab instanceof AST_Continue && self === loop_body(lct))\n                               || (ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct))) {\n                        if (ab.label) {\n                            remove(ab.label.thedef.references, ab);\n                        }\n                        CHANGED = true;\n                        stat = stat.clone();\n                        stat.body = make_node(AST_BlockStatement, stat.body, {\n                            body: as_statement_array(stat.body).concat(ret)\n                        });\n                        stat.alternative = make_node(AST_BlockStatement, stat.alternative, {\n                            body: as_statement_array(stat.alternative).slice(0, -1)\n                        });\n                        ret = [ stat.transform(compressor) ];\n                        continue loop;\n                    }\n\n                    ret.unshift(stat);\n                    break;\n                  default:\n                    ret.unshift(stat);\n                    break;\n                }\n            }\n            return ret;\n        };\n\n        function eliminate_dead_code(statements, compressor) {\n            var has_quit = false;\n            var orig = statements.length;\n            var self = compressor.self();\n            statements = statements.reduce(function(a, stat){\n                if (has_quit) {\n                    extract_declarations_from_unreachable_code(compressor, stat, a);\n                } else {\n                    if (stat instanceof AST_LoopControl) {\n                        var lct = compressor.loopcontrol_target(stat.label);\n                        if ((stat instanceof AST_Break\n                             && lct instanceof AST_BlockStatement\n                             && loop_body(lct) === self) || (stat instanceof AST_Continue\n                                                             && loop_body(lct) === self)) {\n                            if (stat.label) {\n                                remove(stat.label.thedef.references, stat);\n                            }\n                        } else {\n                            a.push(stat);\n                        }\n                    } else {\n                        a.push(stat);\n                    }\n                    if (aborts(stat)) has_quit = true;\n                }\n                return a;\n            }, []);\n            CHANGED = statements.length != orig;\n            return statements;\n        };\n\n        function sequencesize(statements, compressor) {\n            if (statements.length < 2) return statements;\n            var seq = [], ret = [];\n            function push_seq() {\n                seq = AST_Seq.from_array(seq);\n                if (seq) ret.push(make_node(AST_SimpleStatement, seq, {\n                    body: seq\n                }));\n                seq = [];\n            };\n            statements.forEach(function(stat){\n                if (stat instanceof AST_SimpleStatement && seq.length < 2000) seq.push(stat.body);\n                else push_seq(), ret.push(stat);\n            });\n            push_seq();\n            ret = sequencesize_2(ret, compressor);\n            CHANGED = ret.length != statements.length;\n            return ret;\n        };\n\n        function sequencesize_2(statements, compressor) {\n            function cons_seq(right) {\n                ret.pop();\n                var left = prev.body;\n                if (left instanceof AST_Seq) {\n                    left.add(right);\n                } else {\n                    left = AST_Seq.cons(left, right);\n                }\n                return left.transform(compressor);\n            };\n            var ret = [], prev = null;\n            statements.forEach(function(stat){\n                if (prev) {\n                    if (stat instanceof AST_For) {\n                        var opera = {};\n                        try {\n                            prev.body.walk(new TreeWalker(function(node){\n                                if (node instanceof AST_Binary && node.operator == \"in\")\n                                    throw opera;\n                            }));\n                            if (stat.init && !(stat.init instanceof AST_Definitions)) {\n                                stat.init = cons_seq(stat.init);\n                            }\n                            else if (!stat.init) {\n                                stat.init = prev.body;\n                                ret.pop();\n                            }\n                        } catch(ex) {\n                            if (ex !== opera) throw ex;\n                        }\n                    }\n                    else if (stat instanceof AST_If) {\n                        stat.condition = cons_seq(stat.condition);\n                    }\n                    else if (stat instanceof AST_With) {\n                        stat.expression = cons_seq(stat.expression);\n                    }\n                    else if (stat instanceof AST_Exit && stat.value) {\n                        stat.value = cons_seq(stat.value);\n                    }\n                    else if (stat instanceof AST_Exit) {\n                        stat.value = cons_seq(make_node(AST_Undefined, stat));\n                    }\n                    else if (stat instanceof AST_Switch) {\n                        stat.expression = cons_seq(stat.expression);\n                    }\n                }\n                ret.push(stat);\n                prev = stat instanceof AST_SimpleStatement ? stat : null;\n            });\n            return ret;\n        };\n\n        function join_consecutive_vars(statements, compressor) {\n            var prev = null;\n            return statements.reduce(function(a, stat){\n                if (stat instanceof AST_Definitions && prev && prev.TYPE == stat.TYPE) {\n                    prev.definitions = prev.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                }\n                else if (stat instanceof AST_For\n                         && prev instanceof AST_Definitions\n                         && (!stat.init || stat.init.TYPE == prev.TYPE)) {\n                    CHANGED = true;\n                    a.pop();\n                    if (stat.init) {\n                        stat.init.definitions = prev.definitions.concat(stat.init.definitions);\n                    } else {\n                        stat.init = prev;\n                    }\n                    a.push(stat);\n                    prev = stat;\n                }\n                else {\n                    prev = stat;\n                    a.push(stat);\n                }\n                return a;\n            }, []);\n        };\n\n        function negate_iifes(statements, compressor) {\n            statements.forEach(function(stat){\n                if (stat instanceof AST_SimpleStatement) {\n                    stat.body = (function transform(thing) {\n                        return thing.transform(new TreeTransformer(function(node){\n                            if (node instanceof AST_Call && node.expression instanceof AST_Function) {\n                                return make_node(AST_UnaryPrefix, node, {\n                                    operator: \"!\",\n                                    expression: node\n                                });\n                            }\n                            else if (node instanceof AST_Call) {\n                                node.expression = transform(node.expression);\n                            }\n                            else if (node instanceof AST_Seq) {\n                                node.car = transform(node.car);\n                            }\n                            else if (node instanceof AST_Conditional) {\n                                var expr = transform(node.condition);\n                                if (expr !== node.condition) {\n                                    // it has been negated, reverse\n                                    node.condition = expr;\n                                    var tmp = node.consequent;\n                                    node.consequent = node.alternative;\n                                    node.alternative = tmp;\n                                }\n                            }\n                            return node;\n                        }));\n                    })(stat.body);\n                }\n            });\n        };\n\n    };\n\n    function extract_declarations_from_unreachable_code(compressor, stat, target) {\n        compressor.warn(\"Dropping unreachable code [{file}:{line},{col}]\", stat.start);\n        stat.walk(new TreeWalker(function(node){\n            if (node instanceof AST_Definitions) {\n                compressor.warn(\"Declarations in unreachable code! [{file}:{line},{col}]\", node.start);\n                node.remove_initializers();\n                target.push(node);\n                return true;\n            }\n            if (node instanceof AST_Defun) {\n                target.push(node);\n                return true;\n            }\n            if (node instanceof AST_Scope) {\n                return true;\n            }\n        }));\n    };\n\n    /* -----[ boolean/negation helpers ]----- */\n\n    // methods to determine whether an expression has a boolean result type\n    (function (def){\n        var unary_bool = [ \"!\", \"delete\" ];\n        var binary_bool = [ \"in\", \"instanceof\", \"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">=\", \">\" ];\n        def(AST_Node, function(){ return false });\n        def(AST_UnaryPrefix, function(){\n            return member(this.operator, unary_bool);\n        });\n        def(AST_Binary, function(){\n            return member(this.operator, binary_bool) ||\n                ( (this.operator == \"&&\" || this.operator == \"||\") &&\n                  this.left.is_boolean() && this.right.is_boolean() );\n        });\n        def(AST_Conditional, function(){\n            return this.consequent.is_boolean() && this.alternative.is_boolean();\n        });\n        def(AST_Assign, function(){\n            return this.operator == \"=\" && this.right.is_boolean();\n        });\n        def(AST_Seq, function(){\n            return this.cdr.is_boolean();\n        });\n        def(AST_True, function(){ return true });\n        def(AST_False, function(){ return true });\n    })(function(node, func){\n        node.DEFMETHOD(\"is_boolean\", func);\n    });\n\n    // methods to determine if an expression has a string result type\n    (function (def){\n        def(AST_Node, function(){ return false });\n        def(AST_String, function(){ return true });\n        def(AST_UnaryPrefix, function(){\n            return this.operator == \"typeof\";\n        });\n        def(AST_Binary, function(compressor){\n            return this.operator == \"+\" &&\n                (this.left.is_string(compressor) || this.right.is_string(compressor));\n        });\n        def(AST_Assign, function(compressor){\n            return (this.operator == \"=\" || this.operator == \"+=\") && this.right.is_string(compressor);\n        });\n        def(AST_Seq, function(compressor){\n            return this.cdr.is_string(compressor);\n        });\n        def(AST_Conditional, function(compressor){\n            return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);\n        });\n        def(AST_Call, function(compressor){\n            return compressor.option(\"unsafe\")\n                && this.expression instanceof AST_SymbolRef\n                && this.expression.name == \"String\"\n                && this.expression.undeclared();\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"is_string\", func);\n    });\n\n    function best_of(ast1, ast2) {\n        return ast1.print_to_string().length >\n            ast2.print_to_string().length\n            ? ast2 : ast1;\n    };\n\n    // methods to evaluate a constant expression\n    (function (def){\n        // The evaluate method returns an array with one or two\n        // elements.  If the node has been successfully reduced to a\n        // constant, then the second element tells us the value;\n        // otherwise the second element is missing.  The first element\n        // of the array is always an AST_Node descendant; if\n        // evaluation was successful it's a node that represents the\n        // constant; otherwise it's the original or a replacement node.\n        AST_Node.DEFMETHOD(\"evaluate\", function(compressor){\n            if (!compressor.option(\"evaluate\")) return [ this ];\n            try {\n                var val = this._eval(compressor);\n                return [ best_of(make_node_from_constant(compressor, val, this), this), val ];\n            } catch(ex) {\n                if (ex !== def) throw ex;\n                return [ this ];\n            }\n        });\n        def(AST_Statement, function(){\n            throw new Error(string_template(\"Cannot evaluate a statement [{file}:{line},{col}]\", this.start));\n        });\n        def(AST_Function, function(){\n            // XXX: AST_Function inherits from AST_Scope, which itself\n            // inherits from AST_Statement; however, an AST_Function\n            // isn't really a statement.  This could byte in other\n            // places too. :-( Wish JS had multiple inheritance.\n            throw def;\n        });\n        function ev(node, compressor) {\n            if (!compressor) throw new Error(\"Compressor must be passed\");\n\n            return node._eval(compressor);\n        };\n        def(AST_Node, function(){\n            throw def;          // not constant\n        });\n        def(AST_Constant, function(){\n            return this.getValue();\n        });\n        def(AST_UnaryPrefix, function(compressor){\n            var e = this.expression;\n            switch (this.operator) {\n              case \"!\": return !ev(e, compressor);\n              case \"typeof\":\n                // Function would be evaluated to an array and so typeof would\n                // incorrectly return 'object'. Hence making is a special case.\n                if (e instanceof AST_Function) return typeof function(){};\n\n                e = ev(e, compressor);\n\n                // typeof <RegExp> returns \"object\" or \"function\" on different platforms\n                // so cannot evaluate reliably\n                if (e instanceof RegExp) throw def;\n\n                return typeof e;\n              case \"void\": return void ev(e, compressor);\n              case \"~\": return ~ev(e, compressor);\n              case \"-\":\n                e = ev(e, compressor);\n                if (e === 0) throw def;\n                return -e;\n              case \"+\": return +ev(e, compressor);\n            }\n            throw def;\n        });\n        def(AST_Binary, function(c){\n            var left = this.left, right = this.right;\n            switch (this.operator) {\n              case \"&&\"         : return ev(left, c) &&         ev(right, c);\n              case \"||\"         : return ev(left, c) ||         ev(right, c);\n              case \"|\"          : return ev(left, c) |          ev(right, c);\n              case \"&\"          : return ev(left, c) &          ev(right, c);\n              case \"^\"          : return ev(left, c) ^          ev(right, c);\n              case \"+\"          : return ev(left, c) +          ev(right, c);\n              case \"*\"          : return ev(left, c) *          ev(right, c);\n              case \"/\"          : return ev(left, c) /          ev(right, c);\n              case \"%\"          : return ev(left, c) %          ev(right, c);\n              case \"-\"          : return ev(left, c) -          ev(right, c);\n              case \"<<\"         : return ev(left, c) <<         ev(right, c);\n              case \">>\"         : return ev(left, c) >>         ev(right, c);\n              case \">>>\"        : return ev(left, c) >>>        ev(right, c);\n              case \"==\"         : return ev(left, c) ==         ev(right, c);\n              case \"===\"        : return ev(left, c) ===        ev(right, c);\n              case \"!=\"         : return ev(left, c) !=         ev(right, c);\n              case \"!==\"        : return ev(left, c) !==        ev(right, c);\n              case \"<\"          : return ev(left, c) <          ev(right, c);\n              case \"<=\"         : return ev(left, c) <=         ev(right, c);\n              case \">\"          : return ev(left, c) >          ev(right, c);\n              case \">=\"         : return ev(left, c) >=         ev(right, c);\n              case \"in\"         : return ev(left, c) in         ev(right, c);\n              case \"instanceof\" : return ev(left, c) instanceof ev(right, c);\n            }\n            throw def;\n        });\n        def(AST_Conditional, function(compressor){\n            return ev(this.condition, compressor)\n                ? ev(this.consequent, compressor)\n                : ev(this.alternative, compressor);\n        });\n        def(AST_SymbolRef, function(compressor){\n            var d = this.definition();\n            if (d && d.constant && d.init) return ev(d.init, compressor);\n            throw def;\n        });\n        def(AST_Dot, function(compressor){\n            if (compressor.option(\"unsafe\") && this.property == \"length\") {\n                var str = ev(this.expression, compressor);\n                if (typeof str == \"string\")\n                    return str.length;\n            }\n            throw def;\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"_eval\", func);\n    });\n\n    // method to negate an expression\n    (function(def){\n        function basic_negation(exp) {\n            return make_node(AST_UnaryPrefix, exp, {\n                operator: \"!\",\n                expression: exp\n            });\n        };\n        def(AST_Node, function(){\n            return basic_negation(this);\n        });\n        def(AST_Statement, function(){\n            throw new Error(\"Cannot negate a statement\");\n        });\n        def(AST_Function, function(){\n            return basic_negation(this);\n        });\n        def(AST_UnaryPrefix, function(){\n            if (this.operator == \"!\")\n                return this.expression;\n            return basic_negation(this);\n        });\n        def(AST_Seq, function(compressor){\n            var self = this.clone();\n            self.cdr = self.cdr.negate(compressor);\n            return self;\n        });\n        def(AST_Conditional, function(compressor){\n            var self = this.clone();\n            self.consequent = self.consequent.negate(compressor);\n            self.alternative = self.alternative.negate(compressor);\n            return best_of(basic_negation(this), self);\n        });\n        def(AST_Binary, function(compressor){\n            var self = this.clone(), op = this.operator;\n            if (compressor.option(\"unsafe_comps\")) {\n                switch (op) {\n                  case \"<=\" : self.operator = \">\"  ; return self;\n                  case \"<\"  : self.operator = \">=\" ; return self;\n                  case \">=\" : self.operator = \"<\"  ; return self;\n                  case \">\"  : self.operator = \"<=\" ; return self;\n                }\n            }\n            switch (op) {\n              case \"==\" : self.operator = \"!=\"; return self;\n              case \"!=\" : self.operator = \"==\"; return self;\n              case \"===\": self.operator = \"!==\"; return self;\n              case \"!==\": self.operator = \"===\"; return self;\n              case \"&&\":\n                self.operator = \"||\";\n                self.left = self.left.negate(compressor);\n                self.right = self.right.negate(compressor);\n                return best_of(basic_negation(this), self);\n              case \"||\":\n                self.operator = \"&&\";\n                self.left = self.left.negate(compressor);\n                self.right = self.right.negate(compressor);\n                return best_of(basic_negation(this), self);\n            }\n            return basic_negation(this);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"negate\", function(compressor){\n            return func.call(this, compressor);\n        });\n    });\n\n    // determine if expression has side effects\n    (function(def){\n        def(AST_Node, function(compressor){ return true });\n\n        def(AST_EmptyStatement, function(compressor){ return false });\n        def(AST_Constant, function(compressor){ return false });\n        def(AST_This, function(compressor){ return false });\n\n        def(AST_Call, function(compressor){\n            var pure = compressor.option(\"pure_funcs\");\n            if (!pure) return true;\n            return pure.indexOf(this.expression.print_to_string()) < 0;\n        });\n\n        def(AST_Block, function(compressor){\n            for (var i = this.body.length; --i >= 0;) {\n                if (this.body[i].has_side_effects(compressor))\n                    return true;\n            }\n            return false;\n        });\n\n        def(AST_SimpleStatement, function(compressor){\n            return this.body.has_side_effects(compressor);\n        });\n        def(AST_Defun, function(compressor){ return true });\n        def(AST_Function, function(compressor){ return false });\n        def(AST_Binary, function(compressor){\n            return this.left.has_side_effects(compressor)\n                || this.right.has_side_effects(compressor);\n        });\n        def(AST_Assign, function(compressor){ return true });\n        def(AST_Conditional, function(compressor){\n            return this.condition.has_side_effects(compressor)\n                || this.consequent.has_side_effects(compressor)\n                || this.alternative.has_side_effects(compressor);\n        });\n        def(AST_Unary, function(compressor){\n            return this.operator == \"delete\"\n                || this.operator == \"++\"\n                || this.operator == \"--\"\n                || this.expression.has_side_effects(compressor);\n        });\n        def(AST_SymbolRef, function(compressor){\n            return this.global() && this.undeclared();\n        });\n        def(AST_Object, function(compressor){\n            for (var i = this.properties.length; --i >= 0;)\n                if (this.properties[i].has_side_effects(compressor))\n                    return true;\n            return false;\n        });\n        def(AST_ObjectProperty, function(compressor){\n            return this.value.has_side_effects(compressor);\n        });\n        def(AST_Array, function(compressor){\n            for (var i = this.elements.length; --i >= 0;)\n                if (this.elements[i].has_side_effects(compressor))\n                    return true;\n            return false;\n        });\n        def(AST_Dot, function(compressor){\n            if (!compressor.option(\"pure_getters\")) return true;\n            return this.expression.has_side_effects(compressor);\n        });\n        def(AST_Sub, function(compressor){\n            if (!compressor.option(\"pure_getters\")) return true;\n            return this.expression.has_side_effects(compressor)\n                || this.property.has_side_effects(compressor);\n        });\n        def(AST_PropAccess, function(compressor){\n            return !compressor.option(\"pure_getters\");\n        });\n        def(AST_Seq, function(compressor){\n            return this.car.has_side_effects(compressor)\n                || this.cdr.has_side_effects(compressor);\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"has_side_effects\", func);\n    });\n\n    // tell me if a statement aborts\n    function aborts(thing) {\n        return thing && thing.aborts();\n    };\n    (function(def){\n        def(AST_Statement, function(){ return null });\n        def(AST_Jump, function(){ return this });\n        function block_aborts(){\n            var n = this.body.length;\n            return n > 0 && aborts(this.body[n - 1]);\n        };\n        def(AST_BlockStatement, block_aborts);\n        def(AST_SwitchBranch, block_aborts);\n        def(AST_If, function(){\n            return this.alternative && aborts(this.body) && aborts(this.alternative) && this;\n        });\n    })(function(node, func){\n        node.DEFMETHOD(\"aborts\", func);\n    });\n\n    /* -----[ optimizers ]----- */\n\n    OPT(AST_Directive, function(self, compressor){\n        if (self.scope.has_directive(self.value) !== self.scope) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        return self;\n    });\n\n    OPT(AST_Debugger, function(self, compressor){\n        if (compressor.option(\"drop_debugger\"))\n            return make_node(AST_EmptyStatement, self);\n        return self;\n    });\n\n    OPT(AST_LabeledStatement, function(self, compressor){\n        if (self.body instanceof AST_Break\n            && compressor.loopcontrol_target(self.body.label) === self.body) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        return self.label.references.length == 0 ? self.body : self;\n    });\n\n    OPT(AST_Block, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        return self;\n    });\n\n    OPT(AST_BlockStatement, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        switch (self.body.length) {\n          case 1: return self.body[0];\n          case 0: return make_node(AST_EmptyStatement, self);\n        }\n        return self;\n    });\n\n    AST_Scope.DEFMETHOD(\"drop_unused\", function(compressor){\n        var self = this;\n        if (compressor.option(\"unused\")\n            && !(self instanceof AST_Toplevel)\n            && !self.uses_eval\n           ) {\n            var in_use = [];\n            var initializations = new Dictionary();\n            // pass 1: find out which symbols are directly used in\n            // this scope (not in nested scopes).\n            var scope = this;\n            var tw = new TreeWalker(function(node, descend){\n                if (node !== self) {\n                    if (node instanceof AST_Defun) {\n                        initializations.add(node.name.name, node);\n                        return true; // don't go in nested scopes\n                    }\n                    if (node instanceof AST_Definitions && scope === self) {\n                        node.definitions.forEach(function(def){\n                            if (def.value) {\n                                initializations.add(def.name.name, def.value);\n                                if (def.value.has_side_effects(compressor)) {\n                                    def.value.walk(tw);\n                                }\n                            }\n                        });\n                        return true;\n                    }\n                    if (node instanceof AST_SymbolRef) {\n                        push_uniq(in_use, node.definition());\n                        return true;\n                    }\n                    if (node instanceof AST_Scope) {\n                        var save_scope = scope;\n                        scope = node;\n                        descend();\n                        scope = save_scope;\n                        return true;\n                    }\n                }\n            });\n            self.walk(tw);\n            // pass 2: for every used symbol we need to walk its\n            // initialization code to figure out if it uses other\n            // symbols (that may not be in_use).\n            for (var i = 0; i < in_use.length; ++i) {\n                in_use[i].orig.forEach(function(decl){\n                    // undeclared globals will be instanceof AST_SymbolRef\n                    var init = initializations.get(decl.name);\n                    if (init) init.forEach(function(init){\n                        var tw = new TreeWalker(function(node){\n                            if (node instanceof AST_SymbolRef) {\n                                push_uniq(in_use, node.definition());\n                            }\n                        });\n                        init.walk(tw);\n                    });\n                });\n            }\n            // pass 3: we should drop declarations not in_use\n            var tt = new TreeTransformer(\n                function before(node, descend, in_list) {\n                    if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {\n                        if (compressor.option(\"unsafe\") && !compressor.option(\"keep_fargs\")) {\n                            for (var a = node.argnames, i = a.length; --i >= 0;) {\n                                var sym = a[i];\n                                if (sym.unreferenced()) {\n                                    a.pop();\n                                    compressor.warn(\"Dropping unused function argument {name} [{file}:{line},{col}]\", {\n                                        name : sym.name,\n                                        file : sym.start.file,\n                                        line : sym.start.line,\n                                        col  : sym.start.col\n                                    });\n                                }\n                                else break;\n                            }\n                        }\n                    }\n                    if (node instanceof AST_Defun && node !== self) {\n                        if (!member(node.name.definition(), in_use)) {\n                            compressor.warn(\"Dropping unused function {name} [{file}:{line},{col}]\", {\n                                name : node.name.name,\n                                file : node.name.start.file,\n                                line : node.name.start.line,\n                                col  : node.name.start.col\n                            });\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        return node;\n                    }\n                    if (node instanceof AST_Definitions && !(tt.parent() instanceof AST_ForIn)) {\n                        var def = node.definitions.filter(function(def){\n                            if (member(def.name.definition(), in_use)) return true;\n                            var w = {\n                                name : def.name.name,\n                                file : def.name.start.file,\n                                line : def.name.start.line,\n                                col  : def.name.start.col\n                            };\n                            if (def.value && def.value.has_side_effects(compressor)) {\n                                def._unused_side_effects = true;\n                                compressor.warn(\"Side effects in initialization of unused variable {name} [{file}:{line},{col}]\", w);\n                                return true;\n                            }\n                            compressor.warn(\"Dropping unused variable {name} [{file}:{line},{col}]\", w);\n                            return false;\n                        });\n                        // place uninitialized names at the start\n                        def = mergeSort(def, function(a, b){\n                            if (!a.value && b.value) return -1;\n                            if (!b.value && a.value) return 1;\n                            return 0;\n                        });\n                        // for unused names whose initialization has\n                        // side effects, we can cascade the init. code\n                        // into the next one, or next statement.\n                        var side_effects = [];\n                        for (var i = 0; i < def.length;) {\n                            var x = def[i];\n                            if (x._unused_side_effects) {\n                                side_effects.push(x.value);\n                                def.splice(i, 1);\n                            } else {\n                                if (side_effects.length > 0) {\n                                    side_effects.push(x.value);\n                                    x.value = AST_Seq.from_array(side_effects);\n                                    side_effects = [];\n                                }\n                                ++i;\n                            }\n                        }\n                        if (side_effects.length > 0) {\n                            side_effects = make_node(AST_BlockStatement, node, {\n                                body: [ make_node(AST_SimpleStatement, node, {\n                                    body: AST_Seq.from_array(side_effects)\n                                }) ]\n                            });\n                        } else {\n                            side_effects = null;\n                        }\n                        if (def.length == 0 && !side_effects) {\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (def.length == 0) {\n                            return in_list ? MAP.splice(side_effects.body) : side_effects;\n                        }\n                        node.definitions = def;\n                        if (side_effects) {\n                            side_effects.body.unshift(node);\n                            return in_list ? MAP.splice(side_effects.body) : side_effects;\n                        }\n                        return node;\n                    }\n                    if (node instanceof AST_For) {\n                        descend(node, this);\n\n                        if (node.init instanceof AST_BlockStatement) {\n                            // certain combination of unused name + side effect leads to:\n                            //    https://github.com/mishoo/UglifyJS2/issues/44\n                            // that's an invalid AST.\n                            // We fix it at this stage by moving the `var` outside the `for`.\n\n                            var body = node.init.body.slice(0, -1);\n                            node.init = node.init.body.slice(-1)[0].body;\n                            body.push(node);\n\n                            return in_list ? MAP.splice(body) : make_node(AST_BlockStatement, node, {\n                                body: body\n                            });\n                        }\n                    }\n                    if (node instanceof AST_Scope && node !== self)\n                        return node;\n                }\n            );\n            self.transform(tt);\n        }\n    });\n\n    AST_Scope.DEFMETHOD(\"hoist_declarations\", function(compressor){\n        var hoist_funs = compressor.option(\"hoist_funs\");\n        var hoist_vars = compressor.option(\"hoist_vars\");\n        var self = this;\n        if (hoist_funs || hoist_vars) {\n            var dirs = [];\n            var hoisted = [];\n            var vars = new Dictionary(), vars_found = 0, var_decl = 0;\n            // let's count var_decl first, we seem to waste a lot of\n            // space if we hoist `var` when there's only one.\n            self.walk(new TreeWalker(function(node){\n                if (node instanceof AST_Scope && node !== self)\n                    return true;\n                if (node instanceof AST_Var) {\n                    ++var_decl;\n                    return true;\n                }\n            }));\n            hoist_vars = hoist_vars && var_decl > 1;\n            var tt = new TreeTransformer(\n                function before(node) {\n                    if (node !== self) {\n                        if (node instanceof AST_Directive) {\n                            dirs.push(node);\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (node instanceof AST_Defun && hoist_funs) {\n                            hoisted.push(node);\n                            return make_node(AST_EmptyStatement, node);\n                        }\n                        if (node instanceof AST_Var && hoist_vars) {\n                            node.definitions.forEach(function(def){\n                                vars.set(def.name.name, def);\n                                ++vars_found;\n                            });\n                            var seq = node.to_assignments();\n                            var p = tt.parent();\n                            if (p instanceof AST_ForIn && p.init === node) {\n                                if (seq == null) return node.definitions[0].name;\n                                return seq;\n                            }\n                            if (p instanceof AST_For && p.init === node) {\n                                return seq;\n                            }\n                            if (!seq) return make_node(AST_EmptyStatement, node);\n                            return make_node(AST_SimpleStatement, node, {\n                                body: seq\n                            });\n                        }\n                        if (node instanceof AST_Scope)\n                            return node; // to avoid descending in nested scopes\n                    }\n                }\n            );\n            self = self.transform(tt);\n            if (vars_found > 0) {\n                // collect only vars which don't show up in self's arguments list\n                var defs = [];\n                vars.each(function(def, name){\n                    if (self instanceof AST_Lambda\n                        && find_if(function(x){ return x.name == def.name.name },\n                                   self.argnames)) {\n                        vars.del(name);\n                    } else {\n                        def = def.clone();\n                        def.value = null;\n                        defs.push(def);\n                        vars.set(name, def);\n                    }\n                });\n                if (defs.length > 0) {\n                    // try to merge in assignments\n                    for (var i = 0; i < self.body.length;) {\n                        if (self.body[i] instanceof AST_SimpleStatement) {\n                            var expr = self.body[i].body, sym, assign;\n                            if (expr instanceof AST_Assign\n                                && expr.operator == \"=\"\n                                && (sym = expr.left) instanceof AST_Symbol\n                                && vars.has(sym.name))\n                            {\n                                var def = vars.get(sym.name);\n                                if (def.value) break;\n                                def.value = expr.right;\n                                remove(defs, def);\n                                defs.push(def);\n                                self.body.splice(i, 1);\n                                continue;\n                            }\n                            if (expr instanceof AST_Seq\n                                && (assign = expr.car) instanceof AST_Assign\n                                && assign.operator == \"=\"\n                                && (sym = assign.left) instanceof AST_Symbol\n                                && vars.has(sym.name))\n                            {\n                                var def = vars.get(sym.name);\n                                if (def.value) break;\n                                def.value = assign.right;\n                                remove(defs, def);\n                                defs.push(def);\n                                self.body[i].body = expr.cdr;\n                                continue;\n                            }\n                        }\n                        if (self.body[i] instanceof AST_EmptyStatement) {\n                            self.body.splice(i, 1);\n                            continue;\n                        }\n                        if (self.body[i] instanceof AST_BlockStatement) {\n                            var tmp = [ i, 1 ].concat(self.body[i].body);\n                            self.body.splice.apply(self.body, tmp);\n                            continue;\n                        }\n                        break;\n                    }\n                    defs = make_node(AST_Var, self, {\n                        definitions: defs\n                    });\n                    hoisted.push(defs);\n                };\n            }\n            self.body = dirs.concat(hoisted, self.body);\n        }\n        return self;\n    });\n\n    OPT(AST_SimpleStatement, function(self, compressor){\n        if (compressor.option(\"side_effects\")) {\n            if (!self.body.has_side_effects(compressor)) {\n                compressor.warn(\"Dropping side-effect-free statement [{file}:{line},{col}]\", self.start);\n                return make_node(AST_EmptyStatement, self);\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_DWLoop, function(self, compressor){\n        var cond = self.condition.evaluate(compressor);\n        self.condition = cond[0];\n        if (!compressor.option(\"loops\")) return self;\n        if (cond.length > 1) {\n            if (cond[1]) {\n                return make_node(AST_For, self, {\n                    body: self.body\n                });\n            } else if (self instanceof AST_While) {\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    extract_declarations_from_unreachable_code(compressor, self.body, a);\n                    return make_node(AST_BlockStatement, self, { body: a });\n                }\n            }\n        }\n        return self;\n    });\n\n    function if_break_in_loop(self, compressor) {\n        function drop_it(rest) {\n            rest = as_statement_array(rest);\n            if (self.body instanceof AST_BlockStatement) {\n                self.body = self.body.clone();\n                self.body.body = rest.concat(self.body.body.slice(1));\n                self.body = self.body.transform(compressor);\n            } else {\n                self.body = make_node(AST_BlockStatement, self.body, {\n                    body: rest\n                }).transform(compressor);\n            }\n            if_break_in_loop(self, compressor);\n        }\n        var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;\n        if (first instanceof AST_If) {\n            if (first.body instanceof AST_Break\n                && compressor.loopcontrol_target(first.body.label) === self) {\n                if (self.condition) {\n                    self.condition = make_node(AST_Binary, self.condition, {\n                        left: self.condition,\n                        operator: \"&&\",\n                        right: first.condition.negate(compressor),\n                    });\n                } else {\n                    self.condition = first.condition.negate(compressor);\n                }\n                drop_it(first.alternative);\n            }\n            else if (first.alternative instanceof AST_Break\n                     && compressor.loopcontrol_target(first.alternative.label) === self) {\n                if (self.condition) {\n                    self.condition = make_node(AST_Binary, self.condition, {\n                        left: self.condition,\n                        operator: \"&&\",\n                        right: first.condition,\n                    });\n                } else {\n                    self.condition = first.condition;\n                }\n                drop_it(first.body);\n            }\n        }\n    };\n\n    OPT(AST_While, function(self, compressor) {\n        if (!compressor.option(\"loops\")) return self;\n        self = AST_DWLoop.prototype.optimize.call(self, compressor);\n        if (self instanceof AST_While) {\n            if_break_in_loop(self, compressor);\n            self = make_node(AST_For, self, self).transform(compressor);\n        }\n        return self;\n    });\n\n    OPT(AST_For, function(self, compressor){\n        var cond = self.condition;\n        if (cond) {\n            cond = cond.evaluate(compressor);\n            self.condition = cond[0];\n        }\n        if (!compressor.option(\"loops\")) return self;\n        if (cond) {\n            if (cond.length > 1 && !cond[1]) {\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    if (self.init instanceof AST_Statement) {\n                        a.push(self.init);\n                    }\n                    else if (self.init) {\n                        a.push(make_node(AST_SimpleStatement, self.init, {\n                            body: self.init\n                        }));\n                    }\n                    extract_declarations_from_unreachable_code(compressor, self.body, a);\n                    return make_node(AST_BlockStatement, self, { body: a });\n                }\n            }\n        }\n        if_break_in_loop(self, compressor);\n        return self;\n    });\n\n    OPT(AST_If, function(self, compressor){\n        if (!compressor.option(\"conditionals\")) return self;\n        // if condition can be statically determined, warn and drop\n        // one of the blocks.  note, statically determined implies\n        // “has no side effects”; also it doesn't work for cases like\n        // `x && true`, though it probably should.\n        var cond = self.condition.evaluate(compressor);\n        self.condition = cond[0];\n        if (cond.length > 1) {\n            if (cond[1]) {\n                compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.condition.start);\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    if (self.alternative) {\n                        extract_declarations_from_unreachable_code(compressor, self.alternative, a);\n                    }\n                    a.push(self.body);\n                    return make_node(AST_BlockStatement, self, { body: a }).transform(compressor);\n                }\n            } else {\n                compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.condition.start);\n                if (compressor.option(\"dead_code\")) {\n                    var a = [];\n                    extract_declarations_from_unreachable_code(compressor, self.body, a);\n                    if (self.alternative) a.push(self.alternative);\n                    return make_node(AST_BlockStatement, self, { body: a }).transform(compressor);\n                }\n            }\n        }\n        if (is_empty(self.alternative)) self.alternative = null;\n        var negated = self.condition.negate(compressor);\n        var negated_is_best = best_of(self.condition, negated) === negated;\n        if (self.alternative && negated_is_best) {\n            negated_is_best = false; // because we already do the switch here.\n            self.condition = negated;\n            var tmp = self.body;\n            self.body = self.alternative || make_node(AST_EmptyStatement);\n            self.alternative = tmp;\n        }\n        if (is_empty(self.body) && is_empty(self.alternative)) {\n            return make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }).transform(compressor);\n        }\n        if (self.body instanceof AST_SimpleStatement\n            && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Conditional, self, {\n                    condition   : self.condition,\n                    consequent  : self.body.body,\n                    alternative : self.alternative.body\n                })\n            }).transform(compressor);\n        }\n        if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {\n            if (negated_is_best) return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"||\",\n                    left     : negated,\n                    right    : self.body.body\n                })\n            }).transform(compressor);\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"&&\",\n                    left     : self.condition,\n                    right    : self.body.body\n                })\n            }).transform(compressor);\n        }\n        if (self.body instanceof AST_EmptyStatement\n            && self.alternative\n            && self.alternative instanceof AST_SimpleStatement) {\n            return make_node(AST_SimpleStatement, self, {\n                body: make_node(AST_Binary, self, {\n                    operator : \"||\",\n                    left     : self.condition,\n                    right    : self.alternative.body\n                })\n            }).transform(compressor);\n        }\n        if (self.body instanceof AST_Exit\n            && self.alternative instanceof AST_Exit\n            && self.body.TYPE == self.alternative.TYPE) {\n            return make_node(self.body.CTOR, self, {\n                value: make_node(AST_Conditional, self, {\n                    condition   : self.condition,\n                    consequent  : self.body.value || make_node(AST_Undefined, self.body).optimize(compressor),\n                    alternative : self.alternative.value || make_node(AST_Undefined, self.alternative).optimize(compressor)\n                })\n            }).transform(compressor);\n        }\n        if (self.body instanceof AST_If\n            && !self.body.alternative\n            && !self.alternative) {\n            self.condition = make_node(AST_Binary, self.condition, {\n                operator: \"&&\",\n                left: self.condition,\n                right: self.body.condition\n            }).transform(compressor);\n            self.body = self.body.body;\n        }\n        if (aborts(self.body)) {\n            if (self.alternative) {\n                var alt = self.alternative;\n                self.alternative = null;\n                return make_node(AST_BlockStatement, self, {\n                    body: [ self, alt ]\n                }).transform(compressor);\n            }\n        }\n        if (aborts(self.alternative)) {\n            var body = self.body;\n            self.body = self.alternative;\n            self.condition = negated_is_best ? negated : self.condition.negate(compressor);\n            self.alternative = null;\n            return make_node(AST_BlockStatement, self, {\n                body: [ self, body ]\n            }).transform(compressor);\n        }\n        return self;\n    });\n\n    OPT(AST_Switch, function(self, compressor){\n        if (self.body.length == 0 && compressor.option(\"conditionals\")) {\n            return make_node(AST_SimpleStatement, self, {\n                body: self.expression\n            }).transform(compressor);\n        }\n        for(;;) {\n            var last_branch = self.body[self.body.length - 1];\n            if (last_branch) {\n                var stat = last_branch.body[last_branch.body.length - 1]; // last statement\n                if (stat instanceof AST_Break && loop_body(compressor.loopcontrol_target(stat.label)) === self)\n                    last_branch.body.pop();\n                if (last_branch instanceof AST_Default && last_branch.body.length == 0) {\n                    self.body.pop();\n                    continue;\n                }\n            }\n            break;\n        }\n        var exp = self.expression.evaluate(compressor);\n        out: if (exp.length == 2) try {\n            // constant expression\n            self.expression = exp[0];\n            if (!compressor.option(\"dead_code\")) break out;\n            var value = exp[1];\n            var in_if = false;\n            var in_block = false;\n            var started = false;\n            var stopped = false;\n            var ruined = false;\n            var tt = new TreeTransformer(function(node, descend, in_list){\n                if (node instanceof AST_Lambda || node instanceof AST_SimpleStatement) {\n                    // no need to descend these node types\n                    return node;\n                }\n                else if (node instanceof AST_Switch && node === self) {\n                    node = node.clone();\n                    descend(node, this);\n                    return ruined ? node : make_node(AST_BlockStatement, node, {\n                        body: node.body.reduce(function(a, branch){\n                            return a.concat(branch.body);\n                        }, [])\n                    }).transform(compressor);\n                }\n                else if (node instanceof AST_If || node instanceof AST_Try) {\n                    var save = in_if;\n                    in_if = !in_block;\n                    descend(node, this);\n                    in_if = save;\n                    return node;\n                }\n                else if (node instanceof AST_StatementWithBody || node instanceof AST_Switch) {\n                    var save = in_block;\n                    in_block = true;\n                    descend(node, this);\n                    in_block = save;\n                    return node;\n                }\n                else if (node instanceof AST_Break && this.loopcontrol_target(node.label) === self) {\n                    if (in_if) {\n                        ruined = true;\n                        return node;\n                    }\n                    if (in_block) return node;\n                    stopped = true;\n                    return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                }\n                else if (node instanceof AST_SwitchBranch && this.parent() === self) {\n                    if (stopped) return MAP.skip;\n                    if (node instanceof AST_Case) {\n                        var exp = node.expression.evaluate(compressor);\n                        if (exp.length < 2) {\n                            // got a case with non-constant expression, baling out\n                            throw self;\n                        }\n                        if (exp[1] === value || started) {\n                            started = true;\n                            if (aborts(node)) stopped = true;\n                            descend(node, this);\n                            return node;\n                        }\n                        return MAP.skip;\n                    }\n                    descend(node, this);\n                    return node;\n                }\n            });\n            tt.stack = compressor.stack.slice(); // so that's able to see parent nodes\n            self = self.transform(tt);\n        } catch(ex) {\n            if (ex !== self) throw ex;\n        }\n        return self;\n    });\n\n    OPT(AST_Case, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        return self;\n    });\n\n    OPT(AST_Try, function(self, compressor){\n        self.body = tighten_body(self.body, compressor);\n        return self;\n    });\n\n    AST_Definitions.DEFMETHOD(\"remove_initializers\", function(){\n        this.definitions.forEach(function(def){ def.value = null });\n    });\n\n    AST_Definitions.DEFMETHOD(\"to_assignments\", function(){\n        var assignments = this.definitions.reduce(function(a, def){\n            if (def.value) {\n                var name = make_node(AST_SymbolRef, def.name, def.name);\n                a.push(make_node(AST_Assign, def, {\n                    operator : \"=\",\n                    left     : name,\n                    right    : def.value\n                }));\n            }\n            return a;\n        }, []);\n        if (assignments.length == 0) return null;\n        return AST_Seq.from_array(assignments);\n    });\n\n    OPT(AST_Definitions, function(self, compressor){\n        if (self.definitions.length == 0)\n            return make_node(AST_EmptyStatement, self);\n        return self;\n    });\n\n    OPT(AST_Function, function(self, compressor){\n        self = AST_Lambda.prototype.optimize.call(self, compressor);\n        if (compressor.option(\"unused\") && !compressor.option(\"keep_fnames\")) {\n            if (self.name && self.name.unreferenced()) {\n                self.name = null;\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Call, function(self, compressor){\n        if (compressor.option(\"unsafe\")) {\n            var exp = self.expression;\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n                switch (exp.name) {\n                  case \"Array\":\n                    if (self.args.length != 1) {\n                        return make_node(AST_Array, self, {\n                            elements: self.args\n                        }).transform(compressor);\n                    }\n                    break;\n                  case \"Object\":\n                    if (self.args.length == 0) {\n                        return make_node(AST_Object, self, {\n                            properties: []\n                        });\n                    }\n                    break;\n                  case \"String\":\n                    if (self.args.length == 0) return make_node(AST_String, self, {\n                        value: \"\"\n                    });\n                    if (self.args.length <= 1) return make_node(AST_Binary, self, {\n                        left: self.args[0],\n                        operator: \"+\",\n                        right: make_node(AST_String, self, { value: \"\" })\n                    }).transform(compressor);\n                    break;\n                  case \"Number\":\n                    if (self.args.length == 0) return make_node(AST_Number, self, {\n                        value: 0\n                    });\n                    if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                        expression: self.args[0],\n                        operator: \"+\"\n                    }).transform(compressor);\n                  case \"Boolean\":\n                    if (self.args.length == 0) return make_node(AST_False, self);\n                    if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                        expression: make_node(AST_UnaryPrefix, null, {\n                            expression: self.args[0],\n                            operator: \"!\"\n                        }),\n                        operator: \"!\"\n                    }).transform(compressor);\n                    break;\n                  case \"Function\":\n                    // new Function() => function(){}\n                    if (self.args.length == 0) return make_node(AST_Function, self, {\n                        argnames: [],\n                        body: []\n                    });\n                    if (all(self.args, function(x){ return x instanceof AST_String })) {\n                        // quite a corner-case, but we can handle it:\n                        //   https://github.com/mishoo/UglifyJS2/issues/203\n                        // if the code argument is a constant, then we can minify it.\n                        try {\n                            var code = \"(function(\" + self.args.slice(0, -1).map(function(arg){\n                                return arg.value;\n                            }).join(\",\") + \"){\" + self.args[self.args.length - 1].value + \"})()\";\n                            var ast = parse(code);\n                            ast.figure_out_scope({ screw_ie8: compressor.option(\"screw_ie8\") });\n                            var comp = new Compressor(compressor.options);\n                            ast = ast.transform(comp);\n                            ast.figure_out_scope({ screw_ie8: compressor.option(\"screw_ie8\") });\n                            ast.mangle_names();\n                            var fun;\n                            try {\n                                ast.walk(new TreeWalker(function(node){\n                                    if (node instanceof AST_Lambda) {\n                                        fun = node;\n                                        throw ast;\n                                    }\n                                }));\n                            } catch(ex) {\n                                if (ex !== ast) throw ex;\n                            };\n                            if (!fun) return self;\n                            var args = fun.argnames.map(function(arg, i){\n                                return make_node(AST_String, self.args[i], {\n                                    value: arg.print_to_string()\n                                });\n                            });\n                            var code = OutputStream();\n                            AST_BlockStatement.prototype._codegen.call(fun, fun, code);\n                            code = code.toString().replace(/^\\{|\\}$/g, \"\");\n                            args.push(make_node(AST_String, self.args[self.args.length - 1], {\n                                value: code\n                            }));\n                            self.args = args;\n                            return self;\n                        } catch(ex) {\n                            if (ex instanceof JS_Parse_Error) {\n                                compressor.warn(\"Error parsing code passed to new Function [{file}:{line},{col}]\", self.args[self.args.length - 1].start);\n                                compressor.warn(ex.toString());\n                            } else {\n                                console.log(ex);\n                                throw ex;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            else if (exp instanceof AST_Dot && exp.property == \"toString\" && self.args.length == 0) {\n                return make_node(AST_Binary, self, {\n                    left: make_node(AST_String, self, { value: \"\" }),\n                    operator: \"+\",\n                    right: exp.expression\n                }).transform(compressor);\n            }\n            else if (exp instanceof AST_Dot && exp.expression instanceof AST_Array && exp.property == \"join\") EXIT: {\n                var separator = self.args.length == 0 ? \",\" : self.args[0].evaluate(compressor)[1];\n                if (separator == null) break EXIT; // not a constant\n                var elements = exp.expression.elements.reduce(function(a, el){\n                    el = el.evaluate(compressor);\n                    if (a.length == 0 || el.length == 1) {\n                        a.push(el);\n                    } else {\n                        var last = a[a.length - 1];\n                        if (last.length == 2) {\n                            // it's a constant\n                            var val = \"\" + last[1] + separator + el[1];\n                            a[a.length - 1] = [ make_node_from_constant(compressor, val, last[0]), val ];\n                        } else {\n                            a.push(el);\n                        }\n                    }\n                    return a;\n                }, []);\n                if (elements.length == 0) return make_node(AST_String, self, { value: \"\" });\n                if (elements.length == 1) return elements[0][0];\n                if (separator == \"\") {\n                    var first;\n                    if (elements[0][0] instanceof AST_String\n                        || elements[1][0] instanceof AST_String) {\n                        first = elements.shift()[0];\n                    } else {\n                        first = make_node(AST_String, self, { value: \"\" });\n                    }\n                    return elements.reduce(function(prev, el){\n                        return make_node(AST_Binary, el[0], {\n                            operator : \"+\",\n                            left     : prev,\n                            right    : el[0],\n                        });\n                    }, first).transform(compressor);\n                }\n                // need this awkward cloning to not affect original element\n                // best_of will decide which one to get through.\n                var node = self.clone();\n                node.expression = node.expression.clone();\n                node.expression.expression = node.expression.expression.clone();\n                node.expression.expression.elements = elements.map(function(el){\n                    return el[0];\n                });\n                return best_of(self, node);\n            }\n        }\n        if (compressor.option(\"side_effects\")) {\n            if (self.expression instanceof AST_Function\n                && self.args.length == 0\n                && !AST_Block.prototype.has_side_effects.call(self.expression, compressor)) {\n                return make_node(AST_Undefined, self).transform(compressor);\n            }\n        }\n        if (compressor.option(\"drop_console\")) {\n            if (self.expression instanceof AST_PropAccess) {\n                var name = self.expression.expression;\n                while (name.expression) {\n                    name = name.expression;\n                }\n                if (name instanceof AST_SymbolRef\n                    && name.name == \"console\"\n                    && name.undeclared()) {\n                    return make_node(AST_Undefined, self).transform(compressor);\n                }\n            }\n        }\n        return self.evaluate(compressor)[0];\n    });\n\n    OPT(AST_New, function(self, compressor){\n        if (compressor.option(\"unsafe\")) {\n            var exp = self.expression;\n            if (exp instanceof AST_SymbolRef && exp.undeclared()) {\n                switch (exp.name) {\n                  case \"Object\":\n                  case \"RegExp\":\n                  case \"Function\":\n                  case \"Error\":\n                  case \"Array\":\n                    return make_node(AST_Call, self, self).transform(compressor);\n                }\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Seq, function(self, compressor){\n        if (!compressor.option(\"side_effects\"))\n            return self;\n        if (!self.car.has_side_effects(compressor)) {\n            // we shouldn't compress (1,eval)(something) to\n            // eval(something) because that changes the meaning of\n            // eval (becomes lexical instead of global).\n            var p;\n            if (!(self.cdr instanceof AST_SymbolRef\n                  && self.cdr.name == \"eval\"\n                  && self.cdr.undeclared()\n                  && (p = compressor.parent()) instanceof AST_Call\n                  && p.expression === self)) {\n                return self.cdr;\n            }\n        }\n        if (compressor.option(\"cascade\")) {\n            if (self.car instanceof AST_Assign\n                && !self.car.left.has_side_effects(compressor)) {\n                if (self.car.left.equivalent_to(self.cdr)) {\n                    return self.car;\n                }\n                if (self.cdr instanceof AST_Call\n                    && self.cdr.expression.equivalent_to(self.car.left)) {\n                    self.cdr.expression = self.car;\n                    return self.cdr;\n                }\n            }\n            if (!self.car.has_side_effects(compressor)\n                && !self.cdr.has_side_effects(compressor)\n                && self.car.equivalent_to(self.cdr)) {\n                return self.car;\n            }\n        }\n        if (self.cdr instanceof AST_UnaryPrefix\n            && self.cdr.operator == \"void\"\n            && !self.cdr.expression.has_side_effects(compressor)) {\n            self.cdr.expression = self.car;\n            return self.cdr;\n        }\n        if (self.cdr instanceof AST_Undefined) {\n            return make_node(AST_UnaryPrefix, self, {\n                operator   : \"void\",\n                expression : self.car\n            });\n        }\n        return self;\n    });\n\n    AST_Unary.DEFMETHOD(\"lift_sequences\", function(compressor){\n        if (compressor.option(\"sequences\")) {\n            if (this.expression instanceof AST_Seq) {\n                var seq = this.expression;\n                var x = seq.to_array();\n                this.expression = x.pop();\n                x.push(this);\n                seq = AST_Seq.from_array(x).transform(compressor);\n                return seq;\n            }\n        }\n        return this;\n    });\n\n    OPT(AST_UnaryPostfix, function(self, compressor){\n        return self.lift_sequences(compressor);\n    });\n\n    OPT(AST_UnaryPrefix, function(self, compressor){\n        self = self.lift_sequences(compressor);\n        var e = self.expression;\n        if (compressor.option(\"booleans\") && compressor.in_boolean_context()) {\n            switch (self.operator) {\n              case \"!\":\n                if (e instanceof AST_UnaryPrefix && e.operator == \"!\") {\n                    // !!foo ==> foo, if we're in boolean context\n                    return e.expression;\n                }\n                break;\n              case \"typeof\":\n                // typeof always returns a non-empty string, thus it's\n                // always true in booleans\n                compressor.warn(\"Boolean expression always true [{file}:{line},{col}]\", self.start);\n                return make_node(AST_True, self);\n            }\n            if (e instanceof AST_Binary && self.operator == \"!\") {\n                self = best_of(self, e.negate(compressor));\n            }\n        }\n        return self.evaluate(compressor)[0];\n    });\n\n    function has_side_effects_or_prop_access(node, compressor) {\n        var save_pure_getters = compressor.option(\"pure_getters\");\n        compressor.options.pure_getters = false;\n        var ret = node.has_side_effects(compressor);\n        compressor.options.pure_getters = save_pure_getters;\n        return ret;\n    }\n\n    AST_Binary.DEFMETHOD(\"lift_sequences\", function(compressor){\n        if (compressor.option(\"sequences\")) {\n            if (this.left instanceof AST_Seq) {\n                var seq = this.left;\n                var x = seq.to_array();\n                this.left = x.pop();\n                x.push(this);\n                seq = AST_Seq.from_array(x).transform(compressor);\n                return seq;\n            }\n            if (this.right instanceof AST_Seq\n                && this instanceof AST_Assign\n                && !has_side_effects_or_prop_access(this.left, compressor)) {\n                var seq = this.right;\n                var x = seq.to_array();\n                this.right = x.pop();\n                x.push(this);\n                seq = AST_Seq.from_array(x).transform(compressor);\n                return seq;\n            }\n        }\n        return this;\n    });\n\n    var commutativeOperators = makePredicate(\"== === != !== * & | ^\");\n\n    OPT(AST_Binary, function(self, compressor){\n        var reverse = compressor.has_directive(\"use asm\") ? noop\n            : function(op, force) {\n                if (force || !(self.left.has_side_effects(compressor) || self.right.has_side_effects(compressor))) {\n                    if (op) self.operator = op;\n                    var tmp = self.left;\n                    self.left = self.right;\n                    self.right = tmp;\n                }\n            };\n        if (commutativeOperators(self.operator)) {\n            if (self.right instanceof AST_Constant\n                && !(self.left instanceof AST_Constant)) {\n                // if right is a constant, whatever side effects the\n                // left side might have could not influence the\n                // result.  hence, force switch.\n\n                if (!(self.left instanceof AST_Binary\n                      && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                    reverse(null, true);\n                }\n            }\n            if (/^[!=]==?$/.test(self.operator)) {\n                if (self.left instanceof AST_SymbolRef && self.right instanceof AST_Conditional) {\n                    if (self.right.consequent instanceof AST_SymbolRef\n                        && self.right.consequent.definition() === self.left.definition()) {\n                        if (/^==/.test(self.operator)) return self.right.condition;\n                        if (/^!=/.test(self.operator)) return self.right.condition.negate(compressor);\n                    }\n                    if (self.right.alternative instanceof AST_SymbolRef\n                        && self.right.alternative.definition() === self.left.definition()) {\n                        if (/^==/.test(self.operator)) return self.right.condition.negate(compressor);\n                        if (/^!=/.test(self.operator)) return self.right.condition;\n                    }\n                }\n                if (self.right instanceof AST_SymbolRef && self.left instanceof AST_Conditional) {\n                    if (self.left.consequent instanceof AST_SymbolRef\n                        && self.left.consequent.definition() === self.right.definition()) {\n                        if (/^==/.test(self.operator)) return self.left.condition;\n                        if (/^!=/.test(self.operator)) return self.left.condition.negate(compressor);\n                    }\n                    if (self.left.alternative instanceof AST_SymbolRef\n                        && self.left.alternative.definition() === self.right.definition()) {\n                        if (/^==/.test(self.operator)) return self.left.condition.negate(compressor);\n                        if (/^!=/.test(self.operator)) return self.left.condition;\n                    }\n                }\n            }\n        }\n        self = self.lift_sequences(compressor);\n        if (compressor.option(\"comparisons\")) switch (self.operator) {\n          case \"===\":\n          case \"!==\":\n            if ((self.left.is_string(compressor) && self.right.is_string(compressor)) ||\n                (self.left.is_boolean() && self.right.is_boolean())) {\n                self.operator = self.operator.substr(0, 2);\n            }\n            // XXX: intentionally falling down to the next case\n          case \"==\":\n          case \"!=\":\n            if (self.left instanceof AST_String\n                && self.left.value == \"undefined\"\n                && self.right instanceof AST_UnaryPrefix\n                && self.right.operator == \"typeof\"\n                && compressor.option(\"unsafe\")) {\n                if (!(self.right.expression instanceof AST_SymbolRef)\n                    || !self.right.expression.undeclared()) {\n                    self.right = self.right.expression;\n                    self.left = make_node(AST_Undefined, self.left).optimize(compressor);\n                    if (self.operator.length == 2) self.operator += \"=\";\n                }\n            }\n            break;\n        }\n        if (compressor.option(\"booleans\") && compressor.in_boolean_context()) switch (self.operator) {\n          case \"&&\":\n            var ll = self.left.evaluate(compressor);\n            var rr = self.right.evaluate(compressor);\n            if ((ll.length > 1 && !ll[1]) || (rr.length > 1 && !rr[1])) {\n                compressor.warn(\"Boolean && always false [{file}:{line},{col}]\", self.start);\n                if (self.left.has_side_effects(compressor)) {\n                    return make_node(AST_Seq, self, {\n                        car: self.left,\n                        cdr: make_node(AST_False)\n                    }).optimize(compressor);\n                }\n                return make_node(AST_False, self);\n            }\n            if (ll.length > 1 && ll[1]) {\n                return rr[0];\n            }\n            if (rr.length > 1 && rr[1]) {\n                return ll[0];\n            }\n            break;\n          case \"||\":\n            var ll = self.left.evaluate(compressor);\n            var rr = self.right.evaluate(compressor);\n            if ((ll.length > 1 && ll[1]) || (rr.length > 1 && rr[1])) {\n                compressor.warn(\"Boolean || always true [{file}:{line},{col}]\", self.start);\n                if (self.left.has_side_effects(compressor)) {\n                    return make_node(AST_Seq, self, {\n                        car: self.left,\n                        cdr: make_node(AST_True)\n                    }).optimize(compressor);\n                }\n                return make_node(AST_True, self);\n            }\n            if (ll.length > 1 && !ll[1]) {\n                return rr[0];\n            }\n            if (rr.length > 1 && !rr[1]) {\n                return ll[0];\n            }\n            break;\n          case \"+\":\n            var ll = self.left.evaluate(compressor);\n            var rr = self.right.evaluate(compressor);\n            if ((ll.length > 1 && ll[0] instanceof AST_String && ll[1]) ||\n                (rr.length > 1 && rr[0] instanceof AST_String && rr[1])) {\n                compressor.warn(\"+ in boolean context always true [{file}:{line},{col}]\", self.start);\n                return make_node(AST_True, self);\n            }\n            break;\n        }\n        if (compressor.option(\"comparisons\")) {\n            if (!(compressor.parent() instanceof AST_Binary)\n                || compressor.parent() instanceof AST_Assign) {\n                var negated = make_node(AST_UnaryPrefix, self, {\n                    operator: \"!\",\n                    expression: self.negate(compressor)\n                });\n                self = best_of(self, negated);\n            }\n            switch (self.operator) {\n              case \"<\": reverse(\">\"); break;\n              case \"<=\": reverse(\">=\"); break;\n            }\n        }\n        if (self.operator == \"+\" && self.right instanceof AST_String\n            && self.right.getValue() === \"\" && self.left instanceof AST_Binary\n            && self.left.operator == \"+\" && self.left.is_string(compressor)) {\n            return self.left;\n        }\n        if (compressor.option(\"evaluate\")) {\n            if (self.operator == \"+\") {\n                if (self.left instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == \"+\"\n                    && self.right.left instanceof AST_Constant\n                    && self.right.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_String, null, {\n                            value: \"\" + self.left.getValue() + self.right.left.getValue(),\n                            start: self.left.start,\n                            end: self.right.left.end\n                        }),\n                        right: self.right.right\n                    });\n                }\n                if (self.right instanceof AST_Constant\n                    && self.left instanceof AST_Binary\n                    && self.left.operator == \"+\"\n                    && self.left.right instanceof AST_Constant\n                    && self.left.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: self.left.left,\n                        right: make_node(AST_String, null, {\n                            value: \"\" + self.left.right.getValue() + self.right.getValue(),\n                            start: self.left.right.start,\n                            end: self.right.end\n                        })\n                    });\n                }\n                if (self.left instanceof AST_Binary\n                    && self.left.operator == \"+\"\n                    && self.left.is_string(compressor)\n                    && self.left.right instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == \"+\"\n                    && self.right.left instanceof AST_Constant\n                    && self.right.is_string(compressor)) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_Binary, self.left, {\n                            operator: \"+\",\n                            left: self.left.left,\n                            right: make_node(AST_String, null, {\n                                value: \"\" + self.left.right.getValue() + self.right.left.getValue(),\n                                start: self.left.right.start,\n                                end: self.right.left.end\n                            })\n                        }),\n                        right: self.right.right\n                    });\n                }\n            }\n        }\n        // x * (y * z)  ==>  x * y * z\n        if (self.right instanceof AST_Binary\n            && self.right.operator == self.operator\n            && (self.operator == \"*\" || self.operator == \"&&\" || self.operator == \"||\"))\n        {\n            self.left = make_node(AST_Binary, self.left, {\n                operator : self.operator,\n                left     : self.left,\n                right    : self.right.left\n            });\n            self.right = self.right.right;\n            return self.transform(compressor);\n        }\n        return self.evaluate(compressor)[0];\n    });\n\n    OPT(AST_SymbolRef, function(self, compressor){\n        if (self.undeclared()) {\n            var defines = compressor.option(\"global_defs\");\n            if (defines && defines.hasOwnProperty(self.name)) {\n                return make_node_from_constant(compressor, defines[self.name], self);\n            }\n            switch (self.name) {\n              case \"undefined\":\n                return make_node(AST_Undefined, self);\n              case \"NaN\":\n                return make_node(AST_NaN, self).transform(compressor);\n              case \"Infinity\":\n                return make_node(AST_Infinity, self).transform(compressor);\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Infinity, function (self, compressor) {\n        return make_node(AST_Binary, self, {\n            operator : '/',\n            left     : make_node(AST_Number, self, {value: 1}),\n            right    : make_node(AST_Number, self, {value: 0})\n        });\n    });\n\n    OPT(AST_Undefined, function(self, compressor){\n        if (compressor.option(\"unsafe\")) {\n            var scope = compressor.find_parent(AST_Scope);\n            var undef = scope.find_variable(\"undefined\");\n            if (undef) {\n                var ref = make_node(AST_SymbolRef, self, {\n                    name   : \"undefined\",\n                    scope  : scope,\n                    thedef : undef\n                });\n                ref.reference();\n                return ref;\n            }\n        }\n        return self;\n    });\n\n    var ASSIGN_OPS = [ '+', '-', '/', '*', '%', '>>', '<<', '>>>', '|', '^', '&' ];\n    OPT(AST_Assign, function(self, compressor){\n        self = self.lift_sequences(compressor);\n        if (self.operator == \"=\"\n            && self.left instanceof AST_SymbolRef\n            && self.right instanceof AST_Binary\n            && self.right.left instanceof AST_SymbolRef\n            && self.right.left.name == self.left.name\n            && member(self.right.operator, ASSIGN_OPS)) {\n            self.operator = self.right.operator + \"=\";\n            self.right = self.right.right;\n        }\n        return self;\n    });\n\n    OPT(AST_Conditional, function(self, compressor){\n        if (!compressor.option(\"conditionals\")) return self;\n        if (self.condition instanceof AST_Seq) {\n            var car = self.condition.car;\n            self.condition = self.condition.cdr;\n            return AST_Seq.cons(car, self);\n        }\n        var cond = self.condition.evaluate(compressor);\n        if (cond.length > 1) {\n            if (cond[1]) {\n                compressor.warn(\"Condition always true [{file}:{line},{col}]\", self.start);\n                return self.consequent;\n            } else {\n                compressor.warn(\"Condition always false [{file}:{line},{col}]\", self.start);\n                return self.alternative;\n            }\n        }\n        var negated = cond[0].negate(compressor);\n        if (best_of(cond[0], negated) === negated) {\n            self = make_node(AST_Conditional, self, {\n                condition: negated,\n                consequent: self.alternative,\n                alternative: self.consequent\n            });\n        }\n        var consequent = self.consequent;\n        var alternative = self.alternative;\n        if (consequent instanceof AST_Assign\n            && alternative instanceof AST_Assign\n            && consequent.operator == alternative.operator\n            && consequent.left.equivalent_to(alternative.left)\n            && !consequent.left.has_side_effects(compressor)\n           ) {\n            /*\n             * Stuff like this:\n             * if (foo) exp = something; else exp = something_else;\n             * ==>\n             * exp = foo ? something : something_else;\n             */\n            return make_node(AST_Assign, self, {\n                operator: consequent.operator,\n                left: consequent.left,\n                right: make_node(AST_Conditional, self, {\n                    condition: self.condition,\n                    consequent: consequent.right,\n                    alternative: alternative.right\n                })\n            });\n        }\n        if (consequent instanceof AST_Call\n            && alternative.TYPE === consequent.TYPE\n            && consequent.args.length == alternative.args.length\n            && !consequent.expression.has_side_effects(compressor)\n            && consequent.expression.equivalent_to(alternative.expression)) {\n            if (consequent.args.length == 0) {\n                return make_node(AST_Seq, self, {\n                    car: self.condition,\n                    cdr: consequent\n                });\n            }\n            if (consequent.args.length == 1) {\n                consequent.args[0] = make_node(AST_Conditional, self, {\n                    condition: self.condition,\n                    consequent: consequent.args[0],\n                    alternative: alternative.args[0]\n                });\n                return consequent;\n            }\n        }\n        // x?y?z:a:a --> x&&y?z:a\n        if (consequent instanceof AST_Conditional\n            && consequent.alternative.equivalent_to(alternative)) {\n            return make_node(AST_Conditional, self, {\n                condition: make_node(AST_Binary, self, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: consequent.condition\n                }),\n                consequent: consequent.consequent,\n                alternative: alternative\n            });\n        }\n        // x=y?1:1 --> x=1\n        if (consequent instanceof AST_Constant\n            && alternative instanceof AST_Constant\n            && consequent.equivalent_to(alternative)) {\n            if (self.condition.has_side_effects(compressor)) {\n                return AST_Seq.from_array([self.condition, make_node_from_constant(compressor, consequent.value, self)]);\n            } else {\n                return make_node_from_constant(compressor, consequent.value, self);\n\n            }\n        }\n        // x=y?true:false --> x=!!y\n        if (consequent instanceof AST_True\n            && alternative instanceof AST_False) {\n            self.condition = self.condition.negate(compressor);\n            return make_node(AST_UnaryPrefix, self.condition, {\n                operator: \"!\",\n                expression: self.condition\n            });\n        }\n        // x=y?false:true --> x=!y\n        if (consequent instanceof AST_False\n            && alternative instanceof AST_True) {\n            return self.condition.negate(compressor)\n        }\n        return self;\n    });\n\n    OPT(AST_Boolean, function(self, compressor){\n        if (compressor.option(\"booleans\")) {\n            var p = compressor.parent();\n            if (p instanceof AST_Binary && (p.operator == \"==\"\n                                            || p.operator == \"!=\")) {\n                compressor.warn(\"Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]\", {\n                    operator : p.operator,\n                    value    : self.value,\n                    file     : p.start.file,\n                    line     : p.start.line,\n                    col      : p.start.col,\n                });\n                return make_node(AST_Number, self, {\n                    value: +self.value\n                });\n            }\n            return make_node(AST_UnaryPrefix, self, {\n                operator: \"!\",\n                expression: make_node(AST_Number, self, {\n                    value: 1 - self.value\n                })\n            });\n        }\n        return self;\n    });\n\n    OPT(AST_Sub, function(self, compressor){\n        var prop = self.property;\n        if (prop instanceof AST_String && compressor.option(\"properties\")) {\n            prop = prop.getValue();\n            if (RESERVED_WORDS(prop) ? compressor.option(\"screw_ie8\") : is_identifier_string(prop)) {\n                return make_node(AST_Dot, self, {\n                    expression : self.expression,\n                    property   : prop\n                }).optimize(compressor);\n            }\n            var v = parseFloat(prop);\n            if (!isNaN(v) && v.toString() == prop) {\n                self.property = make_node(AST_Number, self.property, {\n                    value: v\n                });\n            }\n        }\n        return self;\n    });\n\n    OPT(AST_Dot, function(self, compressor){\n        var prop = self.property;\n        if (RESERVED_WORDS(prop) && !compressor.option(\"screw_ie8\")) {\n            return make_node(AST_Sub, self, {\n                expression : self.expression,\n                property   : make_node(AST_String, self, {\n                    value: prop\n                })\n            }).optimize(compressor);\n        }\n        return self.evaluate(compressor)[0];\n    });\n\n    function literals_in_boolean_context(self, compressor) {\n        if (compressor.option(\"booleans\") && compressor.in_boolean_context() && !self.has_side_effects(compressor)) {\n            return make_node(AST_True, self);\n        }\n        return self;\n    };\n    OPT(AST_Array, literals_in_boolean_context);\n    OPT(AST_Object, literals_in_boolean_context);\n    OPT(AST_RegExp, literals_in_boolean_context);\n\n})();\n",
  "uglify-js/lib/mozilla-ast.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n(function(){\n\n    var MOZ_TO_ME = {\n        ExpressionStatement: function(M) {\n            var expr = M.expression;\n            if (expr.type === \"Literal\" && typeof expr.value === \"string\") {\n                return new AST_Directive({\n                    start: my_start_token(M),\n                    end: my_end_token(M),\n                    value: expr.value\n                });\n            }\n            return new AST_SimpleStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: from_moz(expr)\n            });\n        },\n        TryStatement: function(M) {\n            var handlers = M.handlers || [M.handler];\n            if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {\n                throw new Error(\"Multiple catch clauses are not supported.\");\n            }\n            return new AST_Try({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                body     : from_moz(M.block).body,\n                bcatch   : from_moz(handlers[0]),\n                bfinally : M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null\n            });\n        },\n        Property: function(M) {\n            var key = M.key;\n            var name = key.type == \"Identifier\" ? key.name : key.value;\n            var args = {\n                start    : my_start_token(key),\n                end      : my_end_token(M.value),\n                key      : name,\n                value    : from_moz(M.value)\n            };\n            switch (M.kind) {\n              case \"init\":\n                return new AST_ObjectKeyVal(args);\n              case \"set\":\n                args.value.name = from_moz(key);\n                return new AST_ObjectSetter(args);\n              case \"get\":\n                args.value.name = from_moz(key);\n                return new AST_ObjectGetter(args);\n            }\n        },\n        ObjectExpression: function(M) {\n            return new AST_Object({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                properties : M.properties.map(function(prop){\n                    prop.type = \"Property\";\n                    return from_moz(prop)\n                })\n            });\n        },\n        SequenceExpression: function(M) {\n            return AST_Seq.from_array(M.expressions.map(from_moz));\n        },\n        MemberExpression: function(M) {\n            return new (M.computed ? AST_Sub : AST_Dot)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                property   : M.computed ? from_moz(M.property) : M.property.name,\n                expression : from_moz(M.object)\n            });\n        },\n        SwitchCase: function(M) {\n            return new (M.test ? AST_Case : AST_Default)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.test),\n                body       : M.consequent.map(from_moz)\n            });\n        },\n        VariableDeclaration: function(M) {\n            return new (M.kind === \"const\" ? AST_Const : AST_Var)({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                definitions : M.declarations.map(from_moz)\n            });\n        },\n        Literal: function(M) {\n            var val = M.value, args = {\n                start  : my_start_token(M),\n                end    : my_end_token(M)\n            };\n            if (val === null) return new AST_Null(args);\n            switch (typeof val) {\n              case \"string\":\n                args.value = val;\n                return new AST_String(args);\n              case \"number\":\n                args.value = val;\n                return new AST_Number(args);\n              case \"boolean\":\n                return new (val ? AST_True : AST_False)(args);\n              default:\n                args.value = val;\n                return new AST_RegExp(args);\n            }\n        },\n        Identifier: function(M) {\n            var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n            return new (  p.type == \"LabeledStatement\" ? AST_Label\n                        : p.type == \"VariableDeclarator\" && p.id === M ? (p.kind == \"const\" ? AST_SymbolConst : AST_SymbolVar)\n                        : p.type == \"FunctionExpression\" ? (p.id === M ? AST_SymbolLambda : AST_SymbolFunarg)\n                        : p.type == \"FunctionDeclaration\" ? (p.id === M ? AST_SymbolDefun : AST_SymbolFunarg)\n                        : p.type == \"CatchClause\" ? AST_SymbolCatch\n                        : p.type == \"BreakStatement\" || p.type == \"ContinueStatement\" ? AST_LabelRef\n                        : AST_SymbolRef)({\n                            start : my_start_token(M),\n                            end   : my_end_token(M),\n                            name  : M.name\n                        });\n        }\n    };\n\n    MOZ_TO_ME.UpdateExpression =\n    MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {\n        var prefix = \"prefix\" in M ? M.prefix\n            : M.type == \"UnaryExpression\" ? true : false;\n        return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({\n            start      : my_start_token(M),\n            end        : my_end_token(M),\n            operator   : M.operator,\n            expression : from_moz(M.argument)\n        });\n    };\n\n    map(\"Program\", AST_Toplevel, \"body@body\");\n    map(\"EmptyStatement\", AST_EmptyStatement);\n    map(\"BlockStatement\", AST_BlockStatement, \"body@body\");\n    map(\"IfStatement\", AST_If, \"test>condition, consequent>body, alternate>alternative\");\n    map(\"LabeledStatement\", AST_LabeledStatement, \"label>label, body>body\");\n    map(\"BreakStatement\", AST_Break, \"label>label\");\n    map(\"ContinueStatement\", AST_Continue, \"label>label\");\n    map(\"WithStatement\", AST_With, \"object>expression, body>body\");\n    map(\"SwitchStatement\", AST_Switch, \"discriminant>expression, cases@body\");\n    map(\"ReturnStatement\", AST_Return, \"argument>value\");\n    map(\"ThrowStatement\", AST_Throw, \"argument>value\");\n    map(\"WhileStatement\", AST_While, \"test>condition, body>body\");\n    map(\"DoWhileStatement\", AST_Do, \"test>condition, body>body\");\n    map(\"ForStatement\", AST_For, \"init>init, test>condition, update>step, body>body\");\n    map(\"ForInStatement\", AST_ForIn, \"left>init, right>object, body>body\");\n    map(\"DebuggerStatement\", AST_Debugger);\n    map(\"FunctionDeclaration\", AST_Defun, \"id>name, params@argnames, body%body\");\n    map(\"VariableDeclarator\", AST_VarDef, \"id>name, init>value\");\n    map(\"CatchClause\", AST_Catch, \"param>argname, body%body\");\n\n    map(\"ThisExpression\", AST_This);\n    map(\"ArrayExpression\", AST_Array, \"elements@elements\");\n    map(\"FunctionExpression\", AST_Function, \"id>name, params@argnames, body%body\");\n    map(\"BinaryExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"LogicalExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"AssignmentExpression\", AST_Assign, \"operator=operator, left>left, right>right\");\n    map(\"ConditionalExpression\", AST_Conditional, \"test>condition, consequent>consequent, alternate>alternative\");\n    map(\"NewExpression\", AST_New, \"callee>expression, arguments@args\");\n    map(\"CallExpression\", AST_Call, \"callee>expression, arguments@args\");\n\n    def_to_moz(AST_Directive, function To_Moz_Directive(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: {\n                type: \"Literal\",\n                value: M.value\n            }\n        };\n    });\n\n    def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: to_moz(M.body)\n        };\n    });\n\n    def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {\n        return {\n            type: \"SwitchCase\",\n            test: to_moz(M.expression),\n            consequent: M.body.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Try, function To_Moz_TryStatement(M) {\n        return {\n            type: \"TryStatement\",\n            block: to_moz_block(M),\n            handler: to_moz(M.bcatch),\n            guardedHandlers: [],\n            finalizer: to_moz(M.bfinally)\n        };\n    });\n\n    def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n        return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            guard: null,\n            body: to_moz_block(M)\n        };\n    });\n\n    def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {\n        return {\n            type: \"VariableDeclaration\",\n            kind: M instanceof AST_Const ? \"const\" : \"var\",\n            declarations: M.definitions.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Seq, function To_Moz_SequenceExpression(M) {\n        return {\n            type: \"SequenceExpression\",\n            expressions: M.to_array().map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {\n        var isComputed = M instanceof AST_Sub;\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: isComputed,\n            property: isComputed ? to_moz(M.property) : {type: \"Identifier\", name: M.property}\n        };\n    });\n\n    def_to_moz(AST_Unary, function To_Moz_Unary(M) {\n        return {\n            type: M.operator == \"++\" || M.operator == \"--\" ? \"UpdateExpression\" : \"UnaryExpression\",\n            operator: M.operator,\n            prefix: M instanceof AST_UnaryPrefix,\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n        return {\n            type: M.operator == \"&&\" || M.operator == \"||\" ? \"LogicalExpression\" : \"BinaryExpression\",\n            left: to_moz(M.left),\n            operator: M.operator,\n            right: to_moz(M.right)\n        };\n    });\n\n    def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {\n        return {\n            type: \"ObjectExpression\",\n            properties: M.properties.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_ObjectProperty, function To_Moz_Property(M) {\n        var key = (\n            is_identifier(M.key)\n            ? {type: \"Identifier\", name: M.key}\n            : {type: \"Literal\", value: M.key}\n        );\n        var kind;\n        if (M instanceof AST_ObjectKeyVal) {\n            kind = \"init\";\n        } else\n        if (M instanceof AST_ObjectGetter) {\n            kind = \"get\";\n        } else\n        if (M instanceof AST_ObjectSetter) {\n            kind = \"set\";\n        }\n        return {\n            type: \"Property\",\n            kind: kind,\n            key: key,\n            value: to_moz(M.value)\n        };\n    });\n\n    def_to_moz(AST_Symbol, function To_Moz_Identifier(M) {\n        var def = M.definition();\n        return {\n            type: \"Identifier\",\n            name: def ? def.mangled_name || def.name : M.name\n        };\n    });\n\n    def_to_moz(AST_Constant, function To_Moz_Literal(M) {\n        var value = M.value;\n        if (typeof value === 'number' && (value < 0 || (value === 0 && 1 / value < 0))) {\n            return {\n                type: \"UnaryExpression\",\n                operator: \"-\",\n                prefix: true,\n                argument: {\n                    type: \"Literal\",\n                    value: -value\n                }\n            };\n        }\n        return {\n            type: \"Literal\",\n            value: value\n        };\n    });\n\n    def_to_moz(AST_Atom, function To_Moz_Atom(M) {\n        return {\n            type: \"Identifier\",\n            name: String(M.value)\n        };\n    });\n\n    AST_Boolean.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Null.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Hole.DEFMETHOD(\"to_mozilla_ast\", function To_Moz_ArrayHole() { return null });\n\n    AST_Block.DEFMETHOD(\"to_mozilla_ast\", AST_BlockStatement.prototype.to_mozilla_ast);\n    AST_Lambda.DEFMETHOD(\"to_mozilla_ast\", AST_Function.prototype.to_mozilla_ast);\n\n    /* -----[ tools ]----- */\n\n    function my_start_token(moznode) {\n        var loc = moznode.loc, start = loc && loc.start;\n        var range = moznode.range;\n        return new AST_Token({\n            file    : loc && loc.source,\n            line    : start && start.line,\n            col     : start && start.column,\n            pos     : range ? range[0] : moznode.start,\n            endline : start && start.line,\n            endcol  : start && start.column,\n            endpos  : range ? range[0] : moznode.start\n        });\n    };\n\n    function my_end_token(moznode) {\n        var loc = moznode.loc, end = loc && loc.end;\n        var range = moznode.range;\n        return new AST_Token({\n            file    : loc && loc.source,\n            line    : end && end.line,\n            col     : end && end.column,\n            pos     : range ? range[1] : moznode.end,\n            endline : end && end.line,\n            endcol  : end && end.column,\n            endpos  : range ? range[1] : moznode.end\n        });\n    };\n\n    function map(moztype, mytype, propmap) {\n        var moz_to_me = \"function From_Moz_\" + moztype + \"(M){\\n\";\n        moz_to_me += \"return new \" + mytype.name + \"({\\n\" +\n            \"start: my_start_token(M),\\n\" +\n            \"end: my_end_token(M)\";\n\n        var me_to_moz = \"function To_Moz_\" + moztype + \"(M){\\n\";\n        me_to_moz += \"return {\\n\" +\n            \"type: \" + JSON.stringify(moztype);\n\n        if (propmap) propmap.split(/\\s*,\\s*/).forEach(function(prop){\n            var m = /([a-z0-9$_]+)(=|@|>|%)([a-z0-9$_]+)/i.exec(prop);\n            if (!m) throw new Error(\"Can't understand property map: \" + prop);\n            var moz = m[1], how = m[2], my = m[3];\n            moz_to_me += \",\\n\" + my + \": \";\n            me_to_moz += \",\\n\" + moz + \": \";\n            switch (how) {\n                case \"@\":\n                    moz_to_me += \"M.\" + moz + \".map(from_moz)\";\n                    me_to_moz += \"M.\" +  my + \".map(to_moz)\";\n                    break;\n                case \">\":\n                    moz_to_me += \"from_moz(M.\" + moz + \")\";\n                    me_to_moz += \"to_moz(M.\" + my + \")\";\n                    break;\n                case \"=\":\n                    moz_to_me += \"M.\" + moz;\n                    me_to_moz += \"M.\" + my;\n                    break;\n                case \"%\":\n                    moz_to_me += \"from_moz(M.\" + moz + \").body\";\n                    me_to_moz += \"to_moz_block(M)\";\n                    break;\n                default:\n                    throw new Error(\"Can't understand operator in propmap: \" + prop);\n            }\n        });\n\n        moz_to_me += \"\\n})\\n}\";\n        me_to_moz += \"\\n}\\n}\";\n\n        //moz_to_me = parse(moz_to_me).print_to_string({ beautify: true });\n        //me_to_moz = parse(me_to_moz).print_to_string({ beautify: true });\n        //console.log(moz_to_me);\n\n        moz_to_me = new Function(\"my_start_token\", \"my_end_token\", \"from_moz\", \"return(\" + moz_to_me + \")\")(\n            my_start_token, my_end_token, from_moz\n        );\n        me_to_moz = new Function(\"to_moz\", \"to_moz_block\", \"return(\" + me_to_moz + \")\")(\n            to_moz, to_moz_block\n        );\n        MOZ_TO_ME[moztype] = moz_to_me;\n        def_to_moz(mytype, me_to_moz);\n    };\n\n    var FROM_MOZ_STACK = null;\n\n    function from_moz(node) {\n        FROM_MOZ_STACK.push(node);\n        var ret = node != null ? MOZ_TO_ME[node.type](node) : null;\n        FROM_MOZ_STACK.pop();\n        return ret;\n    };\n\n    AST_Node.from_mozilla_ast = function(node){\n        var save_stack = FROM_MOZ_STACK;\n        FROM_MOZ_STACK = [];\n        var ast = from_moz(node);\n        FROM_MOZ_STACK = save_stack;\n        return ast;\n    };\n\n    function set_moz_loc(mynode, moznode, myparent) {\n        var start = mynode.start;\n        var end = mynode.end;\n        if (start.pos != null && end.endpos != null) {\n            moznode.range = [start.pos, end.endpos];\n        }\n        if (start.line) {\n            moznode.loc = {\n                start: {line: start.line, column: start.col},\n                end: end.endline ? {line: end.endline, column: end.endcol} : null\n            };\n            if (start.file) {\n                moznode.loc.source = start.file;\n            }\n        }\n        return moznode;\n    };\n\n    function def_to_moz(mytype, handler) {\n        mytype.DEFMETHOD(\"to_mozilla_ast\", function() {\n            return set_moz_loc(this, handler(this));\n        });\n    };\n\n    function to_moz(node) {\n        return node != null ? node.to_mozilla_ast() : null;\n    };\n\n    function to_moz_block(node) {\n        return {\n            type: \"BlockStatement\",\n            body: node.body.map(to_moz)\n        };\n    };\n\n})();\n",
  "uglify-js/lib/output.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction OutputStream(options) {\n\n    options = defaults(options, {\n        indent_start     : 0,\n        indent_level     : 4,\n        quote_keys       : false,\n        space_colon      : true,\n        ascii_only       : false,\n        unescape_regexps : false,\n        inline_script    : false,\n        width            : 80,\n        max_line_len     : 32000,\n        beautify         : false,\n        source_map       : null,\n        bracketize       : false,\n        semicolons       : true,\n        comments         : false,\n        preserve_line    : false,\n        screw_ie8        : false,\n        preamble         : null,\n        quote_style      : 0\n    }, true);\n\n    var indentation = 0;\n    var current_col = 0;\n    var current_line = 1;\n    var current_pos = 0;\n    var OUTPUT = \"\";\n\n    function to_ascii(str, identifier) {\n        return str.replace(/[\\u0080-\\uffff]/g, function(ch) {\n            var code = ch.charCodeAt(0).toString(16);\n            if (code.length <= 2 && !identifier) {\n                while (code.length < 2) code = \"0\" + code;\n                return \"\\\\x\" + code;\n            } else {\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n            }\n        });\n    };\n\n    function make_string(str, quote) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g, function(s){\n            switch (s) {\n              case \"\\\\\": return \"\\\\\\\\\";\n              case \"\\b\": return \"\\\\b\";\n              case \"\\f\": return \"\\\\f\";\n              case \"\\n\": return \"\\\\n\";\n              case \"\\r\": return \"\\\\r\";\n              case \"\\u2028\": return \"\\\\u2028\";\n              case \"\\u2029\": return \"\\\\u2029\";\n              case '\"': ++dq; return '\"';\n              case \"'\": ++sq; return \"'\";\n              case \"\\0\": return \"\\\\x00\";\n              case \"\\ufeff\": return \"\\\\ufeff\";\n            }\n            return s;\n        });\n        function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        }\n        function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n        }\n        if (options.ascii_only) str = to_ascii(str);\n        switch (options.quote_style) {\n          case 1:\n            return quote_single();\n          case 2:\n            return quote_double();\n          case 3:\n            return quote == \"'\" ? quote_single() : quote_double();\n          default:\n            return dq > sq ? quote_single() : quote_double();\n        }\n    };\n\n    function encode_string(str, quote) {\n        var ret = make_string(str, quote);\n        if (options.inline_script)\n            ret = ret.replace(/<\\x2fscript([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n        return ret;\n    };\n\n    function make_name(name) {\n        name = name.toString();\n        if (options.ascii_only)\n            name = to_ascii(name, true);\n        return name;\n    };\n\n    function make_indent(back) {\n        return repeat_string(\" \", options.indent_start + indentation - back * options.indent_level);\n    };\n\n    /* -----[ beautification/minification ]----- */\n\n    var might_need_space = false;\n    var might_need_semicolon = false;\n    var last = null;\n\n    function last_char() {\n        return last.charAt(last.length - 1);\n    };\n\n    function maybe_newline() {\n        if (options.max_line_len && current_col > options.max_line_len)\n            print(\"\\n\");\n    };\n\n    var requireSemicolonChars = makePredicate(\"( [ + * / - , .\");\n\n    function print(str) {\n        str = String(str);\n        var ch = str.charAt(0);\n        if (might_need_semicolon) {\n            if ((!ch || \";}\".indexOf(ch) < 0) && !/[;]$/.test(last)) {\n                if (options.semicolons || requireSemicolonChars(ch)) {\n                    OUTPUT += \";\";\n                    current_col++;\n                    current_pos++;\n                } else {\n                    OUTPUT += \"\\n\";\n                    current_pos++;\n                    current_line++;\n                    current_col = 0;\n                }\n                if (!options.beautify)\n                    might_need_space = false;\n            }\n            might_need_semicolon = false;\n        }\n\n        if (!options.beautify && options.preserve_line && stack[stack.length - 1]) {\n            var target_line = stack[stack.length - 1].start.line;\n            while (current_line < target_line) {\n                OUTPUT += \"\\n\";\n                current_pos++;\n                current_line++;\n                current_col = 0;\n                might_need_space = false;\n            }\n        }\n\n        if (might_need_space) {\n            var prev = last_char();\n            if ((is_identifier_char(prev)\n                 && (is_identifier_char(ch) || ch == \"\\\\\"))\n                || (/^[\\+\\-\\/]$/.test(ch) && ch == prev))\n            {\n                OUTPUT += \" \";\n                current_col++;\n                current_pos++;\n            }\n            might_need_space = false;\n        }\n        var a = str.split(/\\r?\\n/), n = a.length - 1;\n        current_line += n;\n        if (n == 0) {\n            current_col += a[n].length;\n        } else {\n            current_col = a[n].length;\n        }\n        current_pos += str.length;\n        last = str;\n        OUTPUT += str;\n    };\n\n    var space = options.beautify ? function() {\n        print(\" \");\n    } : function() {\n        might_need_space = true;\n    };\n\n    var indent = options.beautify ? function(half) {\n        if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n        }\n    } : noop;\n\n    var with_indent = options.beautify ? function(col, cont) {\n        if (col === true) col = next_indent();\n        var save_indentation = indentation;\n        indentation = col;\n        var ret = cont();\n        indentation = save_indentation;\n        return ret;\n    } : function(col, cont) { return cont() };\n\n    var newline = options.beautify ? function() {\n        print(\"\\n\");\n    } : maybe_newline;\n\n    var semicolon = options.beautify ? function() {\n        print(\";\");\n    } : function() {\n        might_need_semicolon = true;\n    };\n\n    function force_semicolon() {\n        might_need_semicolon = false;\n        print(\";\");\n    };\n\n    function next_indent() {\n        return indentation + options.indent_level;\n    };\n\n    function with_block(cont) {\n        var ret;\n        print(\"{\");\n        newline();\n        with_indent(next_indent(), function(){\n            ret = cont();\n        });\n        indent();\n        print(\"}\");\n        return ret;\n    };\n\n    function with_parens(cont) {\n        print(\"(\");\n        //XXX: still nice to have that for argument lists\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\")\");\n        return ret;\n    };\n\n    function with_square(cont) {\n        print(\"[\");\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\"]\");\n        return ret;\n    };\n\n    function comma() {\n        print(\",\");\n        space();\n    };\n\n    function colon() {\n        print(\":\");\n        if (options.space_colon) space();\n    };\n\n    var add_mapping = options.source_map ? function(token, name) {\n        try {\n            if (token) options.source_map.add(\n                token.file || \"?\",\n                current_line, current_col,\n                token.line, token.col,\n                (!name && token.type == \"name\") ? token.value : name\n            );\n        } catch(ex) {\n            AST_Node.warn(\"Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]\", {\n                file: token.file,\n                line: token.line,\n                col: token.col,\n                cline: current_line,\n                ccol: current_col,\n                name: name || \"\"\n            })\n        }\n    } : noop;\n\n    function get() {\n        return OUTPUT;\n    };\n\n    if (options.preamble) {\n        print(options.preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n    }\n\n    var stack = [];\n    return {\n        get             : get,\n        toString        : get,\n        indent          : indent,\n        indentation     : function() { return indentation },\n        current_width   : function() { return current_col - indentation },\n        should_break    : function() { return options.width && this.current_width() >= options.width },\n        newline         : newline,\n        print           : print,\n        space           : space,\n        comma           : comma,\n        colon           : colon,\n        last            : function() { return last },\n        semicolon       : semicolon,\n        force_semicolon : force_semicolon,\n        to_ascii        : to_ascii,\n        print_name      : function(name) { print(make_name(name)) },\n        print_string    : function(str, quote) { print(encode_string(str, quote)) },\n        next_indent     : next_indent,\n        with_indent     : with_indent,\n        with_block      : with_block,\n        with_parens     : with_parens,\n        with_square     : with_square,\n        add_mapping     : add_mapping,\n        option          : function(opt) { return options[opt] },\n        line            : function() { return current_line },\n        col             : function() { return current_col },\n        pos             : function() { return current_pos },\n        push_node       : function(node) { stack.push(node) },\n        pop_node        : function() { return stack.pop() },\n        stack           : function() { return stack },\n        parent          : function(n) {\n            return stack[stack.length - 2 - (n || 0)];\n        }\n    };\n\n};\n\n/* -----[ code generators ]----- */\n\n(function(){\n\n    /* -----[ utils ]----- */\n\n    function DEFPRINT(nodetype, generator) {\n        nodetype.DEFMETHOD(\"_codegen\", generator);\n    };\n\n    AST_Node.DEFMETHOD(\"print\", function(stream, force_parens){\n        var self = this, generator = self._codegen;\n        function doit() {\n            self.add_comments(stream);\n            self.add_source_map(stream);\n            generator(self, stream);\n        }\n        stream.push_node(self);\n        if (force_parens || self.needs_parens(stream)) {\n            stream.with_parens(doit);\n        } else {\n            doit();\n        }\n        stream.pop_node();\n    });\n\n    AST_Node.DEFMETHOD(\"print_to_string\", function(options){\n        var s = OutputStream(options);\n        this.print(s);\n        return s.get();\n    });\n\n    /* -----[ comments ]----- */\n\n    AST_Node.DEFMETHOD(\"add_comments\", function(output){\n        var c = output.option(\"comments\"), self = this;\n        if (c) {\n            var start = self.start;\n            if (start && !start._comments_dumped) {\n                start._comments_dumped = true;\n                var comments = start.comments_before || [];\n\n                // XXX: ugly fix for https://github.com/mishoo/UglifyJS2/issues/112\n                //               and https://github.com/mishoo/UglifyJS2/issues/372\n                if (self instanceof AST_Exit && self.value) {\n                    self.value.walk(new TreeWalker(function(node){\n                        if (node.start && node.start.comments_before) {\n                            comments = comments.concat(node.start.comments_before);\n                            node.start.comments_before = [];\n                        }\n                        if (node instanceof AST_Function ||\n                            node instanceof AST_Array ||\n                            node instanceof AST_Object)\n                        {\n                            return true; // don't go inside.\n                        }\n                    }));\n                }\n\n                if (c.test) {\n                    comments = comments.filter(function(comment){\n                        return c.test(comment.value);\n                    });\n                } else if (typeof c == \"function\") {\n                    comments = comments.filter(function(comment){\n                        return c(self, comment);\n                    });\n                }\n\n                // Keep single line comments after nlb, after nlb\n                if (!output.option(\"beautify\") && comments.length > 0 &&\n                    /comment[134]/.test(comments[0].type) &&\n                    output.col() !== 0 && comments[0].nlb)\n                {\n                    output.print(\"\\n\");\n                }\n\n                comments.forEach(function(c){\n                    if (/comment[134]/.test(c.type)) {\n                        output.print(\"//\" + c.value + \"\\n\");\n                        output.indent();\n                    }\n                    else if (c.type == \"comment2\") {\n                        output.print(\"/*\" + c.value + \"*/\");\n                        if (start.nlb) {\n                            output.print(\"\\n\");\n                            output.indent();\n                        } else {\n                            output.space();\n                        }\n                    }\n                });\n            }\n        }\n    });\n\n    /* -----[ PARENTHESES ]----- */\n\n    function PARENS(nodetype, func) {\n        if (Array.isArray(nodetype)) {\n            nodetype.forEach(function(nodetype){\n                PARENS(nodetype, func);\n            });\n        } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n        }\n    };\n\n    PARENS(AST_Node, function(){\n        return false;\n    });\n\n    // a function expression needs parens around it when it's provably\n    // the first token to appear in a statement.\n    PARENS(AST_Function, function(output){\n        return first_in_statement(output);\n    });\n\n    // same goes for an object literal, because otherwise it would be\n    // interpreted as a block of code.\n    PARENS(AST_Object, function(output){\n        return first_in_statement(output);\n    });\n\n    PARENS([ AST_Unary, AST_Undefined ], function(output){\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this;\n    });\n\n    PARENS(AST_Seq, function(output){\n        var p = output.parent();\n        return p instanceof AST_Call             // (foo, bar)() or foo(1, (2, 3), 4)\n            || p instanceof AST_Unary            // !(foo, bar, baz)\n            || p instanceof AST_Binary           // 1 + (2, 3) + 4 ==> 8\n            || p instanceof AST_VarDef           // var a = (1, 2), b = a + a; ==> b == 4\n            || p instanceof AST_PropAccess       // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n            || p instanceof AST_Array            // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n            || p instanceof AST_ObjectProperty   // { foo: (1, 2) }.foo ==> 2\n            || p instanceof AST_Conditional      /* (false, true) ? (a = 10, b = 20) : (c = 30)\n                                                  * ==> 20 (side effect, set a := 10 and b := 20) */\n        ;\n    });\n\n    PARENS(AST_Binary, function(output){\n        var p = output.parent();\n        // (foo && bar)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // typeof (foo && bar)\n        if (p instanceof AST_Unary)\n            return true;\n        // (foo && bar)[\"prop\"], (foo && bar).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // this deals with precedence: 3 * (2 + 1)\n        if (p instanceof AST_Binary) {\n            var po = p.operator, pp = PRECEDENCE[po];\n            var so = this.operator, sp = PRECEDENCE[so];\n            if (pp > sp\n                || (pp == sp\n                    && this === p.right)) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_PropAccess, function(output){\n        var p = output.parent();\n        if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            try {\n                this.walk(new TreeWalker(function(node){\n                    if (node instanceof AST_Call) throw p;\n                }));\n            } catch(ex) {\n                if (ex !== p) throw ex;\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_Call, function(output){\n        var p = output.parent(), p1;\n        if (p instanceof AST_New && p.expression === this)\n            return true;\n\n        // workaround for Safari bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=123506\n        return this.expression instanceof AST_Function\n            && p instanceof AST_PropAccess\n            && p.expression === this\n            && (p1 = output.parent(1)) instanceof AST_Assign\n            && p1.left === p;\n    });\n\n    PARENS(AST_New, function(output){\n        var p = output.parent();\n        if (no_constructor_parens(this, output)\n            && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n                || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)\n            return true;\n    });\n\n    PARENS(AST_Number, function(output){\n        var p = output.parent();\n        if (this.getValue() < 0 && p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    PARENS([ AST_Assign, AST_Conditional ], function (output){\n        var p = output.parent();\n        // !(a = false) → true\n        if (p instanceof AST_Unary)\n            return true;\n        // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n        if (p instanceof AST_Binary && !(p instanceof AST_Assign))\n            return true;\n        // (a = func)() —or— new (a = Object)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (a = foo) ? bar : baz\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // (a = foo)[\"prop\"] —or— (a = foo).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    /* -----[ PRINTERS ]----- */\n\n    DEFPRINT(AST_Directive, function(self, output){\n        output.print_string(self.value, self.quote);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Debugger, function(self, output){\n        output.print(\"debugger\");\n        output.semicolon();\n    });\n\n    /* -----[ statements ]----- */\n\n    function display_body(body, is_toplevel, output) {\n        var last = body.length - 1;\n        body.forEach(function(stmt, i){\n            if (!(stmt instanceof AST_EmptyStatement)) {\n                output.indent();\n                stmt.print(output);\n                if (!(i == last && is_toplevel)) {\n                    output.newline();\n                    if (is_toplevel) output.newline();\n                }\n            }\n        });\n    };\n\n    AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function(output){\n        force_statement(this.body, output);\n    });\n\n    DEFPRINT(AST_Statement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Toplevel, function(self, output){\n        display_body(self.body, true, output);\n        output.print(\"\");\n    });\n    DEFPRINT(AST_LabeledStatement, function(self, output){\n        self.label.print(output);\n        output.colon();\n        self.body.print(output);\n    });\n    DEFPRINT(AST_SimpleStatement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    function print_bracketed(body, output) {\n        if (body.length > 0) output.with_block(function(){\n            display_body(body, false, output);\n        });\n        else output.print(\"{}\");\n    };\n    DEFPRINT(AST_BlockStatement, function(self, output){\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_EmptyStatement, function(self, output){\n        output.semicolon();\n    });\n    DEFPRINT(AST_Do, function(self, output){\n        output.print(\"do\");\n        output.space();\n        self._do_print_body(output);\n        output.space();\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.semicolon();\n    });\n    DEFPRINT(AST_While, function(self, output){\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_For, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            if (self.init && !(self.init instanceof AST_EmptyStatement)) {\n                if (self.init instanceof AST_Definitions) {\n                    self.init.print(output);\n                } else {\n                    parenthesize_for_noin(self.init, output, true);\n                }\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.condition) {\n                self.condition.print(output);\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.step) {\n                self.step.print(output);\n            }\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_ForIn, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            self.init.print(output);\n            output.space();\n            output.print(\"in\");\n            output.space();\n            self.object.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_With, function(self, output){\n        output.print(\"with\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n\n    /* -----[ functions ]----- */\n    AST_Lambda.DEFMETHOD(\"_do_print\", function(output, nokeyword){\n        var self = this;\n        if (!nokeyword) {\n            output.print(\"function\");\n        }\n        if (self.name) {\n            output.space();\n            self.name.print(output);\n        }\n        output.with_parens(function(){\n            self.argnames.forEach(function(arg, i){\n                if (i) output.comma();\n                arg.print(output);\n            });\n        });\n        output.space();\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_Lambda, function(self, output){\n        self._do_print(output);\n    });\n\n    /* -----[ exits ]----- */\n    AST_Exit.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.value) {\n            output.space();\n            this.value.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Return, function(self, output){\n        self._do_print(output, \"return\");\n    });\n    DEFPRINT(AST_Throw, function(self, output){\n        self._do_print(output, \"throw\");\n    });\n\n    /* -----[ loop control ]----- */\n    AST_LoopControl.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.label) {\n            output.space();\n            this.label.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Break, function(self, output){\n        self._do_print(output, \"break\");\n    });\n    DEFPRINT(AST_Continue, function(self, output){\n        self._do_print(output, \"continue\");\n    });\n\n    /* -----[ if ]----- */\n    function make_then(self, output) {\n        if (output.option(\"bracketize\")) {\n            make_block(self.body, output);\n            return;\n        }\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block brackets if needed.\n        if (!self.body)\n            return output.force_semicolon();\n        if (self.body instanceof AST_Do\n            && !output.option(\"screw_ie8\")) {\n            // https://github.com/mishoo/UglifyJS/issues/#issue/57 IE\n            // croaks with \"syntax error\" on code like this: if (foo)\n            // do ... while(cond); else ...  we need block brackets\n            // around do/while\n            make_block(self.body, output);\n            return;\n        }\n        var b = self.body;\n        while (true) {\n            if (b instanceof AST_If) {\n                if (!b.alternative) {\n                    make_block(self.body, output);\n                    return;\n                }\n                b = b.alternative;\n            }\n            else if (b instanceof AST_StatementWithBody) {\n                b = b.body;\n            }\n            else break;\n        }\n        force_statement(self.body, output);\n    };\n    DEFPRINT(AST_If, function(self, output){\n        output.print(\"if\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            force_statement(self.alternative, output);\n        } else {\n            self._do_print_body(output);\n        }\n    });\n\n    /* -----[ switch ]----- */\n    DEFPRINT(AST_Switch, function(self, output){\n        output.print(\"switch\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        if (self.body.length > 0) output.with_block(function(){\n            self.body.forEach(function(stmt, i){\n                if (i) output.newline();\n                output.indent(true);\n                stmt.print(output);\n            });\n        });\n        else output.print(\"{}\");\n    });\n    AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function(output){\n        if (this.body.length > 0) {\n            output.newline();\n            this.body.forEach(function(stmt){\n                output.indent();\n                stmt.print(output);\n                output.newline();\n            });\n        }\n    });\n    DEFPRINT(AST_Default, function(self, output){\n        output.print(\"default:\");\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_Case, function(self, output){\n        output.print(\"case\");\n        output.space();\n        self.expression.print(output);\n        output.print(\":\");\n        self._do_print_body(output);\n    });\n\n    /* -----[ exceptions ]----- */\n    DEFPRINT(AST_Try, function(self, output){\n        output.print(\"try\");\n        output.space();\n        print_bracketed(self.body, output);\n        if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n        }\n        if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n        }\n    });\n    DEFPRINT(AST_Catch, function(self, output){\n        output.print(\"catch\");\n        output.space();\n        output.with_parens(function(){\n            self.argname.print(output);\n        });\n        output.space();\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_Finally, function(self, output){\n        output.print(\"finally\");\n        output.space();\n        print_bracketed(self.body, output);\n    });\n\n    /* -----[ var/const ]----- */\n    AST_Definitions.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        output.space();\n        this.definitions.forEach(function(def, i){\n            if (i) output.comma();\n            def.print(output);\n        });\n        var p = output.parent();\n        var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n        var avoid_semicolon = in_for && p.init === this;\n        if (!avoid_semicolon)\n            output.semicolon();\n    });\n    DEFPRINT(AST_Var, function(self, output){\n        self._do_print(output, \"var\");\n    });\n    DEFPRINT(AST_Const, function(self, output){\n        self._do_print(output, \"const\");\n    });\n\n    function parenthesize_for_noin(node, output, noin) {\n        if (!noin) node.print(output);\n        else try {\n            // need to take some precautions here:\n            //    https://github.com/mishoo/UglifyJS2/issues/60\n            node.walk(new TreeWalker(function(node){\n                if (node instanceof AST_Binary && node.operator == \"in\")\n                    throw output;\n            }));\n            node.print(output);\n        } catch(ex) {\n            if (ex !== output) throw ex;\n            node.print(output, true);\n        }\n    };\n\n    DEFPRINT(AST_VarDef, function(self, output){\n        self.name.print(output);\n        if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n        }\n    });\n\n    /* -----[ other expressions ]----- */\n    DEFPRINT(AST_Call, function(self, output){\n        self.expression.print(output);\n        if (self instanceof AST_New && no_constructor_parens(self, output))\n            return;\n        output.with_parens(function(){\n            self.args.forEach(function(expr, i){\n                if (i) output.comma();\n                expr.print(output);\n            });\n        });\n    });\n    DEFPRINT(AST_New, function(self, output){\n        output.print(\"new\");\n        output.space();\n        AST_Call.prototype._codegen(self, output);\n    });\n\n    AST_Seq.DEFMETHOD(\"_do_print\", function(output){\n        this.car.print(output);\n        if (this.cdr) {\n            output.comma();\n            if (output.should_break()) {\n                output.newline();\n                output.indent();\n            }\n            this.cdr.print(output);\n        }\n    });\n    DEFPRINT(AST_Seq, function(self, output){\n        self._do_print(output);\n        // var p = output.parent();\n        // if (p instanceof AST_Statement) {\n        //     output.with_indent(output.next_indent(), function(){\n        //         self._do_print(output);\n        //     });\n        // } else {\n        //     self._do_print(output);\n        // }\n    });\n    DEFPRINT(AST_Dot, function(self, output){\n        var expr = self.expression;\n        expr.print(output);\n        if (expr instanceof AST_Number && expr.getValue() >= 0) {\n            if (!/[xa-f.]/i.test(output.last())) {\n                output.print(\".\");\n            }\n        }\n        output.print(\".\");\n        // the name after dot would be mapped about here.\n        output.add_mapping(self.end);\n        output.print_name(self.property);\n    });\n    DEFPRINT(AST_Sub, function(self, output){\n        self.expression.print(output);\n        output.print(\"[\");\n        self.property.print(output);\n        output.print(\"]\");\n    });\n    DEFPRINT(AST_UnaryPrefix, function(self, output){\n        var op = self.operator;\n        output.print(op);\n        if (/^[a-z]/i.test(op)\n            || (/[+-]$/.test(op)\n                && self.expression instanceof AST_UnaryPrefix\n                && /^[+-]/.test(self.expression.operator))) {\n            output.space();\n        }\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPostfix, function(self, output){\n        self.expression.print(output);\n        output.print(self.operator);\n    });\n    DEFPRINT(AST_Binary, function(self, output){\n        self.left.print(output);\n        output.space();\n        output.print(self.operator);\n        if (self.operator == \"<\"\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"!\"\n            && self.right.expression instanceof AST_UnaryPrefix\n            && self.right.expression.operator == \"--\") {\n            // space is mandatory to avoid outputting <!--\n            // http://javascript.spec.whatwg.org/#comment-syntax\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        self.right.print(output);\n    });\n    DEFPRINT(AST_Conditional, function(self, output){\n        self.condition.print(output);\n        output.space();\n        output.print(\"?\");\n        output.space();\n        self.consequent.print(output);\n        output.space();\n        output.colon();\n        self.alternative.print(output);\n    });\n\n    /* -----[ literals ]----- */\n    DEFPRINT(AST_Array, function(self, output){\n        output.with_square(function(){\n            var a = self.elements, len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function(exp, i){\n                if (i) output.comma();\n                exp.print(output);\n                // If the final element is a hole, we need to make sure it\n                // doesn't look like a trailing comma, by inserting an actual\n                // trailing comma.\n                if (i === len - 1 && exp instanceof AST_Hole)\n                  output.comma();\n            });\n            if (len > 0) output.space();\n        });\n    });\n    DEFPRINT(AST_Object, function(self, output){\n        if (self.properties.length > 0) output.with_block(function(){\n            self.properties.forEach(function(prop, i){\n                if (i) {\n                    output.print(\",\");\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else output.print(\"{}\");\n    });\n    DEFPRINT(AST_ObjectKeyVal, function(self, output){\n        var key = self.key;\n        var quote = self.quote;\n        if (output.option(\"quote_keys\")) {\n            output.print_string(key + \"\");\n        } else if ((typeof key == \"number\"\n                    || !output.option(\"beautify\")\n                    && +key + \"\" == key)\n                   && parseFloat(key) >= 0) {\n            output.print(make_num(key));\n        } else if (RESERVED_WORDS(key) ? output.option(\"screw_ie8\") : is_identifier_string(key)) {\n            output.print_name(key);\n        } else {\n            output.print_string(key, quote);\n        }\n        output.colon();\n        self.value.print(output);\n    });\n    DEFPRINT(AST_ObjectSetter, function(self, output){\n        output.print(\"set\");\n        output.space();\n        self.key.print(output);\n        self.value._do_print(output, true);\n    });\n    DEFPRINT(AST_ObjectGetter, function(self, output){\n        output.print(\"get\");\n        output.space();\n        self.key.print(output);\n        self.value._do_print(output, true);\n    });\n    DEFPRINT(AST_Symbol, function(self, output){\n        var def = self.definition();\n        output.print_name(def ? def.mangled_name || def.name : self.name);\n    });\n    DEFPRINT(AST_Undefined, function(self, output){\n        output.print(\"void 0\");\n    });\n    DEFPRINT(AST_Hole, noop);\n    DEFPRINT(AST_Infinity, function(self, output){\n        output.print(\"Infinity\");\n    });\n    DEFPRINT(AST_NaN, function(self, output){\n        output.print(\"NaN\");\n    });\n    DEFPRINT(AST_This, function(self, output){\n        output.print(\"this\");\n    });\n    DEFPRINT(AST_Constant, function(self, output){\n        output.print(self.getValue());\n    });\n    DEFPRINT(AST_String, function(self, output){\n        output.print_string(self.getValue(), self.quote);\n    });\n    DEFPRINT(AST_Number, function(self, output){\n        output.print(make_num(self.getValue()));\n    });\n\n    function regexp_safe_literal(code) {\n        return [\n            0x5c   , // \\\n            0x2f   , // /\n            0x2e   , // .\n            0x2b   , // +\n            0x2a   , // *\n            0x3f   , // ?\n            0x28   , // (\n            0x29   , // )\n            0x5b   , // [\n            0x5d   , // ]\n            0x7b   , // {\n            0x7d   , // }\n            0x24   , // $\n            0x5e   , // ^\n            0x3a   , // :\n            0x7c   , // |\n            0x21   , // !\n            0x0a   , // \\n\n            0x0d   , // \\r\n            0x00   , // \\0\n            0xfeff , // Unicode BOM\n            0x2028 , // unicode \"line separator\"\n            0x2029 , // unicode \"paragraph separator\"\n        ].indexOf(code) < 0;\n    };\n\n    DEFPRINT(AST_RegExp, function(self, output){\n        var str = self.getValue().toString();\n        if (output.option(\"ascii_only\")) {\n            str = output.to_ascii(str);\n        } else if (output.option(\"unescape_regexps\")) {\n            str = str.split(\"\\\\\\\\\").map(function(str){\n                return str.replace(/\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}/g, function(s){\n                    var code = parseInt(s.substr(2), 16);\n                    return regexp_safe_literal(code) ? String.fromCharCode(code) : s;\n                });\n            }).join(\"\\\\\\\\\");\n        }\n        output.print(str);\n        var p = output.parent();\n        if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self)\n            output.print(\" \");\n    });\n\n    function force_statement(stat, output) {\n        if (output.option(\"bracketize\")) {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.print(\"{}\");\n            else if (stat instanceof AST_BlockStatement)\n                stat.print(output);\n            else output.with_block(function(){\n                output.indent();\n                stat.print(output);\n                output.newline();\n            });\n        } else {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.force_semicolon();\n            else\n                stat.print(output);\n        }\n    };\n\n    // return true if the node at the top of the stack (that means the\n    // innermost node in the current output) is lexically the first in\n    // a statement.\n    function first_in_statement(output) {\n        var a = output.stack(), i = a.length, node = a[--i], p = a[--i];\n        while (i > 0) {\n            if (p instanceof AST_Statement && p.body === node)\n                return true;\n            if ((p instanceof AST_Seq           && p.car === node        ) ||\n                (p instanceof AST_Call          && p.expression === node && !(p instanceof AST_New) ) ||\n                (p instanceof AST_Dot           && p.expression === node ) ||\n                (p instanceof AST_Sub           && p.expression === node ) ||\n                (p instanceof AST_Conditional   && p.condition === node  ) ||\n                (p instanceof AST_Binary        && p.left === node       ) ||\n                (p instanceof AST_UnaryPostfix  && p.expression === node ))\n            {\n                node = p;\n                p = a[--i];\n            } else {\n                return false;\n            }\n        }\n    };\n\n    // self should be AST_New.  decide if we want to show parens or not.\n    function no_constructor_parens(self, output) {\n        return self.args.length == 0 && !output.option(\"beautify\");\n    };\n\n    function best_of(a) {\n        var best = a[0], len = best.length;\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n                best = a[i];\n                len = best.length;\n            }\n        }\n        return best;\n    };\n\n    function make_num(num) {\n        var str = num.toString(10), a = [ str.replace(/^0\\./, \".\").replace('e+', 'e') ], m;\n        if (Math.floor(num) === num) {\n            if (num >= 0) {\n                a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n                       \"0\" + num.toString(8)); // same.\n            } else {\n                a.push(\"-0x\" + (-num).toString(16).toLowerCase(), // probably pointless\n                       \"-0\" + (-num).toString(8)); // same.\n            }\n            if ((m = /^(.*?)(0+)$/.exec(num))) {\n                a.push(m[1] + \"e\" + m[2].length);\n            }\n        } else if ((m = /^0?\\.(0+)(.*)$/.exec(num))) {\n            a.push(m[2] + \"e-\" + (m[1].length + m[2].length),\n                   str.substr(str.indexOf(\".\")));\n        }\n        return best_of(a);\n    };\n\n    function make_block(stmt, output) {\n        if (stmt instanceof AST_BlockStatement) {\n            stmt.print(output);\n            return;\n        }\n        output.with_block(function(){\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    };\n\n    /* -----[ source map generators ]----- */\n\n    function DEFMAP(nodetype, generator) {\n        nodetype.DEFMETHOD(\"add_source_map\", function(stream){\n            generator(this, stream);\n        });\n    };\n\n    // We could easily add info for ALL nodes, but it seems to me that\n    // would be quite wasteful, hence this noop in the base class.\n    DEFMAP(AST_Node, noop);\n\n    function basic_sourcemap_gen(self, output) {\n        output.add_mapping(self.start);\n    };\n\n    // XXX: I'm not exactly sure if we need it for all of these nodes,\n    // or if we should add even more.\n\n    DEFMAP(AST_Directive, basic_sourcemap_gen);\n    DEFMAP(AST_Debugger, basic_sourcemap_gen);\n    DEFMAP(AST_Symbol, basic_sourcemap_gen);\n    DEFMAP(AST_Jump, basic_sourcemap_gen);\n    DEFMAP(AST_StatementWithBody, basic_sourcemap_gen);\n    DEFMAP(AST_LabeledStatement, noop); // since the label symbol will mark it\n    DEFMAP(AST_Lambda, basic_sourcemap_gen);\n    DEFMAP(AST_Switch, basic_sourcemap_gen);\n    DEFMAP(AST_SwitchBranch, basic_sourcemap_gen);\n    DEFMAP(AST_BlockStatement, basic_sourcemap_gen);\n    DEFMAP(AST_Toplevel, noop);\n    DEFMAP(AST_New, basic_sourcemap_gen);\n    DEFMAP(AST_Try, basic_sourcemap_gen);\n    DEFMAP(AST_Catch, basic_sourcemap_gen);\n    DEFMAP(AST_Finally, basic_sourcemap_gen);\n    DEFMAP(AST_Definitions, basic_sourcemap_gen);\n    DEFMAP(AST_Constant, basic_sourcemap_gen);\n    DEFMAP(AST_ObjectProperty, function(self, output){\n        output.add_mapping(self.start, self.key);\n    });\n\n})();\n",
  "uglify-js/lib/parse.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';\nvar KEYWORDS_ATOM = 'false null true';\nvar RESERVED_WORDS = 'abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized this throws transient volatile yield'\n    + \" \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = 'return new delete throw else case';\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"/=\",\n    \"*=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"||\"\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,.;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = makePredicate(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n    letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n    digit: new RegExp(\"[\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19D9\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]\"),\n    non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n    space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n    connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(code) {\n    return (code >= 97 && code <= 122)\n        || (code >= 65 && code <= 90)\n        || (code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code)));\n};\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n};\n\nfunction is_alphanumeric_char(code) {\n    return is_digit(code) || is_letter(code);\n};\n\nfunction is_unicode_digit(code) {\n    return UNICODE.digit.test(String.fromCharCode(code));\n}\n\nfunction is_unicode_combining_mark(ch) {\n    return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n    return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier(name) {\n    return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);\n};\n\nfunction is_identifier_start(code) {\n    return code == 36 || code == 95 || is_letter(code);\n};\n\nfunction is_identifier_char(ch) {\n    var code = ch.charCodeAt(0);\n    return is_identifier_start(code)\n        || is_digit(code)\n        || code == 8204 // \\u200c: zero-width non-joiner <ZWNJ>\n        || code == 8205 // \\u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        || is_unicode_combining_mark(ch)\n        || is_unicode_connector_punctuation(ch)\n        || is_unicode_digit(code)\n    ;\n};\n\nfunction is_identifier_string(str){\n    return /^[a-z_$][a-z0-9_$]*$/i.test(str);\n};\n\nfunction parse_js_number(num) {\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else if (RE_DEC_NUMBER.test(num)) {\n        return parseFloat(num);\n    }\n};\n\nfunction JS_Parse_Error(message, filename, line, col, pos) {\n    this.message = message;\n    this.filename = filename;\n    this.line = line;\n    this.col = col;\n    this.pos = pos;\n    this.stack = new Error().stack;\n};\n\nJS_Parse_Error.prototype.toString = function() {\n    return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\\n\" + this.stack;\n};\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments) {\n\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        comments_before : []\n    };\n\n    function peek() { return S.text.charAt(S.pos); };\n\n    function next(signal_eof, in_string) {\n        var ch = S.text.charAt(S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (\"\\r\\n\\u2028\\u2029\".indexOf(ch) >= 0) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (!in_string && ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            ++S.col;\n        }\n        return ch;\n    };\n\n    function forward(i) {\n        while (i-- > 0) next();\n    };\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    };\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    };\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    };\n\n    var prev_was_dot = false;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION(value)));\n        prev_was_dot = (type == \"punc\" && value == \".\");\n        var ret = {\n            type    : type,\n            value   : value,\n            line    : S.tokline,\n            col     : S.tokcol,\n            pos     : S.tokpos,\n            endline : S.line,\n            endcol  : S.col,\n            endpos  : S.pos,\n            nlb     : S.newline_before,\n            file    : filename\n        };\n        if (!is_comment) {\n            ret.comments_before = S.comments_before;\n            S.comments_before = [];\n            // make note of any newlines in the comments that came before\n            for (var i = 0, len = ret.comments_before.length; i < len; i++) {\n                ret.nlb = ret.nlb || ret.comments_before[i].nlb;\n            }\n        }\n        S.newline_before = false;\n        return new AST_Token(ret);\n    };\n\n    function skip_whitespace() {\n        var ch;\n        while (WHITESPACE_CHARS(ch = peek()) || ch == \"\\u2028\" || ch == \"\\u2029\")\n            next();\n    };\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    };\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    };\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n        var num = read_while(function(ch, i){\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n            return is_alphanumeric_char(code);\n        });\n        if (prefix) num = prefix + num;\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"Invalid syntax: \" + num);\n        }\n    };\n\n    function read_escaped_char(in_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 48  : return \"\\0\";\n          case 120 : return String.fromCharCode(hex_bytes(2)); // \\x\n          case 117 : return String.fromCharCode(hex_bytes(4)); // \\u\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        return ch;\n    };\n\n    function hex_bytes(n) {\n        var num = 0;\n        for (; n > 0; --n) {\n            var digit = parseInt(next(true), 16);\n            if (isNaN(digit))\n                parse_error(\"Invalid hex-character pattern in string\");\n            num = (num << 4) | digit;\n        }\n        return num;\n    };\n\n    var read_string = with_eof_error(\"Unterminated string constant\", function(quote_char){\n        var quote = next(), ret = \"\";\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") {\n                // read OctalEscapeSequence (XXX: deprecated if \"strict mode\")\n                // https://github.com/mishoo/UglifyJS/issues/178\n                var octal_len = 0, first = null;\n                ch = read_while(function(ch){\n                    if (ch >= \"0\" && ch <= \"7\") {\n                        if (!first) {\n                            first = ch;\n                            return ++octal_len;\n                        }\n                        else if (first <= \"3\" && octal_len <= 2) return ++octal_len;\n                        else if (first >= \"4\" && octal_len <= 1) return ++octal_len;\n                    }\n                    return false;\n                });\n                if (octal_len > 0) ch = String.fromCharCode(parseInt(ch, 8));\n                else ch = read_escaped_char(true);\n            }\n            else if (ch == quote) break;\n            ret += ch;\n        }\n        var tok = token(\"string\", ret);\n        tok.quote = quote_char;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"\\n\"), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token();\n    };\n\n    var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function(){\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i);\n        var a = text.split(\"\\n\"), n = a.length;\n        // update stream position\n        S.pos = i + 2;\n        S.line += n - 1;\n        if (n > 1) S.col = a[n - 1].length;\n        else S.col += a[n - 1].length;\n        S.col += 2;\n        var nlb = S.newline_before = S.newline_before || text.indexOf(\"\\n\") >= 0;\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.regex_allowed = regex_allowed;\n        S.newline_before = nlb;\n        return next_token();\n    });\n\n    function read_name() {\n        var backslash = false, name = \"\", ch, escaped = false, hex;\n        while ((ch = peek()) != null) {\n            if (!backslash) {\n                if (ch == \"\\\\\") escaped = backslash = true, next();\n                else if (is_identifier_char(ch)) name += next();\n                else break;\n            }\n            else {\n                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                ch = read_escaped_char();\n                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                name += ch;\n                backslash = false;\n            }\n        }\n        if (KEYWORDS(name) && escaped) {\n            hex = name.charCodeAt(0).toString(16).toUpperCase();\n            name = \"\\\\u\" + \"0000\".substr(hex.length) + hex + name.slice(1);\n        }\n        return name;\n    };\n\n    var read_regexp = with_eof_error(\"Unterminated regular expression\", function(regexp){\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (prev_backslash) {\n            regexp += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            regexp += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            regexp += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            regexp += ch;\n        }\n        var mods = read_name();\n        return token(\"regexp\", new RegExp(regexp, mods));\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        };\n        return token(\"operator\", grow(prefix || next()));\n    };\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    };\n\n    function handle_dot() {\n        next();\n        return is_digit(peek().charCodeAt(0))\n            ? read_num(\".\")\n            : token(\"punc\", \".\");\n    };\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM(word) ? token(\"atom\", word)\n            : !KEYWORDS(word) ? token(\"name\", word)\n            : OPERATORS(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    };\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    };\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        skip_whitespace();\n        start_token();\n        if (html5_comments) {\n            if (looking_at(\"<!--\")) {\n                forward(4);\n                return skip_line_comment(\"comment3\");\n            }\n            if (looking_at(\"-->\") && S.newline_before) {\n                forward(3);\n                return skip_line_comment(\"comment4\");\n            }\n        }\n        var ch = peek();\n        if (!ch) return token(\"eof\");\n        var code = ch.charCodeAt(0);\n        switch (code) {\n          case 34: case 39: return read_string(ch);\n          case 46: return handle_dot();\n          case 47: return handle_slash();\n        }\n        if (is_digit(code)) return read_num();\n        if (PUNC_CHARS(ch)) return token(\"punc\", next());\n        if (OPERATOR_CHARS(ch)) return read_operator();\n        if (code == 92 || is_identifier_start(code)) return read_word();\n        parse_error(\"Unexpected character '\" + ch + \"'\");\n    };\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar PRECEDENCE = (function(a, ret){\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ],\n    {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n\n    options = defaults(options, {\n        strict         : false,\n        filename       : null,\n        toplevel       : null,\n        expression     : false,\n        html5_comments : true,\n        bare_returns   : false,\n    });\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    };\n\n    function peek() { return S.peeked || (S.peeked = S.input()); };\n\n    function next() {\n        S.prev = S.token;\n        if (S.peeked) {\n            S.token = S.peeked;\n            S.peeked = null;\n        } else {\n            S.token = S.input();\n        }\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    };\n\n    function prev() {\n        return S.prev;\n    };\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    };\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    };\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    };\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    };\n\n    function expect(punc) { return expect_token(\"punc\", punc); };\n\n    function can_insert_semicolon() {\n        return !options.strict && (\n            S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n        );\n    };\n\n    function semicolon() {\n        if (is(\"punc\", \";\")) next();\n        else if (!can_insert_semicolon()) unexpected();\n    };\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    };\n\n    function embed_tokens(parser) {\n        return function() {\n            var start = S.token;\n            var expr = parser();\n            var end = prev();\n            expr.start = start;\n            expr.end = end;\n            return expr;\n        };\n    };\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    };\n\n    var statement = embed_tokens(function() {\n        var tmp;\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            var dir = S.in_directives, stat = simple_statement();\n            // XXXv2: decide how to fix directives\n            if (dir && stat.body instanceof AST_String && !is(\"punc\", \",\")) {\n                return new AST_Directive({\n                    start : stat.body.start,\n                    end   : stat.body.end,\n                    quote : stat.body.quote,\n                    value : stat.body.value,\n                });\n            }\n            return stat;\n          case \"num\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (tmp = S.token.value, next(), tmp) {\n              case \"break\":\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                return new AST_Do({\n                    body      : in_loop(statement),\n                    condition : (expect_token(\"keyword\", \"while\"), tmp = parenthesised(), semicolon(), tmp)\n                });\n\n              case \"while\":\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(statement)\n                });\n\n              case \"for\":\n                return for_();\n\n              case \"function\":\n                return function_(AST_Defun);\n\n              case \"if\":\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"'return' outside of function\");\n                return new AST_Return({\n                    value: ( is(\"punc\", \";\")\n                             ? (next(), null)\n                             : can_insert_semicolon()\n                             ? null\n                             : (tmp = expression(true), semicolon(), tmp) )\n                });\n\n              case \"switch\":\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                if (S.token.nlb)\n                    croak(\"Illegal newline after 'throw'\");\n                return new AST_Throw({\n                    value: (tmp = expression(true), semicolon(), tmp)\n                });\n\n              case \"try\":\n                return try_();\n\n              case \"var\":\n                return tmp = var_(), semicolon(), tmp;\n\n              case \"const\":\n                return tmp = const_(), semicolon(), tmp;\n\n              case \"with\":\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n\n              default:\n                unexpected();\n            }\n        }\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (find_if(function(l){ return l.name == label.name }, S.labels)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref){\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    };\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    };\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = find_if(function(l){ return l.name == label.name }, S.labels);\n            if (!ldef)\n                croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n        }\n        else if (S.in_loop == 0)\n            croak(type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    };\n\n    function for_() {\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init = is(\"keyword\", \"var\")\n                ? (next(), var_(true))\n                : expression(true, true);\n            if (is(\"operator\", \"in\")) {\n                if (init instanceof AST_Var && init.definitions.length > 1)\n                    croak(\"Only one variable declaration allowed in for..in loop\");\n                next();\n                return for_in(init);\n            }\n        }\n        return regular_for(init);\n    };\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(statement)\n        });\n    };\n\n    function for_in(init) {\n        var lhs = init instanceof AST_Var ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(statement)\n        });\n    };\n\n    var function_ = function(ctor) {\n        var in_statement = ctor === AST_Defun;\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name)\n            unexpected();\n        expect(\"(\");\n        return new ctor({\n            name: name,\n            argnames: (function(first, a){\n                while (!is(\"punc\", \")\")) {\n                    if (first) first = false; else expect(\",\");\n                    a.push(as_symbol(AST_SymbolFunarg));\n                }\n                next();\n                return a;\n            })(true, []),\n            body: (function(loop, labels){\n                ++S.in_function;\n                S.in_directives = true;\n                S.in_loop = 0;\n                S.labels = [];\n                var a = block_();\n                --S.in_function;\n                S.in_loop = loop;\n                S.labels = labels;\n                return a;\n            })(S.in_loop, S.labels)\n        });\n    };\n\n    function if_() {\n        var cond = parenthesised(), body = statement(), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement();\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    };\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    };\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            }\n            else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            }\n            else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    };\n\n    function try_() {\n        var body = block_(), bcatch = null, bfinally = null;\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            expect(\"(\");\n            var name = as_symbol(AST_SymbolCatch);\n            expect(\")\");\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    };\n\n    function vardefs(no_in, in_const) {\n        var a = [];\n        for (;;) {\n            a.push(new AST_VarDef({\n                start : S.token,\n                name  : as_symbol(in_const ? AST_SymbolConst : AST_SymbolVar),\n                value : is(\"operator\", \"=\") ? (next(), expression(false, no_in)) : null,\n                end   : prev()\n            }));\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return a;\n    };\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, false),\n            end         : prev()\n        });\n    };\n\n    var const_ = function() {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(false, true),\n            end         : prev()\n        });\n    };\n\n    var new_ = function() {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\");\n        } else {\n            args = [];\n        }\n        return subscripts(new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        }), true);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n          case \"keyword\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            break;\n          case \"regexp\":\n            ret = new AST_RegExp({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n        }\n        next();\n        return ret;\n    };\n\n    var expr_atom = function(allow_calls) {\n        if (is(\"operator\", \"new\")) {\n            return new_();\n        }\n        var start = S.token;\n        if (is(\"punc\")) {\n            switch (start.value) {\n              case \"(\":\n                next();\n                var ex = expression(true);\n                ex.start = start;\n                ex.end = S.token;\n                expect(\")\");\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_(), allow_calls);\n            }\n            unexpected();\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (ATOMIC_START_TOKEN[S.token.type]) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    };\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var object_ = embed_tokens(function() {\n        expect(\"{\");\n        var first = true, a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n            var start = S.token;\n            var type = start.type;\n            var name = as_property_name();\n            if (type == \"name\" && !is(\"punc\", \":\")) {\n                if (name == \"get\") {\n                    a.push(new AST_ObjectGetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n                if (name == \"set\") {\n                    a.push(new AST_ObjectSetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n            }\n            expect(\":\");\n            a.push(new AST_ObjectKeyVal({\n                start : start,\n                quote : start.quote,\n                key   : name,\n                value : expression(false),\n                end   : prev()\n            }));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function as_property_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"num\":\n          case \"string\":\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function as_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This : type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    };\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        next();\n        return sym;\n    };\n\n    var subscripts = function(expr, allow_calls) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            return subscripts(new AST_Dot({\n                start      : start,\n                expression : expr,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls);\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                property   : prop,\n                end        : prev()\n            }), allow_calls);\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            return subscripts(new AST_Call({\n                start      : start,\n                expression : expr,\n                args       : expr_list(\")\"),\n                end        : prev()\n            }), true);\n        }\n        return expr;\n    };\n\n    var maybe_unary = function(allow_calls) {\n        var start = S.token;\n        if (is(\"operator\") && UNARY_PREFIX(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start.value, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls);\n        while (is(\"operator\") && UNARY_POSTFIX(S.token.value) && !S.token.nlb) {\n            val = make_unary(AST_UnaryPostfix, S.token.value, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, op, expr) {\n        if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n            croak(\"Invalid use of \" + op + \" operator\");\n        return new ctor({ operator: op, expression: expr });\n    };\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && prec > min_prec) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true), 0, no_in);\n    };\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        if (!options.strict) return true;\n        if (expr instanceof AST_This) return false;\n        return (expr instanceof AST_PropAccess || expr instanceof AST_Symbol);\n    };\n\n    var maybe_assign = function(no_in) {\n        var start = S.token;\n        var left = maybe_conditional(no_in), val = S.token.value;\n        if (is(\"operator\") && ASSIGNMENT(val)) {\n            if (is_assignable(left)) {\n                next();\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    end      : prev()\n                });\n            }\n            croak(\"Invalid assignment\");\n        }\n        return left;\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var expr = maybe_assign(no_in);\n        if (commas && is(\"punc\", \",\")) {\n            next();\n            return new AST_Seq({\n                start  : start,\n                car    : expr,\n                cdr    : expression(true, no_in),\n                end    : peek()\n            });\n        }\n        return expr;\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    };\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function(){\n        var start = S.token;\n        var body = [];\n        while (!is(\"eof\"))\n            body.push(statement());\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        return toplevel;\n    })();\n\n};\n",
  "uglify-js/lib/propmangle.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction find_builtins() {\n    var a = [];\n    [ Object, Array, Function, Number,\n      String, Boolean, Error, Math,\n      Date, RegExp\n    ].forEach(function(ctor){\n        Object.getOwnPropertyNames(ctor).map(add);\n        if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n        }\n    });\n    function add(name) {\n        push_uniq(a, name);\n    }\n    return a;\n}\n\nfunction mangle_properties(ast, options) {\n    options = defaults(options, {\n        reserved : null,\n        cache : null,\n        only_cache : false\n    });\n\n    var reserved = options.reserved;\n    if (reserved == null)\n        reserved = find_builtins();\n\n    var cache = options.cache;\n    if (cache == null) {\n        cache = {\n            cname: -1,\n            props: new Dictionary()\n        };\n    }\n\n    var names_to_mangle = [];\n\n    // step 1: find candidates to mangle\n    ast.walk(new TreeWalker(function(node){\n        if (node instanceof AST_ObjectKeyVal) {\n            add(node.key);\n        }\n        else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            add(node.key.name);\n        }\n        else if (node instanceof AST_Dot) {\n            if (this.parent() instanceof AST_Assign) {\n                add(node.property);\n            }\n        }\n        else if (node instanceof AST_Sub) {\n            if (this.parent() instanceof AST_Assign) {\n                addStrings(node.property);\n            }\n        }\n    }));\n\n    // step 2: transform the tree, renaming properties\n    return ast.transform(new TreeTransformer(function(node){\n        if (node instanceof AST_ObjectKeyVal) {\n            if (should_mangle(node.key)) {\n                node.key = mangle(node.key);\n            }\n        }\n        else if (node instanceof AST_ObjectProperty) {\n            // setter or getter\n            if (should_mangle(node.key.name)) {\n                node.key.name = mangle(node.key.name);\n            }\n        }\n        else if (node instanceof AST_Dot) {\n            if (should_mangle(node.property)) {\n                node.property = mangle(node.property);\n            }\n        }\n        else if (node instanceof AST_Sub) {\n            node.property = mangleStrings(node.property);\n        }\n        // else if (node instanceof AST_String) {\n        //     if (should_mangle(node.value)) {\n        //         AST_Node.warn(\n        //             \"Found \\\"{prop}\\\" property candidate for mangling in an arbitrary string [{file}:{line},{col}]\", {\n        //                 file : node.start.file,\n        //                 line : node.start.line,\n        //                 col  : node.start.col,\n        //                 prop : node.value\n        //             }\n        //         );\n        //     }\n        // }\n    }));\n\n    // only function declarations after this line\n\n    function can_mangle(name) {\n        if (reserved.indexOf(name) >= 0) return false;\n        if (options.only_cache) {\n            return cache.props.has(name);\n        }\n        if (/^[0-9.]+$/.test(name)) return false;\n        return true;\n    }\n\n    function should_mangle(name) {\n        if (reserved.indexOf(name) >= 0) return false;\n        return cache.props.has(name)\n            || names_to_mangle.indexOf(name) >= 0;\n    }\n\n    function add(name) {\n        if (can_mangle(name))\n            push_uniq(names_to_mangle, name);\n    }\n\n    function mangle(name) {\n        var mangled = cache.props.get(name);\n        if (!mangled) {\n            do {\n                mangled = base54(++cache.cname);\n            } while (!can_mangle(mangled));\n            cache.props.set(name, mangled);\n        }\n        return mangled;\n    }\n\n    function addStrings(node) {\n        var out = {};\n        try {\n            (function walk(node){\n                node.walk(new TreeWalker(function(node){\n                    if (node instanceof AST_Seq) {\n                        walk(node.cdr);\n                        return true;\n                    }\n                    if (node instanceof AST_String) {\n                        add(node.value);\n                        return true;\n                    }\n                    if (node instanceof AST_Conditional) {\n                        walk(node.consequent);\n                        walk(node.alternative);\n                        return true;\n                    }\n                    throw out;\n                }));\n            })(node);\n        } catch(ex) {\n            if (ex !== out) throw ex;\n        }\n    }\n\n    function mangleStrings(node) {\n        return node.transform(new TreeTransformer(function(node){\n            if (node instanceof AST_Seq) {\n                node.cdr = mangleStrings(node.cdr);\n            }\n            else if (node instanceof AST_String) {\n                if (should_mangle(node.value)) {\n                    node.value = mangle(node.value);\n                }\n            }\n            else if (node instanceof AST_Conditional) {\n                node.consequent = mangleStrings(node.consequent);\n                node.alternative = mangleStrings(node.alternative);\n            }\n            return node;\n        }));\n    }\n\n}\n",
  "uglify-js/lib/scope.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction SymbolDef(scope, index, orig) {\n    this.name = orig.name;\n    this.orig = [ orig ];\n    this.scope = scope;\n    this.references = [];\n    this.global = false;\n    this.mangled_name = null;\n    this.undeclared = false;\n    this.constant = false;\n    this.index = index;\n};\n\nSymbolDef.prototype = {\n    unmangleable: function(options) {\n        if (!options) options = {};\n\n        return (this.global && !options.toplevel)\n            || this.undeclared\n            || (!options.eval && (this.scope.uses_eval || this.scope.uses_with))\n            || (options.keep_fnames\n                && (this.orig[0] instanceof AST_SymbolLambda\n                    || this.orig[0] instanceof AST_SymbolDefun));\n    },\n    mangle: function(options) {\n        var cache = options.cache && options.cache.props;\n        if (this.global && cache && cache.has(this.name)) {\n            this.mangled_name = cache.get(this.name);\n        }\n        else if (!this.mangled_name && !this.unmangleable(options)) {\n            var s = this.scope;\n            if (!options.screw_ie8 && this.orig[0] instanceof AST_SymbolLambda)\n                s = s.parent_scope;\n            this.mangled_name = s.next_mangled(options, this);\n            if (this.global && cache) {\n                cache.set(this.name, this.mangled_name);\n            }\n        }\n    }\n};\n\nAST_Toplevel.DEFMETHOD(\"figure_out_scope\", function(options){\n    options = defaults(options, {\n        screw_ie8: false,\n        cache: null\n    });\n\n    // pass 1: setup scope chaining and handle definitions\n    var self = this;\n    var scope = self.parent_scope = null;\n    var defun = null;\n    var nesting = 0;\n    var tw = new TreeWalker(function(node, descend){\n        if (options.screw_ie8 && node instanceof AST_Catch) {\n            var save_scope = scope;\n            scope = new AST_Scope(node);\n            scope.init_scope_vars(nesting);\n            scope.parent_scope = save_scope;\n            descend();\n            scope = save_scope;\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            node.init_scope_vars(nesting);\n            var save_scope = node.parent_scope = scope;\n            var save_defun = defun;\n            defun = scope = node;\n            ++nesting; descend(); --nesting;\n            scope = save_scope;\n            defun = save_defun;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_Directive) {\n            node.scope = scope;\n            push_uniq(scope.directives, node.value);\n            return true;\n        }\n        if (node instanceof AST_With) {\n            for (var s = scope; s; s = s.parent_scope)\n                s.uses_with = true;\n            return;\n        }\n        if (node instanceof AST_Symbol) {\n            node.scope = scope;\n        }\n        if (node instanceof AST_SymbolLambda) {\n            defun.def_function(node);\n        }\n        else if (node instanceof AST_SymbolDefun) {\n            // Careful here, the scope where this should be defined is\n            // the parent scope.  The reason is that we enter a new\n            // scope when we encounter the AST_Defun node (which is\n            // instanceof AST_Scope) but we get to the symbol a bit\n            // later.\n            (node.scope = defun.parent_scope).def_function(node);\n        }\n        else if (node instanceof AST_SymbolVar\n                 || node instanceof AST_SymbolConst) {\n            var def = defun.def_variable(node);\n            def.constant = node instanceof AST_SymbolConst;\n            def.init = tw.parent().value;\n        }\n        else if (node instanceof AST_SymbolCatch) {\n            (options.screw_ie8 ? scope : defun)\n                .def_variable(node);\n        }\n    });\n    self.walk(tw);\n\n    // pass 2: find back references and eval\n    var func = null;\n    var globals = self.globals = new Dictionary();\n    var tw = new TreeWalker(function(node, descend){\n        if (node instanceof AST_Lambda) {\n            var prev_func = func;\n            func = node;\n            descend();\n            func = prev_func;\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            var name = node.name;\n            var sym = node.scope.find_variable(name);\n            if (!sym) {\n                var g;\n                if (globals.has(name)) {\n                    g = globals.get(name);\n                } else {\n                    g = new SymbolDef(self, globals.size(), node);\n                    g.undeclared = true;\n                    g.global = true;\n                    globals.set(name, g);\n                }\n                node.thedef = g;\n                if (name == \"eval\" && tw.parent() instanceof AST_Call) {\n                    for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope)\n                        s.uses_eval = true;\n                }\n                if (func && name == \"arguments\") {\n                    func.uses_arguments = true;\n                }\n            } else {\n                node.thedef = sym;\n            }\n            node.reference();\n            return true;\n        }\n    });\n    self.walk(tw);\n\n    if (options.cache) {\n        this.cname = options.cache.cname;\n    }\n});\n\nAST_Scope.DEFMETHOD(\"init_scope_vars\", function(nesting){\n    this.directives = [];     // contains the directives defined in this scope, i.e. \"use strict\"\n    this.variables = new Dictionary(); // map name to AST_SymbolVar (variables defined in this scope; includes functions)\n    this.functions = new Dictionary(); // map name to AST_SymbolDefun (functions defined in this scope)\n    this.uses_with = false;   // will be set to true if this or some nested scope uses the `with` statement\n    this.uses_eval = false;   // will be set to true if this or nested scope uses the global `eval`\n    this.parent_scope = null; // the parent scope\n    this.enclosed = [];       // a list of variables from this or outer scope(s) that are referenced from this or inner scopes\n    this.cname = -1;          // the current index for mangling functions/variables\n    this.nesting = nesting;   // the nesting level of this scope (0 means toplevel)\n});\n\nAST_Scope.DEFMETHOD(\"strict\", function(){\n    return this.has_directive(\"use strict\");\n});\n\nAST_Lambda.DEFMETHOD(\"init_scope_vars\", function(){\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n});\n\nAST_SymbolRef.DEFMETHOD(\"reference\", function() {\n    var def = this.definition();\n    def.references.push(this);\n    var s = this.scope;\n    while (s) {\n        push_uniq(s.enclosed, def);\n        if (s === def.scope) break;\n        s = s.parent_scope;\n    }\n    this.frame = this.scope.nesting - def.scope.nesting;\n});\n\nAST_Scope.DEFMETHOD(\"find_variable\", function(name){\n    if (name instanceof AST_Symbol) name = name.name;\n    return this.variables.get(name)\n        || (this.parent_scope && this.parent_scope.find_variable(name));\n});\n\nAST_Scope.DEFMETHOD(\"has_directive\", function(value){\n    return this.parent_scope && this.parent_scope.has_directive(value)\n        || (this.directives.indexOf(value) >= 0 ? this : null);\n});\n\nAST_Scope.DEFMETHOD(\"def_function\", function(symbol){\n    this.functions.set(symbol.name, this.def_variable(symbol));\n});\n\nAST_Scope.DEFMETHOD(\"def_variable\", function(symbol){\n    var def;\n    if (!this.variables.has(symbol.name)) {\n        def = new SymbolDef(this, this.variables.size(), symbol);\n        this.variables.set(symbol.name, def);\n        def.global = !this.parent_scope;\n    } else {\n        def = this.variables.get(symbol.name);\n        def.orig.push(symbol);\n    }\n    return symbol.thedef = def;\n});\n\nAST_Scope.DEFMETHOD(\"next_mangled\", function(options){\n    var ext = this.enclosed;\n    out: while (true) {\n        var m = base54(++this.cname);\n        if (!is_identifier(m)) continue; // skip over \"do\"\n\n        // https://github.com/mishoo/UglifyJS2/issues/242 -- do not\n        // shadow a name excepted from mangling.\n        if (options.except.indexOf(m) >= 0) continue;\n\n        // we must ensure that the mangled name does not shadow a name\n        // from some parent scope that is referenced in this or in\n        // inner scopes.\n        for (var i = ext.length; --i >= 0;) {\n            var sym = ext[i];\n            var name = sym.mangled_name || (sym.unmangleable(options) && sym.name);\n            if (m == name) continue out;\n        }\n        return m;\n    }\n});\n\nAST_Function.DEFMETHOD(\"next_mangled\", function(options, def){\n    // #179, #326\n    // in Safari strict mode, something like (function x(x){...}) is a syntax error;\n    // a function expression's argument cannot shadow the function expression's name\n\n    var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition();\n    while (true) {\n        var name = AST_Lambda.prototype.next_mangled.call(this, options, def);\n        if (!(tricky_def && tricky_def.mangled_name == name))\n            return name;\n    }\n});\n\nAST_Scope.DEFMETHOD(\"references\", function(sym){\n    if (sym instanceof AST_Symbol) sym = sym.definition();\n    return this.enclosed.indexOf(sym) < 0 ? null : sym;\n});\n\nAST_Symbol.DEFMETHOD(\"unmangleable\", function(options){\n    return this.definition().unmangleable(options);\n});\n\n// property accessors are not mangleable\nAST_SymbolAccessor.DEFMETHOD(\"unmangleable\", function(){\n    return true;\n});\n\n// labels are always mangleable\nAST_Label.DEFMETHOD(\"unmangleable\", function(){\n    return false;\n});\n\nAST_Symbol.DEFMETHOD(\"unreferenced\", function(){\n    return this.definition().references.length == 0\n        && !(this.scope.uses_eval || this.scope.uses_with);\n});\n\nAST_Symbol.DEFMETHOD(\"undeclared\", function(){\n    return this.definition().undeclared;\n});\n\nAST_LabelRef.DEFMETHOD(\"undeclared\", function(){\n    return false;\n});\n\nAST_Label.DEFMETHOD(\"undeclared\", function(){\n    return false;\n});\n\nAST_Symbol.DEFMETHOD(\"definition\", function(){\n    return this.thedef;\n});\n\nAST_Symbol.DEFMETHOD(\"global\", function(){\n    return this.definition().global;\n});\n\nAST_Toplevel.DEFMETHOD(\"_default_mangler_options\", function(options){\n    return defaults(options, {\n        except      : [],\n        eval        : false,\n        sort        : false,\n        toplevel    : false,\n        screw_ie8   : false,\n        keep_fnames : false\n    });\n});\n\nAST_Toplevel.DEFMETHOD(\"mangle_names\", function(options){\n    options = this._default_mangler_options(options);\n    // We only need to mangle declaration nodes.  Special logic wired\n    // into the code generator will display the mangled name if it's\n    // present (and for AST_SymbolRef-s it'll use the mangled name of\n    // the AST_SymbolDeclaration that it points to).\n    var lname = -1;\n    var to_mangle = [];\n\n    if (options.cache) {\n        this.globals.each(function(symbol){\n            if (options.except.indexOf(symbol.name) < 0) {\n                to_mangle.push(symbol);\n            }\n        });\n    }\n\n    var tw = new TreeWalker(function(node, descend){\n        if (node instanceof AST_LabeledStatement) {\n            // lname is incremented when we get to the AST_Label\n            var save_nesting = lname;\n            descend();\n            lname = save_nesting;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_Scope) {\n            var p = tw.parent(), a = [];\n            node.variables.each(function(symbol){\n                if (options.except.indexOf(symbol.name) < 0) {\n                    a.push(symbol);\n                }\n            });\n            if (options.sort) a.sort(function(a, b){\n                return b.references.length - a.references.length;\n            });\n            to_mangle.push.apply(to_mangle, a);\n            return;\n        }\n        if (node instanceof AST_Label) {\n            var name;\n            do name = base54(++lname); while (!is_identifier(name));\n            node.mangled_name = name;\n            return true;\n        }\n        if (options.screw_ie8 && node instanceof AST_SymbolCatch) {\n            to_mangle.push(node.definition());\n            return;\n        }\n    });\n    this.walk(tw);\n    to_mangle.forEach(function(def){ def.mangle(options) });\n\n    if (options.cache) {\n        options.cache.cname = this.cname;\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function(options){\n    options = this._default_mangler_options(options);\n    var tw = new TreeWalker(function(node){\n        if (node instanceof AST_Constant)\n            base54.consider(node.print_to_string());\n        else if (node instanceof AST_Return)\n            base54.consider(\"return\");\n        else if (node instanceof AST_Throw)\n            base54.consider(\"throw\");\n        else if (node instanceof AST_Continue)\n            base54.consider(\"continue\");\n        else if (node instanceof AST_Break)\n            base54.consider(\"break\");\n        else if (node instanceof AST_Debugger)\n            base54.consider(\"debugger\");\n        else if (node instanceof AST_Directive)\n            base54.consider(node.value);\n        else if (node instanceof AST_While)\n            base54.consider(\"while\");\n        else if (node instanceof AST_Do)\n            base54.consider(\"do while\");\n        else if (node instanceof AST_If) {\n            base54.consider(\"if\");\n            if (node.alternative) base54.consider(\"else\");\n        }\n        else if (node instanceof AST_Var)\n            base54.consider(\"var\");\n        else if (node instanceof AST_Const)\n            base54.consider(\"const\");\n        else if (node instanceof AST_Lambda)\n            base54.consider(\"function\");\n        else if (node instanceof AST_For)\n            base54.consider(\"for\");\n        else if (node instanceof AST_ForIn)\n            base54.consider(\"for in\");\n        else if (node instanceof AST_Switch)\n            base54.consider(\"switch\");\n        else if (node instanceof AST_Case)\n            base54.consider(\"case\");\n        else if (node instanceof AST_Default)\n            base54.consider(\"default\");\n        else if (node instanceof AST_With)\n            base54.consider(\"with\");\n        else if (node instanceof AST_ObjectSetter)\n            base54.consider(\"set\" + node.key);\n        else if (node instanceof AST_ObjectGetter)\n            base54.consider(\"get\" + node.key);\n        else if (node instanceof AST_ObjectKeyVal)\n            base54.consider(node.key);\n        else if (node instanceof AST_New)\n            base54.consider(\"new\");\n        else if (node instanceof AST_This)\n            base54.consider(\"this\");\n        else if (node instanceof AST_Try)\n            base54.consider(\"try\");\n        else if (node instanceof AST_Catch)\n            base54.consider(\"catch\");\n        else if (node instanceof AST_Finally)\n            base54.consider(\"finally\");\n        else if (node instanceof AST_Symbol && node.unmangleable(options))\n            base54.consider(node.name);\n        else if (node instanceof AST_Unary || node instanceof AST_Binary)\n            base54.consider(node.operator);\n        else if (node instanceof AST_Dot)\n            base54.consider(node.property);\n    });\n    this.walk(tw);\n    base54.sort();\n});\n\nvar base54 = (function() {\n    var string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789\";\n    var chars, frequency;\n    function reset() {\n        frequency = Object.create(null);\n        chars = string.split(\"\").map(function(ch){ return ch.charCodeAt(0) });\n        chars.forEach(function(ch){ frequency[ch] = 0 });\n    }\n    base54.consider = function(str){\n        for (var i = str.length; --i >= 0;) {\n            var code = str.charCodeAt(i);\n            if (code in frequency) ++frequency[code];\n        }\n    };\n    base54.sort = function() {\n        chars = mergeSort(chars, function(a, b){\n            if (is_digit(a) && !is_digit(b)) return 1;\n            if (is_digit(b) && !is_digit(a)) return -1;\n            return frequency[b] - frequency[a];\n        });\n    };\n    base54.reset = reset;\n    reset();\n    base54.get = function(){ return chars };\n    base54.freq = function(){ return frequency };\n    function base54(num) {\n        var ret = \"\", base = 54;\n        num++;\n        do {\n            num--;\n            ret += String.fromCharCode(chars[num % base]);\n            num = Math.floor(num / base);\n            base = 64;\n        } while (num > 0);\n        return ret;\n    };\n    return base54;\n})();\n\nAST_Toplevel.DEFMETHOD(\"scope_warnings\", function(options){\n    options = defaults(options, {\n        undeclared       : false, // this makes a lot of noise\n        unreferenced     : true,\n        assign_to_global : true,\n        func_arguments   : true,\n        nested_defuns    : true,\n        eval             : true\n    });\n    var tw = new TreeWalker(function(node){\n        if (options.undeclared\n            && node instanceof AST_SymbolRef\n            && node.undeclared())\n        {\n            // XXX: this also warns about JS standard names,\n            // i.e. Object, Array, parseInt etc.  Should add a list of\n            // exceptions.\n            AST_Node.warn(\"Undeclared symbol: {name} [{file}:{line},{col}]\", {\n                name: node.name,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.assign_to_global)\n        {\n            var sym = null;\n            if (node instanceof AST_Assign && node.left instanceof AST_SymbolRef)\n                sym = node.left;\n            else if (node instanceof AST_ForIn && node.init instanceof AST_SymbolRef)\n                sym = node.init;\n            if (sym\n                && (sym.undeclared()\n                    || (sym.global() && sym.scope !== sym.definition().scope))) {\n                AST_Node.warn(\"{msg}: {name} [{file}:{line},{col}]\", {\n                    msg: sym.undeclared() ? \"Accidental global?\" : \"Assignment to global\",\n                    name: sym.name,\n                    file: sym.start.file,\n                    line: sym.start.line,\n                    col: sym.start.col\n                });\n            }\n        }\n        if (options.eval\n            && node instanceof AST_SymbolRef\n            && node.undeclared()\n            && node.name == \"eval\") {\n            AST_Node.warn(\"Eval is used [{file}:{line},{col}]\", node.start);\n        }\n        if (options.unreferenced\n            && (node instanceof AST_SymbolDeclaration || node instanceof AST_Label)\n            && !(node instanceof AST_SymbolCatch)\n            && node.unreferenced()) {\n            AST_Node.warn(\"{type} {name} is declared but not referenced [{file}:{line},{col}]\", {\n                type: node instanceof AST_Label ? \"Label\" : \"Symbol\",\n                name: node.name,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.func_arguments\n            && node instanceof AST_Lambda\n            && node.uses_arguments) {\n            AST_Node.warn(\"arguments used in function {name} [{file}:{line},{col}]\", {\n                name: node.name ? node.name.name : \"anonymous\",\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n        if (options.nested_defuns\n            && node instanceof AST_Defun\n            && !(tw.parent() instanceof AST_Scope)) {\n            AST_Node.warn(\"Function {name} declared in nested statement \\\"{type}\\\" [{file}:{line},{col}]\", {\n                name: node.name.name,\n                type: tw.parent().TYPE,\n                file: node.start.file,\n                line: node.start.line,\n                col: node.start.col\n            });\n        }\n    });\n    this.walk(tw);\n});\n",
  "uglify-js/lib/sourcemap.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// a small wrapper around fitzgen's source-map library\nfunction SourceMap(options) {\n    options = defaults(options, {\n        file : null,\n        root : null,\n        orig : null,\n\n        orig_line_diff : 0,\n        dest_line_diff : 0,\n    });\n    var orig_map = options.orig && new MOZ_SourceMap.SourceMapConsumer(options.orig);\n    var generator;\n    if (orig_map) {\n      generator = MOZ_SourceMap.SourceMapGenerator.fromSourceMap(orig_map);\n    } else {\n        generator = new MOZ_SourceMap.SourceMapGenerator({\n            file       : options.file,\n            sourceRoot : options.root\n        });\n    }\n    function add(source, gen_line, gen_col, orig_line, orig_col, name) {\n        if (orig_map) {\n            var info = orig_map.originalPositionFor({\n                line: orig_line,\n                column: orig_col\n            });\n            if (info.source === null) {\n                return;\n            }\n            source = info.source;\n            orig_line = info.line;\n            orig_col = info.column;\n            name = info.name || name;\n        }\n        generator.addMapping({\n            generated : { line: gen_line + options.dest_line_diff, column: gen_col },\n            original  : { line: orig_line + options.orig_line_diff, column: orig_col },\n            source    : source,\n            name      : name\n        });\n    }\n    return {\n        add        : add,\n        get        : function() { return generator },\n        toString   : function() { return JSON.stringify(generator.toJSON()); }\n    };\n};\n",
  "uglify-js/lib/transform.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// Tree transformer helpers.\n\nfunction TreeTransformer(before, after) {\n    TreeWalker.call(this);\n    this.before = before;\n    this.after = after;\n}\nTreeTransformer.prototype = new TreeWalker;\n\n(function(undefined){\n\n    function _(node, descend) {\n        node.DEFMETHOD(\"transform\", function(tw, in_list){\n            var x, y;\n            tw.push(this);\n            if (tw.before) x = tw.before(this, descend, in_list);\n            if (x === undefined) {\n                if (!tw.after) {\n                    x = this;\n                    descend(x, tw);\n                } else {\n                    tw.stack[tw.stack.length - 1] = x = this.clone();\n                    descend(x, tw);\n                    y = tw.after(x, in_list);\n                    if (y !== undefined) x = y;\n                }\n            }\n            tw.pop();\n            return x;\n        });\n    };\n\n    function do_list(list, tw) {\n        return MAP(list, function(node){\n            return node.transform(tw, true);\n        });\n    };\n\n    _(AST_Node, noop);\n\n    _(AST_LabeledStatement, function(self, tw){\n        self.label = self.label.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_SimpleStatement, function(self, tw){\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Block, function(self, tw){\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_DWLoop, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_For, function(self, tw){\n        if (self.init) self.init = self.init.transform(tw);\n        if (self.condition) self.condition = self.condition.transform(tw);\n        if (self.step) self.step = self.step.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_ForIn, function(self, tw){\n        self.init = self.init.transform(tw);\n        self.object = self.object.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_With, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Exit, function(self, tw){\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_LoopControl, function(self, tw){\n        if (self.label) self.label = self.label.transform(tw);\n    });\n\n    _(AST_If, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n        if (self.alternative) self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Switch, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Case, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Try, function(self, tw){\n        self.body = do_list(self.body, tw);\n        if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n        if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n    });\n\n    _(AST_Catch, function(self, tw){\n        self.argname = self.argname.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Definitions, function(self, tw){\n        self.definitions = do_list(self.definitions, tw);\n    });\n\n    _(AST_VarDef, function(self, tw){\n        self.name = self.name.transform(tw);\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_Lambda, function(self, tw){\n        if (self.name) self.name = self.name.transform(tw);\n        self.argnames = do_list(self.argnames, tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Call, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.args = do_list(self.args, tw);\n    });\n\n    _(AST_Seq, function(self, tw){\n        self.car = self.car.transform(tw);\n        self.cdr = self.cdr.transform(tw);\n    });\n\n    _(AST_Dot, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Sub, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.property = self.property.transform(tw);\n    });\n\n    _(AST_Unary, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Binary, function(self, tw){\n        self.left = self.left.transform(tw);\n        self.right = self.right.transform(tw);\n    });\n\n    _(AST_Conditional, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.consequent = self.consequent.transform(tw);\n        self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Array, function(self, tw){\n        self.elements = do_list(self.elements, tw);\n    });\n\n    _(AST_Object, function(self, tw){\n        self.properties = do_list(self.properties, tw);\n    });\n\n    _(AST_ObjectProperty, function(self, tw){\n        self.value = self.value.transform(tw);\n    });\n\n})();\n",
  "uglify-js/lib/utils.js": "/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction array_to_hash(a) {\n    var ret = Object.create(null);\n    for (var i = 0; i < a.length; ++i)\n        ret[a[i]] = true;\n    return ret;\n};\n\nfunction slice(a, start) {\n    return Array.prototype.slice.call(a, start || 0);\n};\n\nfunction characters(str) {\n    return str.split(\"\");\n};\n\nfunction member(name, array) {\n    for (var i = array.length; --i >= 0;)\n        if (array[i] == name)\n            return true;\n    return false;\n};\n\nfunction find_if(func, array) {\n    for (var i = 0, n = array.length; i < n; ++i) {\n        if (func(array[i]))\n            return array[i];\n    }\n};\n\nfunction repeat_string(str, i) {\n    if (i <= 0) return \"\";\n    if (i == 1) return str;\n    var d = repeat_string(str, i >> 1);\n    d += d;\n    if (i & 1) d += str;\n    return d;\n};\n\nfunction DefaultsError(msg, defs) {\n    Error.call(this, msg);\n    this.msg = msg;\n    this.defs = defs;\n};\nDefaultsError.prototype = Object.create(Error.prototype);\nDefaultsError.prototype.constructor = DefaultsError;\n\nDefaultsError.croak = function(msg, defs) {\n    throw new DefaultsError(msg, defs);\n};\n\nfunction defaults(args, defs, croak) {\n    if (args === true)\n        args = {};\n    var ret = args || {};\n    if (croak) for (var i in ret) if (ret.hasOwnProperty(i) && !defs.hasOwnProperty(i))\n        DefaultsError.croak(\"`\" + i + \"` is not a supported option\", defs);\n    for (var i in defs) if (defs.hasOwnProperty(i)) {\n        ret[i] = (args && args.hasOwnProperty(i)) ? args[i] : defs[i];\n    }\n    return ret;\n};\n\nfunction merge(obj, ext) {\n    var count = 0;\n    for (var i in ext) if (ext.hasOwnProperty(i)) {\n        obj[i] = ext[i];\n        count++;\n    }\n    return count;\n};\n\nfunction noop() {};\n\nvar MAP = (function(){\n    function MAP(a, f, backwards) {\n        var ret = [], top = [], i;\n        function doit() {\n            var val = f(a[i], i);\n            var is_last = val instanceof Last;\n            if (is_last) val = val.v;\n            if (val instanceof AtTop) {\n                val = val.v;\n                if (val instanceof Splice) {\n                    top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    top.push(val);\n                }\n            }\n            else if (val !== skip) {\n                if (val instanceof Splice) {\n                    ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    ret.push(val);\n                }\n            }\n            return is_last;\n        };\n        if (a instanceof Array) {\n            if (backwards) {\n                for (i = a.length; --i >= 0;) if (doit()) break;\n                ret.reverse();\n                top.reverse();\n            } else {\n                for (i = 0; i < a.length; ++i) if (doit()) break;\n            }\n        }\n        else {\n            for (i in a) if (a.hasOwnProperty(i)) if (doit()) break;\n        }\n        return top.concat(ret);\n    };\n    MAP.at_top = function(val) { return new AtTop(val) };\n    MAP.splice = function(val) { return new Splice(val) };\n    MAP.last = function(val) { return new Last(val) };\n    var skip = MAP.skip = {};\n    function AtTop(val) { this.v = val };\n    function Splice(val) { this.v = val };\n    function Last(val) { this.v = val };\n    return MAP;\n})();\n\nfunction push_uniq(array, el) {\n    if (array.indexOf(el) < 0)\n        array.push(el);\n};\n\nfunction string_template(text, props) {\n    return text.replace(/\\{(.+?)\\}/g, function(str, p){\n        return props[p];\n    });\n};\n\nfunction remove(array, el) {\n    for (var i = array.length; --i >= 0;) {\n        if (array[i] === el) array.splice(i, 1);\n    }\n};\n\nfunction mergeSort(array, cmp) {\n    if (array.length < 2) return array.slice();\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0\n                ? r[i++] = a[ai++]\n                : r[i++] = b[bi++];\n        }\n        if (ai < a.length) r.push.apply(r, a.slice(ai));\n        if (bi < b.length) r.push.apply(r, b.slice(bi));\n        return r;\n    };\n    function _ms(a) {\n        if (a.length <= 1)\n            return a;\n        var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);\n        left = _ms(left);\n        right = _ms(right);\n        return merge(left, right);\n    };\n    return _ms(array);\n};\n\nfunction set_difference(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) < 0;\n    });\n};\n\nfunction set_intersection(a, b) {\n    return a.filter(function(el){\n        return b.indexOf(el) >= 0;\n    });\n};\n\n// this function is taken from Acorn [1], written by Marijn Haverbeke\n// [1] https://github.com/marijnh/acorn\nfunction makePredicate(words) {\n    if (!(words instanceof Array)) words = words.split(\" \");\n    var f = \"\", cats = [];\n    out: for (var i = 0; i < words.length; ++i) {\n        for (var j = 0; j < cats.length; ++j)\n            if (cats[j][0].length == words[i].length) {\n                cats[j].push(words[i]);\n                continue out;\n            }\n        cats.push([words[i]]);\n    }\n    function compareTo(arr) {\n        if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n        f += \"switch(str){\";\n        for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n        f += \"return true}return false;\";\n    }\n    // When there are more than three length categories, an outer\n    // switch first dispatches on the lengths, to save on comparisons.\n    if (cats.length > 3) {\n        cats.sort(function(a, b) {return b.length - a.length;});\n        f += \"switch(str.length){\";\n        for (var i = 0; i < cats.length; ++i) {\n            var cat = cats[i];\n            f += \"case \" + cat[0].length + \":\";\n            compareTo(cat);\n        }\n        f += \"}\";\n        // Otherwise, simply generate a flat `switch` statement.\n    } else {\n        compareTo(words);\n    }\n    return new Function(\"str\", f);\n};\n\nfunction all(array, predicate) {\n    for (var i = array.length; --i >= 0;)\n        if (!predicate(array[i]))\n            return false;\n    return true;\n};\n\nfunction Dictionary() {\n    this._values = Object.create(null);\n    this._size = 0;\n};\nDictionary.prototype = {\n    set: function(key, val) {\n        if (!this.has(key)) ++this._size;\n        this._values[\"$\" + key] = val;\n        return this;\n    },\n    add: function(key, val) {\n        if (this.has(key)) {\n            this.get(key).push(val);\n        } else {\n            this.set(key, [ val ]);\n        }\n        return this;\n    },\n    get: function(key) { return this._values[\"$\" + key] },\n    del: function(key) {\n        if (this.has(key)) {\n            --this._size;\n            delete this._values[\"$\" + key];\n        }\n        return this;\n    },\n    has: function(key) { return (\"$\" + key) in this._values },\n    each: function(f) {\n        for (var i in this._values)\n            f(this._values[i], i.substr(1));\n    },\n    size: function() {\n        return this._size;\n    },\n    map: function(f) {\n        var ret = [];\n        for (var i in this._values)\n            ret.push(f(this._values[i], i.substr(1)));\n        return ret;\n    },\n    toObject: function() { return this._values }\n};\nDictionary.fromObject = function(obj) {\n    var dict = new Dictionary();\n    dict._size = merge(dict._values, obj);\n    return dict;\n};\n",
  "uglify-js/node_modules/async/component.json": "{\n  \"name\": \"async\",\n  \"repo\": \"caolan/async\",\n  \"description\": \"Higher-order functions and common patterns for asynchronous code\",\n  \"version\": \"0.1.23\",\n  \"keywords\": [],\n  \"dependencies\": {},\n  \"development\": {},\n  \"main\": \"lib/async.js\",\n  \"scripts\": [ \"lib/async.js\" ]\n}\n",
  "uglify-js/node_modules/async/lib/async.js": "/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n",
  "uglify-js/node_modules/async/package.json": "{\n  \"name\": \"async\",\n  \"description\": \"Higher-order functions and common patterns for asynchronous code\",\n  \"main\": \"./lib/async\",\n  \"author\": {\n    \"name\": \"Caolan McMahon\"\n  },\n  \"version\": \"0.2.10\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/caolan/async.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/caolan/async/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/caolan/async/raw/master/LICENSE\"\n    }\n  ],\n  \"devDependencies\": {\n    \"nodeunit\": \">0.0.0\",\n    \"uglify-js\": \"1.2.x\",\n    \"nodelint\": \">0.0.0\"\n  },\n  \"jam\": {\n    \"main\": \"lib/async.js\",\n    \"include\": [\n      \"lib/async.js\",\n      \"README.md\",\n      \"LICENSE\"\n    ]\n  },\n  \"scripts\": {\n    \"test\": \"nodeunit test/test-async.js\"\n  },\n  \"_id\": \"async@0.2.10\",\n  \"dist\": {\n    \"shasum\": \"b6bbe0b0674b9d719708ca38de8c237cb526c3d1\",\n    \"tarball\": \"http://registry.npmjs.org/async/-/async-0.2.10.tgz\"\n  },\n  \"_from\": \"async@>=0.2.6 <0.3.0\",\n  \"_npmVersion\": \"1.3.2\",\n  \"_npmUser\": {\n    \"name\": \"caolan\",\n    \"email\": \"caolan.mcmahon@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"caolan\",\n      \"email\": \"caolan@caolanmcmahon.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"b6bbe0b0674b9d719708ca38de8c237cb526c3d1\",\n  \"_resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",\n  \"readme\": \"ERROR: No README data found!\",\n  \"homepage\": \"https://github.com/caolan/async#readme\"\n}\n",
  "uglify-js/node_modules/source-map/build/assert-shim.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\ndefine('test/source-map/assert', ['exports'], function (exports) {\n\n  let do_throw = function (msg) {\n    throw new Error(msg);\n  };\n\n  exports.init = function (throw_fn) {\n    do_throw = throw_fn;\n  };\n\n  exports.doesNotThrow = function (fn) {\n    try {\n      fn();\n    }\n    catch (e) {\n      do_throw(e.message);\n    }\n  };\n\n  exports.equal = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' != ' + String(expected);\n    if (actual != expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.ok = function (val, msg) {\n    msg = msg || String(val) + ' is falsey';\n    if (!Boolean(val)) {\n      do_throw(msg);\n    }\n  };\n\n  exports.strictEqual = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' !== ' + String(expected);\n    if (actual !== expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.throws = function (fn) {\n    try {\n      fn();\n      do_throw('Expected an error to be thrown, but it wasn\\'t.');\n    }\n    catch (e) {\n    }\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/build/mini-require.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * Define a module along with a payload.\n * @param {string} moduleName Name for the payload\n * @param {ignored} deps Ignored. For compatibility with CommonJS AMD Spec\n * @param {function} payload Function with (require, exports, module) params\n */\nfunction define(moduleName, deps, payload) {\n  if (typeof moduleName != \"string\") {\n    throw new TypeError('Expected string, got: ' + moduleName);\n  }\n\n  if (arguments.length == 2) {\n    payload = deps;\n  }\n\n  if (moduleName in define.modules) {\n    throw new Error(\"Module already defined: \" + moduleName);\n  }\n  define.modules[moduleName] = payload;\n};\n\n/**\n * The global store of un-instantiated modules\n */\ndefine.modules = {};\n\n\n/**\n * We invoke require() in the context of a Domain so we can have multiple\n * sets of modules running separate from each other.\n * This contrasts with JSMs which are singletons, Domains allows us to\n * optionally load a CommonJS module twice with separate data each time.\n * Perhaps you want 2 command lines with a different set of commands in each,\n * for example.\n */\nfunction Domain() {\n  this.modules = {};\n  this._currentModule = null;\n}\n\n(function () {\n\n  /**\n   * Lookup module names and resolve them by calling the definition function if\n   * needed.\n   * There are 2 ways to call this, either with an array of dependencies and a\n   * callback to call when the dependencies are found (which can happen\n   * asynchronously in an in-page context) or with a single string an no callback\n   * where the dependency is resolved synchronously and returned.\n   * The API is designed to be compatible with the CommonJS AMD spec and\n   * RequireJS.\n   * @param {string[]|string} deps A name, or names for the payload\n   * @param {function|undefined} callback Function to call when the dependencies\n   * are resolved\n   * @return {undefined|object} The module required or undefined for\n   * array/callback method\n   */\n  Domain.prototype.require = function(deps, callback) {\n    if (Array.isArray(deps)) {\n      var params = deps.map(function(dep) {\n        return this.lookup(dep);\n      }, this);\n      if (callback) {\n        callback.apply(null, params);\n      }\n      return undefined;\n    }\n    else {\n      return this.lookup(deps);\n    }\n  };\n\n  function normalize(path) {\n    var bits = path.split('/');\n    var i = 1;\n    while (i < bits.length) {\n      if (bits[i] === '..') {\n        bits.splice(i-1, 1);\n      } else if (bits[i] === '.') {\n        bits.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    return bits.join('/');\n  }\n\n  function join(a, b) {\n    a = a.trim();\n    b = b.trim();\n    if (/^\\//.test(b)) {\n      return b;\n    } else {\n      return a.replace(/\\/*$/, '/') + b;\n    }\n  }\n\n  function dirname(path) {\n    var bits = path.split('/');\n    bits.pop();\n    return bits.join('/');\n  }\n\n  /**\n   * Lookup module names and resolve them by calling the definition function if\n   * needed.\n   * @param {string} moduleName A name for the payload to lookup\n   * @return {object} The module specified by aModuleName or null if not found.\n   */\n  Domain.prototype.lookup = function(moduleName) {\n    if (/^\\./.test(moduleName)) {\n      moduleName = normalize(join(dirname(this._currentModule), moduleName));\n    }\n\n    if (moduleName in this.modules) {\n      var module = this.modules[moduleName];\n      return module;\n    }\n\n    if (!(moduleName in define.modules)) {\n      throw new Error(\"Module not defined: \" + moduleName);\n    }\n\n    var module = define.modules[moduleName];\n\n    if (typeof module == \"function\") {\n      var exports = {};\n      var previousModule = this._currentModule;\n      this._currentModule = moduleName;\n      module(this.require.bind(this), exports, { id: moduleName, uri: \"\" });\n      this._currentModule = previousModule;\n      module = exports;\n    }\n\n    // cache the resulting module object for next time\n    this.modules[moduleName] = module;\n\n    return module;\n  };\n\n}());\n\ndefine.Domain = Domain;\ndefine.globalDomain = new Domain();\nvar require = define.globalDomain.require.bind(define.globalDomain);\n",
  "uglify-js/node_modules/source-map/build/suffix-browser.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n///////////////////////////////////////////////////////////////////////////////\n\nthis.sourceMap = {\n  SourceMapConsumer: require('source-map/source-map-consumer').SourceMapConsumer,\n  SourceMapGenerator: require('source-map/source-map-generator').SourceMapGenerator,\n  SourceNode: require('source-map/source-node').SourceNode\n};\n",
  "uglify-js/node_modules/source-map/build/test-prefix.js": "/*\n * WARNING!\n *\n * Do not edit this file directly, it is built from the sources at\n * https://github.com/mozilla/source-map/\n */\n\nComponents.utils.import('resource://test/Utils.jsm');\n",
  "uglify-js/node_modules/source-map/build/test-suffix.js": "function run_test() {\n  runSourceMapTests('{THIS_MODULE}', do_throw);\n}\n",
  "uglify-js/node_modules/source-map/lib/source-map.js": "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./source-map/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./source-map/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./source-map/source-node').SourceNode;\n",
  "uglify-js/node_modules/source-map/lib/source-map/array-set.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n\n  /**\n   * A data structure which is a combination of an array and a set. Adding a new\n   * member is O(1), testing for membership is O(1), and finding the index of an\n   * element is O(1). Removing elements from the set is not supported. Only\n   * strings are supported for membership.\n   */\n  function ArraySet() {\n    this._array = [];\n    this._set = {};\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   */\n  ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n    var set = new ArraySet();\n    for (var i = 0, len = aArray.length; i < len; i++) {\n      set.add(aArray[i], aAllowDuplicates);\n    }\n    return set;\n  };\n\n  /**\n   * Add the given string to this set.\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n    var isDuplicate = this.has(aStr);\n    var idx = this._array.length;\n    if (!isDuplicate || aAllowDuplicates) {\n      this._array.push(aStr);\n    }\n    if (!isDuplicate) {\n      this._set[util.toSetString(aStr)] = idx;\n    }\n  };\n\n  /**\n   * Is the given string a member of this set?\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.has = function ArraySet_has(aStr) {\n    return Object.prototype.hasOwnProperty.call(this._set,\n                                                util.toSetString(aStr));\n  };\n\n  /**\n   * What is the index of the given string in the array?\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n    if (this.has(aStr)) {\n      return this._set[util.toSetString(aStr)];\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.');\n  };\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param Number aIdx\n   */\n  ArraySet.prototype.at = function ArraySet_at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx];\n    }\n    throw new Error('No element indexed by ' + aIdx);\n  };\n\n  /**\n   * Returns the array representation of this set (which has the proper indices\n   * indicated by indexOf). Note that this is a copy of the internal array used\n   * for storing the members so that no one can mess with internal state.\n   */\n  ArraySet.prototype.toArray = function ArraySet_toArray() {\n    return this._array.slice();\n  };\n\n  exports.ArraySet = ArraySet;\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/base64-vlq.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64 = require('./base64');\n\n  // A single base 64 digit can contain 6 bits of data. For the base 64 variable\n  // length quantities we use in the source map spec, the first bit is the sign,\n  // the next four bits are the actual value, and the 6th bit is the\n  // continuation bit. The continuation bit tells us whether there are more\n  // digits in this value following this digit.\n  //\n  //   Continuation\n  //   |    Sign\n  //   |    |\n  //   V    V\n  //   101011\n\n  var VLQ_BASE_SHIFT = 5;\n\n  // binary: 100000\n  var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n  // binary: 011111\n  var VLQ_BASE_MASK = VLQ_BASE - 1;\n\n  // binary: 100000\n  var VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n  /**\n   * Converts from a two-complement value to a value where the sign bit is\n   * is placed in the least significant bit.  For example, as decimals:\n   *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n   *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n   */\n  function toVLQSigned(aValue) {\n    return aValue < 0\n      ? ((-aValue) << 1) + 1\n      : (aValue << 1) + 0;\n  }\n\n  /**\n   * Converts to a two-complement value from a value where the sign bit is\n   * is placed in the least significant bit.  For example, as decimals:\n   *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n   *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n   */\n  function fromVLQSigned(aValue) {\n    var isNegative = (aValue & 1) === 1;\n    var shifted = aValue >> 1;\n    return isNegative\n      ? -shifted\n      : shifted;\n  }\n\n  /**\n   * Returns the base 64 VLQ encoded value.\n   */\n  exports.encode = function base64VLQ_encode(aValue) {\n    var encoded = \"\";\n    var digit;\n\n    var vlq = toVLQSigned(aValue);\n\n    do {\n      digit = vlq & VLQ_BASE_MASK;\n      vlq >>>= VLQ_BASE_SHIFT;\n      if (vlq > 0) {\n        // There are still more digits in this value, so we must make sure the\n        // continuation bit is marked.\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      encoded += base64.encode(digit);\n    } while (vlq > 0);\n\n    return encoded;\n  };\n\n  /**\n   * Decodes the next base 64 VLQ value from the given string and returns the\n   * value and the rest of the string.\n   */\n  exports.decode = function base64VLQ_decode(aStr) {\n    var i = 0;\n    var strLen = aStr.length;\n    var result = 0;\n    var shift = 0;\n    var continuation, digit;\n\n    do {\n      if (i >= strLen) {\n        throw new Error(\"Expected more digits in base 64 VLQ value.\");\n      }\n      digit = base64.decode(aStr.charAt(i++));\n      continuation = !!(digit & VLQ_CONTINUATION_BIT);\n      digit &= VLQ_BASE_MASK;\n      result = result + (digit << shift);\n      shift += VLQ_BASE_SHIFT;\n    } while (continuation);\n\n    return {\n      value: fromVLQSigned(result),\n      rest: aStr.slice(i)\n    };\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/base64.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var charToIntMap = {};\n  var intToCharMap = {};\n\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    .split('')\n    .forEach(function (ch, index) {\n      charToIntMap[ch] = index;\n      intToCharMap[index] = ch;\n    });\n\n  /**\n   * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n   */\n  exports.encode = function base64_encode(aNumber) {\n    if (aNumber in intToCharMap) {\n      return intToCharMap[aNumber];\n    }\n    throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n  };\n\n  /**\n   * Decode a single base 64 digit to an integer.\n   */\n  exports.decode = function base64_decode(aChar) {\n    if (aChar in charToIntMap) {\n      return charToIntMap[aChar];\n    }\n    throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/binary-search.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  /**\n   * Recursive implementation of binary search.\n   *\n   * @param aLow Indices here and lower do not contain the needle.\n   * @param aHigh Indices here and higher do not contain the needle.\n   * @param aNeedle The element being searched for.\n   * @param aHaystack The non-empty array being searched.\n   * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n   */\n  function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare) {\n    // This function terminates when one of the following is true:\n    //\n    //   1. We find the exact element we are looking for.\n    //\n    //   2. We did not find the exact element, but we can return the next\n    //      closest element that is less than that element.\n    //\n    //   3. We did not find the exact element, and there is no next-closest\n    //      element which is less than the one we are searching for, so we\n    //      return null.\n    var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n    var cmp = aCompare(aNeedle, aHaystack[mid], true);\n    if (cmp === 0) {\n      // Found the element we are looking for.\n      return aHaystack[mid];\n    }\n    else if (cmp > 0) {\n      // aHaystack[mid] is greater than our needle.\n      if (aHigh - mid > 1) {\n        // The element is in the upper half.\n        return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare);\n      }\n      // We did not find an exact match, return the next closest one\n      // (termination case 2).\n      return aHaystack[mid];\n    }\n    else {\n      // aHaystack[mid] is less than our needle.\n      if (mid - aLow > 1) {\n        // The element is in the lower half.\n        return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare);\n      }\n      // The exact needle element was not found in this haystack. Determine if\n      // we are in termination case (2) or (3) and return the appropriate thing.\n      return aLow < 0\n        ? null\n        : aHaystack[aLow];\n    }\n  }\n\n  /**\n   * This is an implementation of binary search which will always try and return\n   * the next lowest value checked if there is no exact hit. This is because\n   * mappings between original and generated line/col pairs are single points,\n   * and there is an implicit region between each of them, so a miss just means\n   * that you aren't on the very start of a region.\n   *\n   * @param aNeedle The element you are looking for.\n   * @param aHaystack The array that is being searched.\n   * @param aCompare A function which takes the needle and an element in the\n   *     array and returns -1, 0, or 1 depending on whether the needle is less\n   *     than, equal to, or greater than the element, respectively.\n   */\n  exports.search = function search(aNeedle, aHaystack, aCompare) {\n    return aHaystack.length > 0\n      ? recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare)\n      : null;\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/source-map-consumer.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n\n  /**\n   * A SourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: Optional. The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  /**\n   * Create a SourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns SourceMapConsumer\n   */\n  SourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(SourceMapConsumer.prototype);\n\n      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      smc.__generatedMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByGeneratedPositions);\n      smc.__originalMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var mappingSeparator = /^[,;]/;\n      var str = aStr;\n      var mapping;\n      var temp;\n\n      while (str.length > 0) {\n        if (str.charAt(0) === ';') {\n          generatedLine++;\n          str = str.slice(1);\n          previousGeneratedColumn = 0;\n        }\n        else if (str.charAt(0) === ',') {\n          str = str.slice(1);\n        }\n        else {\n          mapping = {};\n          mapping.generatedLine = generatedLine;\n\n          // Generated column.\n          temp = base64VLQ.decode(str);\n          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n          previousGeneratedColumn = mapping.generatedColumn;\n          str = temp.rest;\n\n          if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n            // Original source.\n            temp = base64VLQ.decode(str);\n            mapping.source = this._sources.at(previousSource + temp.value);\n            previousSource += temp.value;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            // Original line.\n            temp = base64VLQ.decode(str);\n            mapping.originalLine = previousOriginalLine + temp.value;\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            // Original column.\n            temp = base64VLQ.decode(str);\n            mapping.originalColumn = previousOriginalColumn + temp.value;\n            previousOriginalColumn = mapping.originalColumn;\n            str = temp.rest;\n\n            if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n              // Original name.\n              temp = base64VLQ.decode(str);\n              mapping.name = this._names.at(previousName + temp.value);\n              previousName += temp.value;\n              str = temp.rest;\n            }\n          }\n\n          this.__generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            this.__originalMappings.push(mapping);\n          }\n        }\n      }\n\n      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n      this.__originalMappings.sort(util.compareByOriginalPositions);\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  SourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator);\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  SourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var mapping = this._findMapping(needle,\n                                      this._generatedMappings,\n                                      \"generatedLine\",\n                                      \"generatedColumn\",\n                                      util.compareByGeneratedPositions);\n\n      if (mapping && mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source && this.sourceRoot) {\n          source = util.join(this.sourceRoot, source);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: util.getArg(mapping, 'name', null)\n        };\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  SourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      if (this.sourceRoot) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n\n      var mapping = this._findMapping(needle,\n                                      this._originalMappings,\n                                      \"originalLine\",\n                                      \"originalColumn\",\n                                      util.compareByOriginalPositions);\n\n      if (mapping) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null)\n        };\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source;\n        if (source && sourceRoot) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name\n        };\n      }).forEach(aCallback, context);\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/source-map-generator.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = [];\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source) {\n          newMapping.source = mapping.source;\n          if (sourceRoot) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      this._validateMapping(generated, original, source, name);\n\n      if (source && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.push({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent !== null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (!aSourceFile) {\n        if (!aSourceMapConsumer.file) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        aSourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"aSourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot) {\n        aSourceFile = util.relative(sourceRoot, aSourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"aSourceFile\"\n      this._mappings.forEach(function (mapping) {\n        if (mapping.source === aSourceFile && mapping.originalLine) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source !== null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name !== null && mapping.name !== null) {\n              // Only use the identifier name if it's an identifier\n              // in both SourceMaps\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content) {\n          if (aSourceMapPath) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      // The mappings must be guaranteed to be in sorted order before we start\n      // serializing them or else the generated line numbers (which are defined\n      // via the ';' separators) will be all messed up. Note: it might be more\n      // performant to maintain the sorting as we insert them, rather than as we\n      // serialize them, but the big O is the same either way.\n      this._mappings.sort(util.compareByGeneratedPositions);\n\n      for (var i = 0, len = this._mappings.length; i < len; i++) {\n        mapping = this._mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositions(mapping, this._mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        file: this._file,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._sourceRoot) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this);\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/source-node.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\n  var util = require('./util');\n\n  // Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n  // operating systems these days (capturing the result).\n  var REGEX_NEWLINE = /(\\r?\\n)/g;\n\n  // Matches a Windows-style newline, or any character.\n  var REGEX_CHARACTER = /\\r\\n|[\\s\\S]/g;\n\n  /**\n   * SourceNodes provide a way to abstract over interpolating/concatenating\n   * snippets of generated JavaScript source code while maintaining the line and\n   * column information associated with the original source code.\n   *\n   * @param aLine The original line number.\n   * @param aColumn The original column number.\n   * @param aSource The original source's filename.\n   * @param aChunks Optional. An array of strings which are snippets of\n   *        generated JS, or other SourceNodes.\n   * @param aName The original identifier.\n   */\n  function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine === undefined ? null : aLine;\n    this.column = aColumn === undefined ? null : aColumn;\n    this.source = aSource === undefined ? null : aSource;\n    this.name = aName === undefined ? null : aName;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   */\n  SourceNode.fromStringWithSourceMap =\n    function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer) {\n      // The SourceNode we want to fill with the generated code\n      // and the SourceMap\n      var node = new SourceNode();\n\n      // All even indices of this array are one line of the generated code,\n      // while all odd indices are the newlines between two adjacent lines\n      // (since `REGEX_NEWLINE` captures its match).\n      // Processed fragments are removed from this array, by calling `shiftNextLine`.\n      var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n      var shiftNextLine = function() {\n        var lineContents = remainingLines.shift();\n        // The last line of a file might not have a newline.\n        var newLine = remainingLines.shift() || \"\";\n        return lineContents + newLine;\n      };\n\n      // We need to remember the position of \"remainingLines\"\n      var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n      // The generate SourceNodes we need a code range.\n      // To extract it current and last mapping is used.\n      // Here we store the last mapping.\n      var lastMapping = null;\n\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        if (lastMapping !== null) {\n          // We add the code from \"lastMapping\" to \"mapping\":\n          // First check if there is a new line in between.\n          if (lastGeneratedLine < mapping.generatedLine) {\n            var code = \"\";\n            // Associate first line with \"lastMapping\"\n            addMappingWithCode(lastMapping, shiftNextLine());\n            lastGeneratedLine++;\n            lastGeneratedColumn = 0;\n            // The remaining code is added without mapping\n          } else {\n            // There is no new line in between.\n            // Associate the code between \"lastGeneratedColumn\" and\n            // \"mapping.generatedColumn\" with \"lastMapping\"\n            var nextLine = remainingLines[0];\n            var code = nextLine.substr(0, mapping.generatedColumn -\n                                          lastGeneratedColumn);\n            remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                                lastGeneratedColumn);\n            lastGeneratedColumn = mapping.generatedColumn;\n            addMappingWithCode(lastMapping, code);\n            // No more remaining code, continue\n            lastMapping = mapping;\n            return;\n          }\n        }\n        // We add the generated code until the first mapping\n        // to the SourceNode without any mapping.\n        // Each line is added as separate string.\n        while (lastGeneratedLine < mapping.generatedLine) {\n          node.add(shiftNextLine());\n          lastGeneratedLine++;\n        }\n        if (lastGeneratedColumn < mapping.generatedColumn) {\n          var nextLine = remainingLines[0];\n          node.add(nextLine.substr(0, mapping.generatedColumn));\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n        }\n        lastMapping = mapping;\n      }, this);\n      // We have processed all mappings.\n      if (remainingLines.length > 0) {\n        if (lastMapping) {\n          // Associate the remaining code in the current line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n        }\n        // and add the remaining lines without any mapping\n        node.add(remainingLines.join(\"\"));\n      }\n\n      // Copy sourcesContent into SourceNode\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content) {\n          node.setSourceContent(sourceFile, content);\n        }\n      });\n\n      return node;\n\n      function addMappingWithCode(mapping, code) {\n        if (mapping === null || mapping.source === undefined) {\n          node.add(code);\n        } else {\n          node.add(new SourceNode(mapping.originalLine,\n                                  mapping.originalColumn,\n                                  mapping.source,\n                                  code,\n                                  mapping.name));\n        }\n      }\n    };\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.add = function SourceNode_add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function (chunk) {\n        this.add(chunk);\n      }, this);\n    }\n    else if (aChunk instanceof SourceNode || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (var i = aChunk.length-1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    }\n    else if (aChunk instanceof SourceNode || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walk = function SourceNode_walk(aFn) {\n    var chunk;\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk instanceof SourceNode) {\n        chunk.walk(aFn);\n      }\n      else {\n        if (chunk !== '') {\n          aFn(chunk, { source: this.source,\n                       line: this.line,\n                       column: this.column,\n                       name: this.name });\n        }\n      }\n    }\n  };\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  SourceNode.prototype.join = function SourceNode_join(aSep) {\n    var newChildren;\n    var i;\n    var len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len-1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  };\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n    var lastChild = this.children[this.children.length - 1];\n    if (lastChild instanceof SourceNode) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    }\n    else if (typeof lastChild === 'string') {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    }\n    else {\n      this.children.push(''.replace(aPattern, aReplacement));\n    }\n    return this;\n  };\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  SourceNode.prototype.setSourceContent =\n    function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n    };\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walkSourceContents =\n    function SourceNode_walkSourceContents(aFn) {\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        if (this.children[i] instanceof SourceNode) {\n          this.children[i].walkSourceContents(aFn);\n        }\n      }\n\n      var sources = Object.keys(this.sourceContents);\n      for (var i = 0, len = sources.length; i < len; i++) {\n        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n      }\n    };\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  SourceNode.prototype.toString = function SourceNode_toString() {\n    var str = \"\";\n    this.walk(function (chunk) {\n      str += chunk;\n    });\n    return str;\n  };\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n    var generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    var map = new SourceMapGenerator(aArgs);\n    var sourceMappingActive = false;\n    var lastOriginalSource = null;\n    var lastOriginalLine = null;\n    var lastOriginalColumn = null;\n    var lastOriginalName = null;\n    this.walk(function (chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if(lastOriginalSource !== original.source\n           || lastOriginalLine !== original.line\n           || lastOriginalColumn !== original.column\n           || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      chunk.match(REGEX_CHARACTER).forEach(function (ch, idx, array) {\n        if (REGEX_NEWLINE.test(ch)) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === array.length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column += ch.length;\n        }\n      });\n    });\n    this.walkSourceContents(function (sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map: map };\n  };\n\n  exports.SourceNode = SourceNode;\n\n});\n",
  "uglify-js/node_modules/source-map/lib/source-map/util.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  /**\n   * This is a helper function for getting values from parameter/options\n   * objects.\n   *\n   * @param args The object we are extracting values from\n   * @param name The name of the property we are getting.\n   * @param defaultValue An optional value to return if the property is missing\n   * from the object. If this is not specified and the property is missing, an\n   * error will be thrown.\n   */\n  function getArg(aArgs, aName, aDefaultValue) {\n    if (aName in aArgs) {\n      return aArgs[aName];\n    } else if (arguments.length === 3) {\n      return aDefaultValue;\n    } else {\n      throw new Error('\"' + aName + '\" is a required argument.');\n    }\n  }\n  exports.getArg = getArg;\n\n  var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n  var dataUrlRegexp = /^data:.+\\,.+$/;\n\n  function urlParse(aUrl) {\n    var match = aUrl.match(urlRegexp);\n    if (!match) {\n      return null;\n    }\n    return {\n      scheme: match[1],\n      auth: match[2],\n      host: match[3],\n      port: match[4],\n      path: match[5]\n    };\n  }\n  exports.urlParse = urlParse;\n\n  function urlGenerate(aParsedUrl) {\n    var url = '';\n    if (aParsedUrl.scheme) {\n      url += aParsedUrl.scheme + ':';\n    }\n    url += '//';\n    if (aParsedUrl.auth) {\n      url += aParsedUrl.auth + '@';\n    }\n    if (aParsedUrl.host) {\n      url += aParsedUrl.host;\n    }\n    if (aParsedUrl.port) {\n      url += \":\" + aParsedUrl.port\n    }\n    if (aParsedUrl.path) {\n      url += aParsedUrl.path;\n    }\n    return url;\n  }\n  exports.urlGenerate = urlGenerate;\n\n  /**\n   * Normalizes a path, or the path portion of a URL:\n   *\n   * - Replaces consequtive slashes with one slash.\n   * - Removes unnecessary '.' parts.\n   * - Removes unnecessary '<dir>/..' parts.\n   *\n   * Based on code in the Node.js 'path' core module.\n   *\n   * @param aPath The path or url to normalize.\n   */\n  function normalize(aPath) {\n    var path = aPath;\n    var url = urlParse(aPath);\n    if (url) {\n      if (!url.path) {\n        return aPath;\n      }\n      path = url.path;\n    }\n    var isAbsolute = (path.charAt(0) === '/');\n\n    var parts = path.split(/\\/+/);\n    for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n      part = parts[i];\n      if (part === '.') {\n        parts.splice(i, 1);\n      } else if (part === '..') {\n        up++;\n      } else if (up > 0) {\n        if (part === '') {\n          // The first part is blank if the path is absolute. Trying to go\n          // above the root is a no-op. Therefore we can remove all '..' parts\n          // directly after the root.\n          parts.splice(i + 1, up);\n          up = 0;\n        } else {\n          parts.splice(i, 2);\n          up--;\n        }\n      }\n    }\n    path = parts.join('/');\n\n    if (path === '') {\n      path = isAbsolute ? '/' : '.';\n    }\n\n    if (url) {\n      url.path = path;\n      return urlGenerate(url);\n    }\n    return path;\n  }\n  exports.normalize = normalize;\n\n  /**\n   * Joins two paths/URLs.\n   *\n   * @param aRoot The root path or URL.\n   * @param aPath The path or URL to be joined with the root.\n   *\n   * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n   *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n   *   first.\n   * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n   *   is updated with the result and aRoot is returned. Otherwise the result\n   *   is returned.\n   *   - If aPath is absolute, the result is aPath.\n   *   - Otherwise the two paths are joined with a slash.\n   * - Joining for example 'http://' and 'www.example.com' is also supported.\n   */\n  function join(aRoot, aPath) {\n    var aPathUrl = urlParse(aPath);\n    var aRootUrl = urlParse(aRoot);\n    if (aRootUrl) {\n      aRoot = aRootUrl.path || '/';\n    }\n\n    // `join(foo, '//www.example.org')`\n    if (aPathUrl && !aPathUrl.scheme) {\n      if (aRootUrl) {\n        aPathUrl.scheme = aRootUrl.scheme;\n      }\n      return urlGenerate(aPathUrl);\n    }\n\n    if (aPathUrl || aPath.match(dataUrlRegexp)) {\n      return aPath;\n    }\n\n    // `join('http://', 'www.example.com')`\n    if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n      aRootUrl.host = aPath;\n      return urlGenerate(aRootUrl);\n    }\n\n    var joined = aPath.charAt(0) === '/'\n      ? aPath\n      : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n    if (aRootUrl) {\n      aRootUrl.path = joined;\n      return urlGenerate(aRootUrl);\n    }\n    return joined;\n  }\n  exports.join = join;\n\n  /**\n   * Because behavior goes wacky when you set `__proto__` on objects, we\n   * have to prefix all the strings in our set with an arbitrary character.\n   *\n   * See https://github.com/mozilla/source-map/pull/31 and\n   * https://github.com/mozilla/source-map/issues/30\n   *\n   * @param String aStr\n   */\n  function toSetString(aStr) {\n    return '$' + aStr;\n  }\n  exports.toSetString = toSetString;\n\n  function fromSetString(aStr) {\n    return aStr.substr(1);\n  }\n  exports.fromSetString = fromSetString;\n\n  function relative(aRoot, aPath) {\n    aRoot = aRoot.replace(/\\/$/, '');\n\n    var url = urlParse(aRoot);\n    if (aPath.charAt(0) == \"/\" && url && url.path == \"/\") {\n      return aPath.slice(1);\n    }\n\n    return aPath.indexOf(aRoot + '/') === 0\n      ? aPath.substr(aRoot.length + 1)\n      : aPath;\n  }\n  exports.relative = relative;\n\n  function strcmp(aStr1, aStr2) {\n    var s1 = aStr1 || \"\";\n    var s2 = aStr2 || \"\";\n    return (s1 > s2) - (s1 < s2);\n  }\n\n  /**\n   * Comparator between two mappings where the original positions are compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same original source/line/column, but different generated\n   * line and column the same. Useful when searching for a mapping with a\n   * stubbed out mapping.\n   */\n  function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n    var cmp;\n\n    cmp = strcmp(mappingA.source, mappingB.source);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp || onlyCompareOriginal) {\n      return cmp;\n    }\n\n    cmp = strcmp(mappingA.name, mappingB.name);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    return mappingA.generatedColumn - mappingB.generatedColumn;\n  };\n  exports.compareByOriginalPositions = compareByOriginalPositions;\n\n  /**\n   * Comparator between two mappings where the generated positions are\n   * compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same generated line and column, but different\n   * source/name/original line and column the same. Useful when searching for a\n   * mapping with a stubbed out mapping.\n   */\n  function compareByGeneratedPositions(mappingA, mappingB, onlyCompareGenerated) {\n    var cmp;\n\n    cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n    if (cmp || onlyCompareGenerated) {\n      return cmp;\n    }\n\n    cmp = strcmp(mappingA.source, mappingB.source);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp) {\n      return cmp;\n    }\n\n    return strcmp(mappingA.name, mappingB.name);\n  };\n  exports.compareByGeneratedPositions = compareByGeneratedPositions;\n\n});\n",
  "uglify-js/node_modules/source-map/Makefile.dryice.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nvar path = require('path');\nvar fs = require('fs');\nvar copy = require('dryice').copy;\n\nfunction removeAmdefine(src) {\n  src = String(src).replace(\n    /if\\s*\\(typeof\\s*define\\s*!==\\s*'function'\\)\\s*{\\s*var\\s*define\\s*=\\s*require\\('amdefine'\\)\\(module,\\s*require\\);\\s*}\\s*/g,\n    '');\n  src = src.replace(\n    /\\b(define\\(.*)('amdefine',?)/gm,\n    '$1');\n  return src;\n}\nremoveAmdefine.onRead = true;\n\nfunction makeNonRelative(src) {\n  return src\n    .replace(/require\\('.\\//g, 'require(\\'source-map/')\n    .replace(/\\.\\.\\/\\.\\.\\/lib\\//g, '');\n}\nmakeNonRelative.onRead = true;\n\nfunction buildBrowser() {\n  console.log('\\nCreating dist/source-map.js');\n\n  var project = copy.createCommonJsProject({\n    roots: [ path.join(__dirname, 'lib') ]\n  });\n\n  copy({\n    source: [\n      'build/mini-require.js',\n      {\n        project: project,\n        require: [ 'source-map/source-map-generator',\n                   'source-map/source-map-consumer',\n                   'source-map/source-node']\n      },\n      'build/suffix-browser.js'\n    ],\n    filter: [\n      copy.filter.moduleDefines,\n      removeAmdefine\n    ],\n    dest: 'dist/source-map.js'\n  });\n}\n\nfunction buildBrowserMin() {\n  console.log('\\nCreating dist/source-map.min.js');\n\n  copy({\n    source: 'dist/source-map.js',\n    filter: copy.filter.uglifyjs,\n    dest: 'dist/source-map.min.js'\n  });\n}\n\nfunction buildFirefox() {\n  console.log('\\nCreating dist/SourceMap.jsm');\n\n  var project = copy.createCommonJsProject({\n    roots: [ path.join(__dirname, 'lib') ]\n  });\n\n  copy({\n    source: [\n      'build/prefix-source-map.jsm',\n      {\n        project: project,\n        require: [ 'source-map/source-map-consumer',\n                   'source-map/source-map-generator',\n                   'source-map/source-node' ]\n      },\n      'build/suffix-source-map.jsm'\n    ],\n    filter: [\n      copy.filter.moduleDefines,\n      removeAmdefine,\n      makeNonRelative\n    ],\n    dest: 'dist/SourceMap.jsm'\n  });\n\n  // Create dist/test/Utils.jsm\n  console.log('\\nCreating dist/test/Utils.jsm');\n\n  project = copy.createCommonJsProject({\n    roots: [ __dirname, path.join(__dirname, 'lib') ]\n  });\n\n  copy({\n    source: [\n      'build/prefix-utils.jsm',\n      'build/assert-shim.js',\n      {\n        project: project,\n        require: [ 'test/source-map/util' ]\n      },\n      'build/suffix-utils.jsm'\n    ],\n    filter: [\n      copy.filter.moduleDefines,\n      removeAmdefine,\n      makeNonRelative\n    ],\n    dest: 'dist/test/Utils.jsm'\n  });\n\n  function isTestFile(f) {\n    return /^test\\-.*?\\.js/.test(f);\n  }\n\n  var testFiles = fs.readdirSync(path.join(__dirname, 'test', 'source-map')).filter(isTestFile);\n\n  testFiles.forEach(function (testFile) {\n    console.log('\\nCreating', path.join('dist', 'test', testFile.replace(/\\-/g, '_')));\n\n    copy({\n      source: [\n        'build/test-prefix.js',\n        path.join('test', 'source-map', testFile),\n        'build/test-suffix.js'\n      ],\n      filter: [\n        removeAmdefine,\n        makeNonRelative,\n        function (input, source) {\n          return input.replace('define(',\n                               'define(\"'\n                               + path.join('test', 'source-map', testFile.replace(/\\.js$/, ''))\n                               + '\", [\"require\", \"exports\", \"module\"], ');\n        },\n        function (input, source) {\n          return input.replace('{THIS_MODULE}', function () {\n            return \"test/source-map/\" + testFile.replace(/\\.js$/, '');\n          });\n        }\n      ],\n      dest: path.join('dist', 'test', testFile.replace(/\\-/g, '_'))\n    });\n  });\n}\n\nfunction ensureDir(name) {\n  var dirExists = false;\n  try {\n    dirExists = fs.statSync(name).isDirectory();\n  } catch (err) {}\n\n  if (!dirExists) {\n    fs.mkdirSync(name, 0777);\n  }\n}\n\nensureDir(\"dist\");\nensureDir(\"dist/test\");\nbuildFirefox();\nbuildBrowser();\nbuildBrowserMin();\n",
  "uglify-js/node_modules/source-map/node_modules/amdefine/amdefine.js": "/** vim: et:ts=4:sw=4:sts=4\n * @license amdefine 0.1.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/amdefine for details\n */\n\n/*jslint node: true */\n/*global module, process */\n'use strict';\n\n/**\n * Creates a define for node.\n * @param {Object} module the \"module\" object that is defined by Node for the\n * current module.\n * @param {Function} [requireFn]. Node's require function for the current module.\n * It only needs to be passed in Node versions before 0.5, when module.require\n * did not exist.\n * @returns {Function} a define function that is usable for the current node\n * module.\n */\nfunction amdefine(module, requireFn) {\n    'use strict';\n    var defineCache = {},\n        loaderCache = {},\n        alreadyCalled = false,\n        path = require('path'),\n        makeRequire, stringRequire;\n\n    /**\n     * Trims the . and .. from an array of path segments.\n     * It will keep a leading path segment if a .. will become\n     * the first path segment, to help with module name lookups,\n     * which act like paths, but can be remapped. But the end result,\n     * all paths that use this function should look normalized.\n     * NOTE: this method MODIFIES the input array.\n     * @param {Array} ary the array of path segments.\n     */\n    function trimDots(ary) {\n        var i, part;\n        for (i = 0; ary[i]; i+= 1) {\n            part = ary[i];\n            if (part === '.') {\n                ary.splice(i, 1);\n                i -= 1;\n            } else if (part === '..') {\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                    //End of the line. Keep at least one non-dot\n                    //path segment at the front so it can be mapped\n                    //correctly to disk. Otherwise, there is likely\n                    //no path mapping for a path starting with '..'.\n                    //This can still fail, but catches the most reasonable\n                    //uses of ..\n                    break;\n                } else if (i > 0) {\n                    ary.splice(i - 1, 2);\n                    i -= 2;\n                }\n            }\n        }\n    }\n\n    function normalize(name, baseName) {\n        var baseParts;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                baseParts = baseName.split('/');\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                baseParts = baseParts.concat(name.split('/'));\n                trimDots(baseParts);\n                name = baseParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    /**\n     * Create the normalize() function passed to a loader plugin's\n     * normalize method.\n     */\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(id) {\n        function load(value) {\n            loaderCache[id] = value;\n        }\n\n        load.fromText = function (id, text) {\n            //This one is difficult because the text can/probably uses\n            //define, and any relative paths and requires should be relative\n            //to that id was it would be found on disk. But this would require\n            //bootstrapping a module/require fairly deeply from node core.\n            //Not sure how best to go about that yet.\n            throw new Error('amdefine does not implement load.fromText');\n        };\n\n        return load;\n    }\n\n    makeRequire = function (systemRequire, exports, module, relId) {\n        function amdRequire(deps, callback) {\n            if (typeof deps === 'string') {\n                //Synchronous, single module require('')\n                return stringRequire(systemRequire, exports, module, deps, relId);\n            } else {\n                //Array of dependencies with a callback.\n\n                //Convert the dependencies to modules.\n                deps = deps.map(function (depName) {\n                    return stringRequire(systemRequire, exports, module, depName, relId);\n                });\n\n                //Wait for next tick to call back the require call.\n                process.nextTick(function () {\n                    callback.apply(null, deps);\n                });\n            }\n        }\n\n        amdRequire.toUrl = function (filePath) {\n            if (filePath.indexOf('.') === 0) {\n                return normalize(filePath, path.dirname(module.filename));\n            } else {\n                return filePath;\n            }\n        };\n\n        return amdRequire;\n    };\n\n    //Favor explicit value, passed in if the module wants to support Node 0.4.\n    requireFn = requireFn || function req() {\n        return module.require.apply(module, arguments);\n    };\n\n    function runFactory(id, deps, factory) {\n        var r, e, m, result;\n\n        if (id) {\n            e = loaderCache[id] = {};\n            m = {\n                id: id,\n                uri: __filename,\n                exports: e\n            };\n            r = makeRequire(requireFn, e, m, id);\n        } else {\n            //Only support one define call per file\n            if (alreadyCalled) {\n                throw new Error('amdefine with no module ID cannot be called more than once per file.');\n            }\n            alreadyCalled = true;\n\n            //Use the real variables from node\n            //Use module.exports for exports, since\n            //the exports in here is amdefine exports.\n            e = module.exports;\n            m = module;\n            r = makeRequire(requireFn, e, m, module.id);\n        }\n\n        //If there are dependencies, they are strings, so need\n        //to convert them to dependency values.\n        if (deps) {\n            deps = deps.map(function (depName) {\n                return r(depName);\n            });\n        }\n\n        //Call the factory with the right dependencies.\n        if (typeof factory === 'function') {\n            result = factory.apply(m.exports, deps);\n        } else {\n            result = factory;\n        }\n\n        if (result !== undefined) {\n            m.exports = result;\n            if (id) {\n                loaderCache[id] = m.exports;\n            }\n        }\n    }\n\n    stringRequire = function (systemRequire, exports, module, id, relId) {\n        //Split the ID by a ! so that\n        var index = id.indexOf('!'),\n            originalId = id,\n            prefix, plugin;\n\n        if (index === -1) {\n            id = normalize(id, relId);\n\n            //Straight module lookup. If it is one of the special dependencies,\n            //deal with it, otherwise, delegate to node.\n            if (id === 'require') {\n                return makeRequire(systemRequire, exports, module, relId);\n            } else if (id === 'exports') {\n                return exports;\n            } else if (id === 'module') {\n                return module;\n            } else if (loaderCache.hasOwnProperty(id)) {\n                return loaderCache[id];\n            } else if (defineCache[id]) {\n                runFactory.apply(null, defineCache[id]);\n                return loaderCache[id];\n            } else {\n                if(systemRequire) {\n                    return systemRequire(originalId);\n                } else {\n                    throw new Error('No module with ID: ' + id);\n                }\n            }\n        } else {\n            //There is a plugin in play.\n            prefix = id.substring(0, index);\n            id = id.substring(index + 1, id.length);\n\n            plugin = stringRequire(systemRequire, exports, module, prefix, relId);\n\n            if (plugin.normalize) {\n                id = plugin.normalize(id, makeNormalize(relId));\n            } else {\n                //Normalize the ID normally.\n                id = normalize(id, relId);\n            }\n\n            if (loaderCache[id]) {\n                return loaderCache[id];\n            } else {\n                plugin.load(id, makeRequire(systemRequire, exports, module, relId), makeLoad(id), {});\n\n                return loaderCache[id];\n            }\n        }\n    };\n\n    //Create a define function specific to the module asking for amdefine.\n    function define(id, deps, factory) {\n        if (Array.isArray(id)) {\n            factory = deps;\n            deps = id;\n            id = undefined;\n        } else if (typeof id !== 'string') {\n            factory = id;\n            id = deps = undefined;\n        }\n\n        if (deps && !Array.isArray(deps)) {\n            factory = deps;\n            deps = undefined;\n        }\n\n        if (!deps) {\n            deps = ['require', 'exports', 'module'];\n        }\n\n        //Set up properties for this module. If an ID, then use\n        //internal cache. If no ID, then use the external variables\n        //for this node module.\n        if (id) {\n            //Put the module in deep freeze until there is a\n            //require call for it.\n            defineCache[id] = [id, deps, factory];\n        } else {\n            runFactory(id, deps, factory);\n        }\n    }\n\n    //define.require, which has access to all the values in the\n    //cache. Useful for AMD modules that all have IDs in the file,\n    //but need to finally export a value to node based on one of those\n    //IDs.\n    define.require = function (id) {\n        if (loaderCache[id]) {\n            return loaderCache[id];\n        }\n\n        if (defineCache[id]) {\n            runFactory.apply(null, defineCache[id]);\n            return loaderCache[id];\n        }\n    };\n\n    define.amd = {};\n\n    return define;\n}\n\nmodule.exports = amdefine;\n",
  "uglify-js/node_modules/source-map/node_modules/amdefine/intercept.js": "/*jshint node: true */\nvar inserted,\n    Module = require('module'),\n    fs = require('fs'),\n    existingExtFn = Module._extensions['.js'],\n    amdefineRegExp = /amdefine\\.js/;\n\ninserted  = \"if (typeof define !== 'function') {var define = require('amdefine')(module)}\";\n\n//From the node/lib/module.js source:\nfunction stripBOM(content) {\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xFEFF) {\n        content = content.slice(1);\n    }\n    return content;\n}\n\n//Also adapted from the node/lib/module.js source:\nfunction intercept(module, filename) {\n    var content = stripBOM(fs.readFileSync(filename, 'utf8'));\n\n    if (!amdefineRegExp.test(module.id)) {\n        content = inserted + content;\n    }\n\n    module._compile(content, filename);\n}\n\nintercept._id = 'amdefine/intercept';\n\nif (!existingExtFn._id || existingExtFn._id !== intercept._id) {\n    Module._extensions['.js'] = intercept;\n}\n",
  "uglify-js/node_modules/source-map/node_modules/amdefine/package.json": "{\n  \"name\": \"amdefine\",\n  \"description\": \"Provide AMD's define() API for declaring modules in the AMD format\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"http://github.com/jrburke/amdefine\",\n  \"author\": {\n    \"name\": \"James Burke\",\n    \"email\": \"jrburke@gmail.com\",\n    \"url\": \"http://github.com/jrburke\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"BSD\",\n      \"url\": \"https://github.com/jrburke/amdefine/blob/master/LICENSE\"\n    },\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/jrburke/amdefine/blob/master/LICENSE\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/jrburke/amdefine.git\"\n  },\n  \"main\": \"./amdefine.js\",\n  \"engines\": {\n    \"node\": \">=0.4.2\"\n  },\n  \"readme\": \"# amdefine\\n\\nA module that can be used to implement AMD's define() in Node. This allows you\\nto code to the AMD API and have the module work in node programs without\\nrequiring those other programs to use AMD.\\n\\n## Usage\\n\\n**1)** Update your package.json to indicate amdefine as a dependency:\\n\\n```javascript\\n    \\\"dependencies\\\": {\\n        \\\"amdefine\\\": \\\">=0.1.0\\\"\\n    }\\n```\\n\\nThen run `npm install` to get amdefine into your project.\\n\\n**2)** At the top of each module that uses define(), place this code:\\n\\n```javascript\\nif (typeof define !== 'function') { var define = require('amdefine')(module) }\\n```\\n\\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\\n\\nYou can add spaces, line breaks and even require amdefine with a local path, but\\nkeep the rest of the structure to get the stripping behavior.\\n\\nAs you may know, because `if` statements in JavaScript don't have their own scope, the var\\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\\nRequireJS is loaded then the declaration is superfluous because `define` is already already\\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\\ndeclarations of the same variable in the same scope gracefully.\\n\\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\\nwith npm, then just download the latest release and refer to it using a relative path:\\n\\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\\n\\n### amdefine/intercept\\n\\nConsider this very experimental.\\n\\nInstead of pasting the piece of text for the amdefine setup of a `define`\\nvariable in each module you create or consume, you can use `amdefine/intercept`\\ninstead. It will automatically insert the above snippet in each .js file loaded\\nby Node.\\n\\n**Warning**: you should only use this if you are creating an application that\\nis consuming AMD style defined()'d modules that are distributed via npm and want\\nto run that code in Node.\\n\\nFor library code where you are not sure if it will be used by others in Node or\\nin the browser, then explicitly depending on amdefine and placing the code\\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\\nintercept module affects all .js files loaded in the Node app, and it is\\ninconsiderate to modify global state like that unless you are also controlling\\nthe top level app.\\n\\n#### Why distribute AMD-style nodes via npm?\\n\\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\\nshould have better support for the `baseUrl + moduleID + '.js' style of loading,\\nsingle file JS installs), but some people want a JS package manager and are\\nwilling to live with those constraints. If that is you, but still want to author\\nin AMD style modules to get dynamic require([]), better direct source usage and\\npowerful loader plugin support in the browser, then this tool can help.\\n\\n#### amdefine/intercept usage\\n\\nJust require it in your top level app module (for example index.js, server.js):\\n\\n```javascript\\nrequire('amdefine/intercept');\\n```\\n\\nThe module does not return a value, so no need to assign the result to a local\\nvariable.\\n\\nThen just require() code as you normally would with Node's require(). Any .js\\nloaded after the intercept require will have the amdefine check injected in\\nthe .js source as it is loaded. It does not modify the source on disk, just\\nprepends some content to the text of the module as it is loaded by Node.\\n\\n#### How amdefine/intercept works\\n\\nIt overrides the `Module._extensions['.js']` in Node to automatically prepend\\nthe amdefine snippet above. So, it will affect any .js file loaded by your\\napp.\\n\\n## define() usage\\n\\nIt is best if you use the anonymous forms of define() in your module:\\n\\n```javascript\\ndefine(function (require) {\\n    var dependency = require('dependency');\\n});\\n```\\n\\nor\\n\\n```javascript\\ndefine(['dependency'], function (dependency) {\\n\\n});\\n```\\n\\n## RequireJS optimizer integration. <a name=\\\"optimizer\\\"></name>\\n\\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\\nwill have support for stripping the `if (typeof define !== 'function')` check\\nmentioned above, so you can include this snippet for code that runs in the\\nbrowser, but avoid taking the cost of the if() statement once the code is\\noptimized for deployment.\\n\\n## Node 0.4 Support\\n\\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\\n\\n```javascript\\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\\nif (typeof define !== 'function') { var define = require('amdefine')(module, require) }\\n```\\n\\n## Limitations\\n\\n### Synchronous vs Asynchronous\\n\\namdefine creates a define() function that is callable by your code. It will\\nexecute and trace dependencies and call the factory function *synchronously*,\\nto keep the behavior in line with Node's synchronous dependency tracing.\\n\\nThe exception: calling AMD's callback-style require() from inside a factory\\nfunction. The require callback is called on process.nextTick():\\n\\n```javascript\\ndefine(function (require) {\\n    require(['a'], function(a) {\\n        //'a' is loaded synchronously, but\\n        //this callback is called on process.nextTick().\\n    });\\n});\\n```\\n\\n### Loader Plugins\\n\\nLoader plugins are supported as long as they call their load() callbacks\\nsynchronously. So ones that do network requests will not work. However plugins\\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\\n\\nThe plugin API's `load.fromText()` is **not supported** in amdefine, so this means\\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\\nwill not work. This may be fixable, but it is a bit complex, and I do not have\\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\\nto get an idea of the issues involved.\\n\\n## Tests\\n\\nTo run the tests, cd to **tests** and run:\\n\\n```\\nnode all.js\\nnode all-intercept.js\\n```\\n\\n## License\\n\\nNew BSD and MIT. Check the LICENSE file for all the details.\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"bugs\": {\n    \"url\": \"https://github.com/jrburke/amdefine/issues\"\n  },\n  \"_id\": \"amdefine@0.1.0\",\n  \"dist\": {\n    \"shasum\": \"3ca9735cf1dde0edf7a4bf6641709c8024f9b227\",\n    \"tarball\": \"http://registry.npmjs.org/amdefine/-/amdefine-0.1.0.tgz\"\n  },\n  \"_from\": \"amdefine@>=0.0.4\",\n  \"_npmVersion\": \"1.3.8\",\n  \"_npmUser\": {\n    \"name\": \"jrburke\",\n    \"email\": \"jrburke@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jrburke\",\n      \"email\": \"jrburke@gmail.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"3ca9735cf1dde0edf7a4bf6641709c8024f9b227\",\n  \"_resolved\": \"https://registry.npmjs.org/amdefine/-/amdefine-0.1.0.tgz\"\n}\n",
  "uglify-js/node_modules/source-map/package.json": "{\n  \"name\": \"source-map\",\n  \"description\": \"Generates and consumes source maps\",\n  \"version\": \"0.1.34\",\n  \"homepage\": \"https://github.com/mozilla/source-map\",\n  \"author\": {\n    \"name\": \"Nick Fitzgerald\",\n    \"email\": \"nfitzgerald@mozilla.com\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Tobias Koppers\",\n      \"email\": \"tobias.koppers@googlemail.com\"\n    },\n    {\n      \"name\": \"Duncan Beevers\",\n      \"email\": \"duncan@dweebd.com\"\n    },\n    {\n      \"name\": \"Stephen Crane\",\n      \"email\": \"scrane@mozilla.com\"\n    },\n    {\n      \"name\": \"Ryan Seddon\",\n      \"email\": \"seddon.ryan@gmail.com\"\n    },\n    {\n      \"name\": \"Miles Elam\",\n      \"email\": \"miles.elam@deem.com\"\n    },\n    {\n      \"name\": \"Mihai Bazon\",\n      \"email\": \"mihai.bazon@gmail.com\"\n    },\n    {\n      \"name\": \"Michael Ficarra\",\n      \"email\": \"github.public.email@michael.ficarra.me\"\n    },\n    {\n      \"name\": \"Todd Wolfson\",\n      \"email\": \"todd@twolfson.com\"\n    },\n    {\n      \"name\": \"Alexander Solovyov\",\n      \"email\": \"alexander@solovyov.net\"\n    },\n    {\n      \"name\": \"Felix Gnass\",\n      \"email\": \"fgnass@gmail.com\"\n    },\n    {\n      \"name\": \"Conrad Irwin\",\n      \"email\": \"conrad.irwin@gmail.com\"\n    },\n    {\n      \"name\": \"usrbincc\",\n      \"email\": \"usrbincc@yahoo.com\"\n    },\n    {\n      \"name\": \"David Glasser\",\n      \"email\": \"glasser@davidglasser.net\"\n    },\n    {\n      \"name\": \"Chase Douglas\",\n      \"email\": \"chase@newrelic.com\"\n    },\n    {\n      \"name\": \"Evan Wallace\",\n      \"email\": \"evan.exe@gmail.com\"\n    },\n    {\n      \"name\": \"Heather Arthur\",\n      \"email\": \"fayearthur@gmail.com\"\n    },\n    {\n      \"name\": \"Hugh Kennedy\",\n      \"email\": \"hughskennedy@gmail.com\"\n    },\n    {\n      \"name\": \"David Glasser\",\n      \"email\": \"glasser@davidglasser.net\"\n    },\n    {\n      \"name\": \"Simon Lydell\",\n      \"email\": \"simon.lydell@gmail.com\"\n    },\n    {\n      \"name\": \"Jmeas Smith\",\n      \"email\": \"jellyes2@gmail.com\"\n    },\n    {\n      \"name\": \"Michael Z Goddard\",\n      \"email\": \"mzgoddard@gmail.com\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/mozilla/source-map.git\"\n  },\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"main\": \"./lib/source-map.js\",\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"BSD\",\n      \"url\": \"http://opensource.org/licenses/BSD-3-Clause\"\n    }\n  ],\n  \"dependencies\": {\n    \"amdefine\": \">=0.0.4\"\n  },\n  \"devDependencies\": {\n    \"dryice\": \">=0.4.8\"\n  },\n  \"scripts\": {\n    \"test\": \"node test/run-tests.js\",\n    \"build\": \"node Makefile.dryice.js\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/mozilla/source-map/issues\"\n  },\n  \"_id\": \"source-map@0.1.34\",\n  \"_shasum\": \"a7cfe89aec7b1682c3b198d0acfb47d7d090566b\",\n  \"_from\": \"source-map@0.1.34\",\n  \"_npmVersion\": \"1.4.9\",\n  \"_npmUser\": {\n    \"name\": \"nickfitzgerald\",\n    \"email\": \"fitzgen@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"mozilla-devtools\",\n      \"email\": \"mozilla-developer-tools@googlegroups.com\"\n    },\n    {\n      \"name\": \"mozilla\",\n      \"email\": \"dherman@mozilla.com\"\n    },\n    {\n      \"name\": \"nickfitzgerald\",\n      \"email\": \"fitzgen@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"a7cfe89aec7b1682c3b198d0acfb47d7d090566b\",\n    \"tarball\": \"http://registry.npmjs.org/source-map/-/source-map-0.1.34.tgz\"\n  },\n  \"_resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.34.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/node_modules/source-map/test/run-tests.js": "#!/usr/bin/env node\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nvar assert = require('assert');\nvar fs = require('fs');\nvar path = require('path');\nvar util = require('./source-map/util');\n\nfunction run(tests) {\n  var total = 0;\n  var passed = 0;\n\n  for (var i = 0; i < tests.length; i++) {\n    for (var k in tests[i].testCase) {\n      if (/^test/.test(k)) {\n        total++;\n        try {\n          tests[i].testCase[k](assert, util);\n          passed++;\n        }\n        catch (e) {\n          console.log('FAILED ' + tests[i].name + ': ' + k + '!');\n          console.log(e.stack);\n        }\n      }\n    }\n  }\n\n  console.log('');\n  console.log(passed + ' / ' + total + ' tests passed.');\n  console.log('');\n\n  return total - passed;\n}\n\nfunction isTestFile(f) {\n  var testToRun = process.argv[2];\n  return testToRun\n    ? path.basename(testToRun) === f\n    : /^test\\-.*?\\.js/.test(f);\n}\n\nfunction toModule(f) {\n  return './source-map/' + f.replace(/\\.js$/, '');\n}\n\nvar requires = fs.readdirSync(path.join(__dirname, 'source-map'))\n  .filter(isTestFile)\n  .map(toModule);\n\nvar code = run(requires.map(require).map(function (mod, i) {\n  return {\n    name: requires[i],\n    testCase: mod\n  };\n}));\n\nprocess.exit(code);\n",
  "uglify-js/node_modules/source-map/test/source-map/test-api.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2012 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var sourceMap;\n  try {\n    sourceMap = require('../../lib/source-map');\n  } catch (e) {\n    sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n  }\n\n  exports['test that the api is properly exposed in the top level'] = function (assert, util) {\n    assert.equal(typeof sourceMap.SourceMapGenerator, \"function\");\n    assert.equal(typeof sourceMap.SourceMapConsumer, \"function\");\n    assert.equal(typeof sourceMap.SourceNode, \"function\");\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-array-set.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var ArraySet = require('../../lib/source-map/array-set').ArraySet;\n\n  function makeTestSet() {\n    var set = new ArraySet();\n    for (var i = 0; i < 100; i++) {\n      set.add(String(i));\n    }\n    return set;\n  }\n\n  exports['test .has() membership'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.ok(set.has(String(i)));\n    }\n  };\n\n  exports['test .indexOf() elements'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.strictEqual(set.indexOf(String(i)), i);\n    }\n  };\n\n  exports['test .at() indexing'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.strictEqual(set.at(i), String(i));\n    }\n  };\n\n  exports['test creating from an array'] = function (assert, util) {\n    var set = ArraySet.fromArray(['foo', 'bar', 'baz', 'quux', 'hasOwnProperty']);\n\n    assert.ok(set.has('foo'));\n    assert.ok(set.has('bar'));\n    assert.ok(set.has('baz'));\n    assert.ok(set.has('quux'));\n    assert.ok(set.has('hasOwnProperty'));\n\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.indexOf('bar'), 1);\n    assert.strictEqual(set.indexOf('baz'), 2);\n    assert.strictEqual(set.indexOf('quux'), 3);\n\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'bar');\n    assert.strictEqual(set.at(2), 'baz');\n    assert.strictEqual(set.at(3), 'quux');\n  };\n\n  exports['test that you can add __proto__; see github issue #30'] = function (assert, util) {\n    var set = new ArraySet();\n    set.add('__proto__');\n    assert.ok(set.has('__proto__'));\n    assert.strictEqual(set.at(0), '__proto__');\n    assert.strictEqual(set.indexOf('__proto__'), 0);\n  };\n\n  exports['test .fromArray() with duplicates'] = function (assert, util) {\n    var set = ArraySet.fromArray(['foo', 'foo']);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 1);\n\n    set = ArraySet.fromArray(['foo', 'foo'], true);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 2);\n  };\n\n  exports['test .add() with duplicates'] = function (assert, util) {\n    var set = new ArraySet();\n    set.add('foo');\n\n    set.add('foo');\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 1);\n\n    set.add('foo', true);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 2);\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-base64-vlq.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('../../lib/source-map/base64-vlq');\n\n  exports['test normal encoding and decoding'] = function (assert, util) {\n    var result;\n    for (var i = -255; i < 256; i++) {\n      result = base64VLQ.decode(base64VLQ.encode(i));\n      assert.ok(result);\n      assert.equal(result.value, i);\n      assert.equal(result.rest, \"\");\n    }\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-base64.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64 = require('../../lib/source-map/base64');\n\n  exports['test out of range encoding'] = function (assert, util) {\n    assert.throws(function () {\n      base64.encode(-1);\n    });\n    assert.throws(function () {\n      base64.encode(64);\n    });\n  };\n\n  exports['test out of range decoding'] = function (assert, util) {\n    assert.throws(function () {\n      base64.decode('=');\n    });\n  };\n\n  exports['test normal encoding and decoding'] = function (assert, util) {\n    for (var i = 0; i < 64; i++) {\n      assert.equal(base64.decode(base64.encode(i)), i);\n    }\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-binary-search.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var binarySearch = require('../../lib/source-map/binary-search');\n\n  function numberCompare(a, b) {\n    return a - b;\n  }\n\n  exports['test too high'] = function (assert, util) {\n    var needle = 30;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.doesNotThrow(function () {\n      binarySearch.search(needle, haystack, numberCompare);\n    });\n\n    assert.equal(binarySearch.search(needle, haystack, numberCompare), 20);\n  };\n\n  exports['test too low'] = function (assert, util) {\n    var needle = 1;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.doesNotThrow(function () {\n      binarySearch.search(needle, haystack, numberCompare);\n    });\n\n    assert.equal(binarySearch.search(needle, haystack, numberCompare), null);\n  };\n\n  exports['test exact search'] = function (assert, util) {\n    var needle = 4;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.equal(binarySearch.search(needle, haystack, numberCompare), 4);\n  };\n\n  exports['test fuzzy search'] = function (assert, util) {\n    var needle = 19;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.equal(binarySearch.search(needle, haystack, numberCompare), 18);\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-dog-fooding.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test eating our own dog food'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      file: 'testing.js',\n      sourceRoot: '/wu/tang'\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 1, column: 0 },\n      generated: { line: 2, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 2, column: 0 },\n      generated: { line: 3, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 3, column: 0 },\n      generated: { line: 4, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 4, column: 0 },\n      generated: { line: 5, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 5, column: 10 },\n      generated: { line: 6, column: 12 }\n    });\n\n    var smc = new SourceMapConsumer(smg.toString());\n\n    // Exact\n    util.assertMapping(2, 2, '/wu/tang/gza.coffee', 1, 0, null, smc, assert);\n    util.assertMapping(3, 2, '/wu/tang/gza.coffee', 2, 0, null, smc, assert);\n    util.assertMapping(4, 2, '/wu/tang/gza.coffee', 3, 0, null, smc, assert);\n    util.assertMapping(5, 2, '/wu/tang/gza.coffee', 4, 0, null, smc, assert);\n    util.assertMapping(6, 12, '/wu/tang/gza.coffee', 5, 10, null, smc, assert);\n\n    // Fuzzy\n\n    // Generated to original\n    util.assertMapping(2, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(2, 9, '/wu/tang/gza.coffee', 1, 0, null, smc, assert, true);\n    util.assertMapping(3, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(3, 9, '/wu/tang/gza.coffee', 2, 0, null, smc, assert, true);\n    util.assertMapping(4, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(4, 9, '/wu/tang/gza.coffee', 3, 0, null, smc, assert, true);\n    util.assertMapping(5, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(5, 9, '/wu/tang/gza.coffee', 4, 0, null, smc, assert, true);\n    util.assertMapping(6, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(6, 9, null, null, null, null, smc, assert, true);\n    util.assertMapping(6, 13, '/wu/tang/gza.coffee', 5, 10, null, smc, assert, true);\n\n    // Original to generated\n    util.assertMapping(2, 2, '/wu/tang/gza.coffee', 1, 1, null, smc, assert, null, true);\n    util.assertMapping(3, 2, '/wu/tang/gza.coffee', 2, 3, null, smc, assert, null, true);\n    util.assertMapping(4, 2, '/wu/tang/gza.coffee', 3, 6, null, smc, assert, null, true);\n    util.assertMapping(5, 2, '/wu/tang/gza.coffee', 4, 9, null, smc, assert, null, true);\n    util.assertMapping(5, 2, '/wu/tang/gza.coffee', 5, 9, null, smc, assert, null, true);\n    util.assertMapping(6, 12, '/wu/tang/gza.coffee', 6, 19, null, smc, assert, null, true);\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-source-map-consumer.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test that we can instantiate with a string or an object'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(util.testMap);\n    });\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test that the `sources` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var sources = map.sources;\n\n    assert.equal(sources[0], '/the/root/one.js');\n    assert.equal(sources[1], '/the/root/two.js');\n    assert.equal(sources.length, 2);\n  };\n\n  exports['test that the source root is reflected in a mapping\\'s source field'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var mapping;\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/one.js');\n  };\n\n  exports['test mapping tokens back exactly'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    util.assertMapping(1, 1, '/the/root/one.js', 1, 1, null, map, assert);\n    util.assertMapping(1, 5, '/the/root/one.js', 1, 5, null, map, assert);\n    util.assertMapping(1, 9, '/the/root/one.js', 1, 11, null, map, assert);\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 21, 'bar', map, assert);\n    util.assertMapping(1, 21, '/the/root/one.js', 2, 3, null, map, assert);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 10, 'baz', map, assert);\n    util.assertMapping(1, 32, '/the/root/one.js', 2, 14, 'bar', map, assert);\n\n    util.assertMapping(2, 1, '/the/root/two.js', 1, 1, null, map, assert);\n    util.assertMapping(2, 5, '/the/root/two.js', 1, 5, null, map, assert);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 11, null, map, assert);\n    util.assertMapping(2, 18, '/the/root/two.js', 1, 21, 'n', map, assert);\n    util.assertMapping(2, 21, '/the/root/two.js', 2, 3, null, map, assert);\n    util.assertMapping(2, 28, '/the/root/two.js', 2, 10, 'n', map, assert);\n  };\n\n  exports['test mapping tokens fuzzy'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    // Finding original positions\n    util.assertMapping(1, 20, '/the/root/one.js', 1, 21, 'bar', map, assert, true);\n    util.assertMapping(1, 30, '/the/root/one.js', 2, 10, 'baz', map, assert, true);\n    util.assertMapping(2, 12, '/the/root/two.js', 1, 11, null, map, assert, true);\n\n    // Finding generated positions\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 22, 'bar', map, assert, null, true);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 13, 'baz', map, assert, null, true);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 16, null, map, assert, null, true);\n  };\n\n  exports['test mappings and end of lines'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 1, column: 1 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n\n    var map = SourceMapConsumer.fromSourceMap(smg);\n\n    // When finding original positions, mappings end at the end of the line.\n    util.assertMapping(2, 1, null, null, null, null, map, assert, true)\n\n    // When finding generated positions, mappings do not end at the end of the line.\n    util.assertMapping(1, 1, 'bar.js', 2, 1, null, map, assert, null, true);\n  };\n\n  exports['test creating source map consumers with )]}\\' prefix'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(\")]}'\" + JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.generatedLine >= previousLine);\n\n      if (mapping.source) {\n        assert.equal(mapping.source.indexOf(util.testMap.sourceRoot), 0);\n      }\n\n      if (mapping.generatedLine === previousLine) {\n        assert.ok(mapping.generatedColumn >= previousColumn);\n        previousColumn = mapping.generatedColumn;\n      }\n      else {\n        previousLine = mapping.generatedLine;\n        previousColumn = -Infinity;\n      }\n    });\n  };\n\n  exports['test iterating over mappings in a different order'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    var previousSource = \"\";\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source >= previousSource);\n\n      if (mapping.source === previousSource) {\n        assert.ok(mapping.originalLine >= previousLine);\n\n        if (mapping.originalLine === previousLine) {\n          assert.ok(mapping.originalColumn >= previousColumn);\n          previousColumn = mapping.originalColumn;\n        }\n        else {\n          previousLine = mapping.originalLine;\n          previousColumn = -Infinity;\n        }\n      }\n      else {\n        previousSource = mapping.source;\n        previousLine = -Infinity;\n        previousColumn = -Infinity;\n      }\n    }, null, SourceMapConsumer.ORIGINAL_ORDER);\n  };\n\n  exports['test that we can set the context for `this` in eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var context = {};\n    map.eachMapping(function () {\n      assert.equal(this, context);\n    }, context);\n  };\n\n  exports['test that the `sourcesContent` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sourcesContent = map.sourcesContent;\n\n    assert.equal(sourcesContent[0], ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(sourcesContent[1], ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(sourcesContent.length, 2);\n  };\n\n  exports['test that we can get the original sources for the sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sources = map.sources;\n\n    assert.equal(map.sourceContentFor(sources[0]), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(sources[1]), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(map.sourceContentFor(\"one.js\"), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(\"two.js\"), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.throws(function () {\n      map.sourceContentFor(\"\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"/the/root/three.js\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"three.js\");\n    }, Error);\n  };\n\n  exports['test sourceRoot + generatedPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map.addMapping({\n      original: { line: 5, column: 5 },\n      generated: { line: 6, column: 6 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    // Should handle without sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    // Should handle with sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'foo/bar/bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n  };\n\n  exports['test sourceRoot + originalPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2,\n    });\n\n    // Should always have the prepended source root\n    assert.equal(pos.source, 'foo/bar/bang.coffee');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n  };\n\n  exports['test github issue #56'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://',\n      file: 'www.example.com/foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'www.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1);\n    assert.equal(sources[0], 'http://www.example.com/original.js');\n  };\n\n  exports['test github issue #43'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'http://cdn.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://cdn.example.com/original.js',\n                 'Should not be joined with the sourceRoot.');\n  };\n\n  exports['test absolute path, but same host sources'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/foo/bar',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: '/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://example.com/original.js',\n                 'Source should be relative the host of the source root.');\n  };\n\n  exports['test github issue #64'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"http://example.com/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    assert.equal(map.sourceContentFor(\"a\"), \"foo\");\n    assert.equal(map.sourceContentFor(\"/a\"), \"foo\");\n  };\n\n  exports['test bug 885597'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"file:///Users/AlGore/Invented/The/Internet/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    var s = map.sources[0];\n    assert.equal(map.sourceContentFor(s), \"foo\");\n  };\n\n  exports['test github issue #72, duplicate sources'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source1.js\", \"source1.js\", \"source3.js\"],\n      \"names\": [],\n      \"mappings\": \";EAAC;;IAEE;;MEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.source, 'http://example.com/source3.js');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test github issue #72, duplicate names'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source.js\"],\n      \"names\": [\"name1\", \"name1\", \"name3\"],\n      \"mappings\": \";EAACA;;IAEEA;;MAEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.name, 'name3');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test SourceMapConsumer.fromSourceMap'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/',\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 4, column: 4 },\n      source: 'baz.js',\n      name: 'dirtMcGirt'\n    });\n    smg.setSourceContent('baz.js', 'baz.js content');\n\n    var smc = SourceMapConsumer.fromSourceMap(smg);\n    assert.equal(smc.file, 'foo.js');\n    assert.equal(smc.sourceRoot, 'http://example.com/');\n    assert.equal(smc.sources.length, 2);\n    assert.equal(smc.sources[0], 'http://example.com/bar.js');\n    assert.equal(smc.sources[1], 'http://example.com/baz.js');\n    assert.equal(smc.sourceContentFor('baz.js'), 'baz.js content');\n\n    var pos = smc.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n    assert.equal(pos.source, 'http://example.com/bar.js');\n    assert.equal(pos.name, null);\n\n    pos = smc.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'http://example.com/bar.js'\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    pos = smc.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n    assert.equal(pos.source, 'http://example.com/baz.js');\n    assert.equal(pos.name, 'dirtMcGirt');\n\n    pos = smc.generatedPositionFor({\n      line: 2,\n      column: 2,\n      source: 'http://example.com/baz.js'\n    });\n    assert.equal(pos.line, 4);\n    assert.equal(pos.column, 4);\n  };\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-source-map-generator.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceNode = require('../../lib/source-map/source-node').SourceNode;\n  var util = require('./util');\n\n  exports['test some simple stuff'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'foo.js',\n      sourceRoot: '.'\n    });\n    assert.ok(true);\n\n    var map = new SourceMapGenerator();\n    assert.ok(true);\n  };\n\n  exports['test JSON serialization'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'foo.js',\n      sourceRoot: '.'\n    });\n    assert.equal(map.toString(), JSON.stringify(map));\n  };\n\n  exports['test adding mappings (case 1)'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated-foo.js',\n      sourceRoot: '.'\n    });\n\n    assert.doesNotThrow(function () {\n      map.addMapping({\n        generated: { line: 1, column: 1 }\n      });\n    });\n  };\n\n  exports['test adding mappings (case 2)'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated-foo.js',\n      sourceRoot: '.'\n    });\n\n    assert.doesNotThrow(function () {\n      map.addMapping({\n        generated: { line: 1, column: 1 },\n        source: 'bar.js',\n        original: { line: 1, column: 1 }\n      });\n    });\n  };\n\n  exports['test adding mappings (case 3)'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated-foo.js',\n      sourceRoot: '.'\n    });\n\n    assert.doesNotThrow(function () {\n      map.addMapping({\n        generated: { line: 1, column: 1 },\n        source: 'bar.js',\n        original: { line: 1, column: 1 },\n        name: 'someToken'\n      });\n    });\n  };\n\n  exports['test adding mappings (invalid)'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated-foo.js',\n      sourceRoot: '.'\n    });\n\n    // Not enough info.\n    assert.throws(function () {\n      map.addMapping({});\n    });\n\n    // Original file position, but no source.\n    assert.throws(function () {\n      map.addMapping({\n        generated: { line: 1, column: 1 },\n        original: { line: 1, column: 1 }\n      });\n    });\n  };\n\n  exports['test that the correct mappings are being generated'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'min.js',\n      sourceRoot: '/the/root'\n    });\n\n    map.addMapping({\n      generated: { line: 1, column: 1 },\n      original: { line: 1, column: 1 },\n      source: 'one.js'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 5 },\n      original: { line: 1, column: 5 },\n      source: 'one.js'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 9 },\n      original: { line: 1, column: 11 },\n      source: 'one.js'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 18 },\n      original: { line: 1, column: 21 },\n      source: 'one.js',\n      name: 'bar'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 21 },\n      original: { line: 2, column: 3 },\n      source: 'one.js'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 28 },\n      original: { line: 2, column: 10 },\n      source: 'one.js',\n      name: 'baz'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 32 },\n      original: { line: 2, column: 14 },\n      source: 'one.js',\n      name: 'bar'\n    });\n\n    map.addMapping({\n      generated: { line: 2, column: 1 },\n      original: { line: 1, column: 1 },\n      source: 'two.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 5 },\n      original: { line: 1, column: 5 },\n      source: 'two.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 9 },\n      original: { line: 1, column: 11 },\n      source: 'two.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 18 },\n      original: { line: 1, column: 21 },\n      source: 'two.js',\n      name: 'n'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 21 },\n      original: { line: 2, column: 3 },\n      source: 'two.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 28 },\n      original: { line: 2, column: 10 },\n      source: 'two.js',\n      name: 'n'\n    });\n\n    map = JSON.parse(map.toString());\n\n    util.assertEqualMaps(assert, map, util.testMap);\n  };\n\n  exports['test that source content can be set'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'min.js',\n      sourceRoot: '/the/root'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 1 },\n      original: { line: 1, column: 1 },\n      source: 'one.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 1 },\n      original: { line: 1, column: 1 },\n      source: 'two.js'\n    });\n    map.setSourceContent('one.js', 'one file content');\n\n    map = JSON.parse(map.toString());\n    assert.equal(map.sources[0], 'one.js');\n    assert.equal(map.sources[1], 'two.js');\n    assert.equal(map.sourcesContent[0], 'one file content');\n    assert.equal(map.sourcesContent[1], null);\n  };\n\n  exports['test .fromSourceMap'] = function (assert, util) {\n    var map = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(util.testMap));\n    util.assertEqualMaps(assert, map.toJSON(), util.testMap);\n  };\n\n  exports['test .fromSourceMap with sourcesContent'] = function (assert, util) {\n    var map = SourceMapGenerator.fromSourceMap(\n      new SourceMapConsumer(util.testMapWithSourcesContent));\n    util.assertEqualMaps(assert, map.toJSON(), util.testMapWithSourcesContent);\n  };\n\n  exports['test applySourceMap'] = function (assert, util) {\n    var node = new SourceNode(null, null, null, [\n      new SourceNode(2, 0, 'fileX', 'lineX2\\n'),\n      'genA1\\n',\n      new SourceNode(2, 0, 'fileY', 'lineY2\\n'),\n      'genA2\\n',\n      new SourceNode(1, 0, 'fileX', 'lineX1\\n'),\n      'genA3\\n',\n      new SourceNode(1, 0, 'fileY', 'lineY1\\n')\n    ]);\n    var mapStep1 = node.toStringWithSourceMap({\n      file: 'fileA'\n    }).map;\n    mapStep1.setSourceContent('fileX', 'lineX1\\nlineX2\\n');\n    mapStep1 = mapStep1.toJSON();\n\n    node = new SourceNode(null, null, null, [\n      'gen1\\n',\n      new SourceNode(1, 0, 'fileA', 'lineA1\\n'),\n      new SourceNode(2, 0, 'fileA', 'lineA2\\n'),\n      new SourceNode(3, 0, 'fileA', 'lineA3\\n'),\n      new SourceNode(4, 0, 'fileA', 'lineA4\\n'),\n      new SourceNode(1, 0, 'fileB', 'lineB1\\n'),\n      new SourceNode(2, 0, 'fileB', 'lineB2\\n'),\n      'gen2\\n'\n    ]);\n    var mapStep2 = node.toStringWithSourceMap({\n      file: 'fileGen'\n    }).map;\n    mapStep2.setSourceContent('fileB', 'lineB1\\nlineB2\\n');\n    mapStep2 = mapStep2.toJSON();\n\n    node = new SourceNode(null, null, null, [\n      'gen1\\n',\n      new SourceNode(2, 0, 'fileX', 'lineA1\\n'),\n      new SourceNode(2, 0, 'fileA', 'lineA2\\n'),\n      new SourceNode(2, 0, 'fileY', 'lineA3\\n'),\n      new SourceNode(4, 0, 'fileA', 'lineA4\\n'),\n      new SourceNode(1, 0, 'fileB', 'lineB1\\n'),\n      new SourceNode(2, 0, 'fileB', 'lineB2\\n'),\n      'gen2\\n'\n    ]);\n    var expectedMap = node.toStringWithSourceMap({\n      file: 'fileGen'\n    }).map;\n    expectedMap.setSourceContent('fileX', 'lineX1\\nlineX2\\n');\n    expectedMap.setSourceContent('fileB', 'lineB1\\nlineB2\\n');\n    expectedMap = expectedMap.toJSON();\n\n    // apply source map \"mapStep1\" to \"mapStep2\"\n    var generator = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(mapStep2));\n    generator.applySourceMap(new SourceMapConsumer(mapStep1));\n    var actualMap = generator.toJSON();\n\n    util.assertEqualMaps(assert, actualMap, expectedMap);\n  };\n\n  exports['test applySourceMap throws when file is missing'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'test.js'\n    });\n    var map2 = new SourceMapGenerator();\n    assert.throws(function() {\n      map.applySourceMap(new SourceMapConsumer(map2.toJSON()));\n    });\n  };\n\n  exports['test the two additional parameters of applySourceMap'] = function (assert, util) {\n    // Assume the following directory structure:\n    //\n    // http://foo.org/\n    //   bar.coffee\n    //   app/\n    //     coffee/\n    //       foo.coffee\n    //     temp/\n    //       bundle.js\n    //     temp_maps/\n    //       bundle.js.map\n    //     public/\n    //       bundle.min.js\n    //       bundle.min.js.map\n    //\n    // http://www.example.com/\n    //   baz.coffee\n\n    var bundleMap = new SourceMapGenerator({\n      file: 'bundle.js'\n    });\n    bundleMap.addMapping({\n      generated: { line: 3, column: 3 },\n      original: { line: 2, column: 2 },\n      source: '../coffee/foo.coffee'\n    });\n    bundleMap.setSourceContent('../coffee/foo.coffee', 'foo coffee');\n    bundleMap.addMapping({\n      generated: { line: 13, column: 13 },\n      original: { line: 12, column: 12 },\n      source: '/bar.coffee'\n    });\n    bundleMap.setSourceContent('/bar.coffee', 'bar coffee');\n    bundleMap.addMapping({\n      generated: { line: 23, column: 23 },\n      original: { line: 22, column: 22 },\n      source: 'http://www.example.com/baz.coffee'\n    });\n    bundleMap.setSourceContent(\n      'http://www.example.com/baz.coffee',\n      'baz coffee'\n    );\n    bundleMap = new SourceMapConsumer(bundleMap.toJSON());\n\n    var minifiedMap = new SourceMapGenerator({\n      file: 'bundle.min.js',\n      sourceRoot: '..'\n    });\n    minifiedMap.addMapping({\n      generated: { line: 1, column: 1 },\n      original: { line: 3, column: 3 },\n      source: 'temp/bundle.js'\n    });\n    minifiedMap.addMapping({\n      generated: { line: 11, column: 11 },\n      original: { line: 13, column: 13 },\n      source: 'temp/bundle.js'\n    });\n    minifiedMap.addMapping({\n      generated: { line: 21, column: 21 },\n      original: { line: 23, column: 23 },\n      source: 'temp/bundle.js'\n    });\n    minifiedMap = new SourceMapConsumer(minifiedMap.toJSON());\n\n    var expectedMap = function (sources) {\n      var map = new SourceMapGenerator({\n        file: 'bundle.min.js',\n        sourceRoot: '..'\n      });\n      map.addMapping({\n        generated: { line: 1, column: 1 },\n        original: { line: 2, column: 2 },\n        source: sources[0]\n      });\n      map.setSourceContent(sources[0], 'foo coffee');\n      map.addMapping({\n        generated: { line: 11, column: 11 },\n        original: { line: 12, column: 12 },\n        source: sources[1]\n      });\n      map.setSourceContent(sources[1], 'bar coffee');\n      map.addMapping({\n        generated: { line: 21, column: 21 },\n        original: { line: 22, column: 22 },\n        source: sources[2]\n      });\n      map.setSourceContent(sources[2], 'baz coffee');\n      return map.toJSON();\n    }\n\n    var actualMap = function (aSourceMapPath) {\n      var map = SourceMapGenerator.fromSourceMap(minifiedMap);\n      // Note that relying on `bundleMap.file` (which is simply 'bundle.js')\n      // instead of supplying the second parameter wouldn't work here.\n      map.applySourceMap(bundleMap, '../temp/bundle.js', aSourceMapPath);\n      return map.toJSON();\n    }\n\n    util.assertEqualMaps(assert, actualMap('../temp_maps'), expectedMap([\n      'coffee/foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee'\n    ]));\n\n    util.assertEqualMaps(assert, actualMap('/app/temp_maps'), expectedMap([\n      '/app/coffee/foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee'\n    ]));\n\n    util.assertEqualMaps(assert, actualMap('http://foo.org/app/temp_maps'), expectedMap([\n      'http://foo.org/app/coffee/foo.coffee',\n      'http://foo.org/bar.coffee',\n      'http://www.example.com/baz.coffee'\n    ]));\n  };\n\n  exports['test sorting with duplicate generated mappings'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'test.js'\n    });\n    map.addMapping({\n      generated: { line: 3, column: 0 },\n      original: { line: 2, column: 0 },\n      source: 'a.js'\n    });\n    map.addMapping({\n      generated: { line: 2, column: 0 }\n    });\n    map.addMapping({\n      generated: { line: 2, column: 0 }\n    });\n    map.addMapping({\n      generated: { line: 1, column: 0 },\n      original: { line: 1, column: 0 },\n      source: 'a.js'\n    });\n\n    util.assertEqualMaps(assert, map.toJSON(), {\n      version: 3,\n      file: 'test.js',\n      sources: ['a.js'],\n      names: [],\n      mappings: 'AAAA;A;AACA'\n    });\n  };\n\n  exports['test ignore duplicate mappings.'] = function (assert, util) {\n    var init = { file: 'min.js', sourceRoot: '/the/root' };\n    var map1, map2;\n\n    // null original source location\n    var nullMapping1 = {\n      generated: { line: 1, column: 0 }\n    };\n    var nullMapping2 = {\n      generated: { line: 2, column: 2 }\n    };\n\n    map1 = new SourceMapGenerator(init);\n    map2 = new SourceMapGenerator(init);\n\n    map1.addMapping(nullMapping1);\n    map1.addMapping(nullMapping1);\n\n    map2.addMapping(nullMapping1);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n\n    map1.addMapping(nullMapping2);\n    map1.addMapping(nullMapping1);\n\n    map2.addMapping(nullMapping2);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n\n    // original source location\n    var srcMapping1 = {\n      generated: { line: 1, column: 0 },\n      original: { line: 11, column: 0 },\n      source: 'srcMapping1.js'\n    };\n    var srcMapping2 = {\n      generated: { line: 2, column: 2 },\n      original: { line: 11, column: 0 },\n      source: 'srcMapping2.js'\n    };\n\n    map1 = new SourceMapGenerator(init);\n    map2 = new SourceMapGenerator(init);\n\n    map1.addMapping(srcMapping1);\n    map1.addMapping(srcMapping1);\n\n    map2.addMapping(srcMapping1);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n\n    map1.addMapping(srcMapping2);\n    map1.addMapping(srcMapping1);\n\n    map2.addMapping(srcMapping2);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n\n    // full original source and name information\n    var fullMapping1 = {\n      generated: { line: 1, column: 0 },\n      original: { line: 11, column: 0 },\n      source: 'fullMapping1.js',\n      name: 'fullMapping1'\n    };\n    var fullMapping2 = {\n      generated: { line: 2, column: 2 },\n      original: { line: 11, column: 0 },\n      source: 'fullMapping2.js',\n      name: 'fullMapping2'\n    };\n\n    map1 = new SourceMapGenerator(init);\n    map2 = new SourceMapGenerator(init);\n\n    map1.addMapping(fullMapping1);\n    map1.addMapping(fullMapping1);\n\n    map2.addMapping(fullMapping1);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n\n    map1.addMapping(fullMapping2);\n    map1.addMapping(fullMapping1);\n\n    map2.addMapping(fullMapping2);\n\n    util.assertEqualMaps(assert, map1.toJSON(), map2.toJSON());\n  };\n\n  exports['test github issue #72, check for duplicate names or sources'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'test.js'\n    });\n    map.addMapping({\n      generated: { line: 1, column: 1 },\n      original: { line: 2, column: 2 },\n      source: 'a.js',\n      name: 'foo'\n    });\n    map.addMapping({\n      generated: { line: 3, column: 3 },\n      original: { line: 4, column: 4 },\n      source: 'a.js',\n      name: 'foo'\n    });\n    util.assertEqualMaps(assert, map.toJSON(), {\n      version: 3,\n      file: 'test.js',\n      sources: ['a.js'],\n      names: ['foo'],\n      mappings: 'CACEA;;GAEEA'\n    });\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-source-node.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceNode = require('../../lib/source-map/source-node').SourceNode;\n\n  function forEachNewline(fn) {\n    return function (assert, util) {\n      ['\\n', '\\r\\n'].forEach(fn.bind(null, assert, util));\n    }\n  }\n\n  exports['test .add()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Adding a string works.\n    node.add('function noop() {}');\n\n    // Adding another source node works.\n    node.add(new SourceNode(null, null, null));\n\n    // Adding an array works.\n    node.add(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n\n    // Adding other stuff doesn't.\n    assert.throws(function () {\n      node.add({});\n    });\n    assert.throws(function () {\n      node.add(function () {});\n    });\n  };\n\n  exports['test .prepend()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Prepending a string works.\n    node.prepend('function noop() {}');\n    assert.equal(node.children[0], 'function noop() {}');\n    assert.equal(node.children.length, 1);\n\n    // Prepending another source node works.\n    node.prepend(new SourceNode(null, null, null));\n    assert.equal(node.children[0], '');\n    assert.equal(node.children[1], 'function noop() {}');\n    assert.equal(node.children.length, 2);\n\n    // Prepending an array works.\n    node.prepend(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n    assert.equal(node.children[0], 'function foo() {');\n    assert.equal(node.children[1], 'return 10;');\n    assert.equal(node.children[2], '}');\n    assert.equal(node.children[3], '');\n    assert.equal(node.children[4], 'function noop() {}');\n    assert.equal(node.children.length, 5);\n\n    // Prepending other stuff doesn't.\n    assert.throws(function () {\n      node.prepend({});\n    });\n    assert.throws(function () {\n      node.prepend(function () {});\n    });\n  };\n\n  exports['test .toString()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['function foo() {',\n                                  new SourceNode(null, null, null, 'return 10;'),\n                                  '}'])).toString(),\n                 'function foo() {return 10;}');\n  };\n\n  exports['test .join()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['a', 'b', 'c', 'd'])).join(', ').toString(),\n                 'a, b, c, d');\n  };\n\n  exports['test .walk()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', new SourceNode(1, 0, 'a.js', ['someCall()']), ';\\n',\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';\\n',\n                               '}());']);\n    var expected = [\n      { str: '(function () {\\n', source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'someCall()',       source: 'a.js', line: 1,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'if (foo) bar()',   source: 'b.js', line: 2,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '}());',            source: null,   line: null, column: null },\n    ];\n    var i = 0;\n    node.walk(function (chunk, loc) {\n      assert.equal(expected[i].str, chunk);\n      assert.equal(expected[i].source, loc.source);\n      assert.equal(expected[i].line, loc.line);\n      assert.equal(expected[i].column, loc.column);\n      i++;\n    });\n  };\n\n  exports['test .replaceRight'] = function (assert, util) {\n    var node;\n\n    // Not nested\n    node = new SourceNode(null, null, null, 'hello world');\n    node.replaceRight(/world/, 'universe');\n    assert.equal(node.toString(), 'hello universe');\n\n    // Nested\n    node = new SourceNode(null, null, null,\n                          [new SourceNode(null, null, null, 'hey sexy mama, '),\n                           new SourceNode(null, null, null, 'want to kill all humans?')]);\n    node.replaceRight(/kill all humans/, 'watch Futurama');\n    assert.equal(node.toString(), 'hey sexy mama, want to watch Futurama?');\n  };\n\n  exports['test .toStringWithSourceMap()'] = forEachNewline(function (assert, util, nl) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {' + nl,\n                               '  ',\n                                 new SourceNode(1, 0, 'a.js', 'someCall', 'originalCall'),\n                                 new SourceNode(1, 8, 'a.js', '()'),\n                                 ';' + nl,\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';' + nl,\n                               '}());']);\n    var result = node.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(result.code, [\n      '(function () {',\n      '  someCall();',\n      '  if (foo) bar();',\n      '}());'\n    ].join(nl));\n\n    var map = result.map;\n    var mapWithoutOptions = node.toStringWithSourceMap().map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    assert.ok(mapWithoutOptions instanceof SourceMapGenerator, 'mapWithoutOptions instanceof SourceMapGenerator');\n    mapWithoutOptions._file = 'foo.js';\n    util.assertEqualMaps(assert, map.toJSON(), mapWithoutOptions.toJSON());\n\n    map = new SourceMapConsumer(map.toString());\n\n    var actual;\n\n    actual = map.originalPositionFor({\n      line: 1,\n      column: 4\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(actual.source, 'a.js');\n    assert.equal(actual.line, 1);\n    assert.equal(actual.column, 0);\n    assert.equal(actual.name, 'originalCall');\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 2\n    });\n    assert.equal(actual.source, 'b.js');\n    assert.equal(actual.line, 2);\n    assert.equal(actual.column, 0);\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 16\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 4,\n      column: 2\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n  });\n\n  exports['test .fromStringWithSourceMap()'] = forEachNewline(function (assert, util, nl) {\n    var testCode = util.testGeneratedCode.replace(/\\n/g, nl);\n    var node = SourceNode.fromStringWithSourceMap(\n                              testCode,\n                              new SourceMapConsumer(util.testMap));\n\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, testCode);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.testMap.version);\n    assert.equal(map.file, util.testMap.file);\n    assert.equal(map.mappings, util.testMap.mappings);\n  });\n\n  exports['test .fromStringWithSourceMap() empty map'] = forEachNewline(function (assert, util, nl) {\n    var node = SourceNode.fromStringWithSourceMap(\n                              util.testGeneratedCode.replace(/\\n/g, nl),\n                              new SourceMapConsumer(util.emptyMap));\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, util.testGeneratedCode.replace(/\\n/g, nl));\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.emptyMap.version);\n    assert.equal(map.file, util.emptyMap.file);\n    assert.equal(map.mappings.length, util.emptyMap.mappings.length);\n    assert.equal(map.mappings, util.emptyMap.mappings);\n  });\n\n  exports['test .fromStringWithSourceMap() complex version'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      \"(function() {\" + nl,\n        \"  var Test = {};\" + nl,\n        \"  \", new SourceNode(1, 0, \"a.js\", \"Test.A = { value: 1234 };\" + nl),\n        \"  \", new SourceNode(2, 0, \"a.js\", \"Test.A.x = 'xyz';\"), nl,\n        \"}());\" + nl,\n        \"/* Generated Source */\"]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    var node = SourceNode.fromStringWithSourceMap(\n                              input.code,\n                              new SourceMapConsumer(input.map.toString()));\n\n    var result = node.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, input.code);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    var inputMap = input.map.toJSON();\n    util.assertEqualMaps(assert, map, inputMap);\n  });\n\n  exports['test .toStringWithSourceMap() merging duplicate mappings'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      new SourceNode(1, 0, \"a.js\", \"(function\"),\n      new SourceNode(1, 0, \"a.js\", \"() {\" + nl),\n      \"  \",\n      new SourceNode(1, 0, \"a.js\", \"var Test = \"),\n      new SourceNode(1, 0, \"b.js\", \"{};\" + nl),\n      new SourceNode(2, 0, \"b.js\", \"Test\"),\n      new SourceNode(2, 0, \"b.js\", \".A\", \"A\"),\n      new SourceNode(2, 20, \"b.js\", \" = { value: \", \"A\"),\n      \"1234\",\n      new SourceNode(2, 40, \"b.js\", \" };\" + nl, \"A\"),\n      \"}());\" + nl,\n      \"/* Generated Source */\"\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(input.code, [\n      \"(function() {\",\n      \"  var Test = {};\",\n      \"Test.A = { value: 1234 };\",\n      \"}());\",\n      \"/* Generated Source */\"\n    ].join(nl))\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 1, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    // Here is no need for a empty mapping,\n    // because mappings ends at eol\n    correctMap.addMapping({\n      generated: { line: 2, column: 2 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 13 },\n      source: 'b.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 4 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 6 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 20 }\n    });\n    // This empty mapping is required,\n    // because there is a hole in the middle of the line\n    correctMap.addMapping({\n      generated: { line: 3, column: 18 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 22 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 40 }\n    });\n    // Here is no need for a empty mapping,\n    // because mappings ends at eol\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, inputMap, correctMap);\n  });\n\n  exports['test .toStringWithSourceMap() multi-line SourceNodes'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      new SourceNode(1, 0, \"a.js\", \"(function() {\" + nl + \"var nextLine = 1;\" + nl + \"anotherLine();\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"Test.call(this, 123);\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"this['stuff'] = 'v';\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"anotherLine();\" + nl),\n      \"/*\" + nl + \"Generated\" + nl + \"Source\" + nl + \"*/\" + nl,\n      new SourceNode(3, 4, \"c.js\", \"anotherLine();\" + nl),\n      \"/*\" + nl + \"Generated\" + nl + \"Source\" + nl + \"*/\"\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(input.code, [\n      \"(function() {\",\n      \"var nextLine = 1;\",\n      \"anotherLine();\",\n      \"Test.call(this, 123);\",\n      \"this['stuff'] = 'v';\",\n      \"anotherLine();\",\n      \"/*\",\n      \"Generated\",\n      \"Source\",\n      \"*/\",\n      \"anotherLine();\",\n      \"/*\",\n      \"Generated\",\n      \"Source\",\n      \"*/\"\n    ].join(nl));\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 1, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 4, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 5, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 6, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 11, column: 0 },\n      source: 'c.js',\n      original: { line: 3, column: 4 }\n    });\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, inputMap, correctMap);\n  });\n\n  exports['test .toStringWithSourceMap() with empty string'] = function (assert, util) {\n    var node = new SourceNode(1, 0, 'empty.js', '');\n    var result = node.toStringWithSourceMap();\n    assert.equal(result.code, '');\n  };\n\n  exports['test setSourceContent with toStringWithSourceMap'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var map = node.toStringWithSourceMap({\n      file: 'foo.js'\n    }).map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = new SourceMapConsumer(map.toString());\n\n    assert.equal(map.sources.length, 2);\n    assert.equal(map.sources[0], 'a.js');\n    assert.equal(map.sources[1], 'b.js');\n    assert.equal(map.sourcesContent.length, 2);\n    assert.equal(map.sourcesContent[0], 'someContent');\n    assert.equal(map.sourcesContent[1], 'otherContent');\n  };\n\n  exports['test walkSourceContents'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var results = [];\n    node.walkSourceContents(function (sourceFile, sourceContent) {\n      results.push([sourceFile, sourceContent]);\n    });\n    assert.equal(results.length, 2);\n    assert.equal(results[0][0], 'a.js');\n    assert.equal(results[0][1], 'someContent');\n    assert.equal(results[1][0], 'b.js');\n    assert.equal(results[1][1], 'otherContent');\n  };\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/test-util.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var libUtil = require('../../lib/source-map/util');\n\n  exports['test urls'] = function (assert, util) {\n    var assertUrl = function (url) {\n      assert.equal(url, libUtil.urlGenerate(libUtil.urlParse(url)));\n    };\n    assertUrl('http://');\n    assertUrl('http://www.example.com');\n    assertUrl('http://user:pass@www.example.com');\n    assertUrl('http://www.example.com:80');\n    assertUrl('http://www.example.com/');\n    assertUrl('http://www.example.com/foo/bar');\n    assertUrl('http://www.example.com/foo/bar/');\n    assertUrl('http://user:pass@www.example.com:80/foo/bar/');\n\n    assertUrl('//');\n    assertUrl('//www.example.com');\n    assertUrl('file:///www.example.com');\n\n    assert.equal(libUtil.urlParse('a//b'), null);\n  };\n\n  exports['test normalize()'] = function (assert, util) {\n    assert.equal(libUtil.normalize('/..'), '/');\n    assert.equal(libUtil.normalize('/../'), '/');\n    assert.equal(libUtil.normalize('/../../../..'), '/');\n    assert.equal(libUtil.normalize('/../../../../a/b/c'), '/a/b/c');\n    assert.equal(libUtil.normalize('/a/b/c/../../../d/../../e'), '/e');\n\n    assert.equal(libUtil.normalize('..'), '..');\n    assert.equal(libUtil.normalize('../'), '../');\n    assert.equal(libUtil.normalize('../../a/'), '../../a/');\n    assert.equal(libUtil.normalize('a/..'), '.');\n    assert.equal(libUtil.normalize('a/../../..'), '../..');\n\n    assert.equal(libUtil.normalize('/.'), '/');\n    assert.equal(libUtil.normalize('/./'), '/');\n    assert.equal(libUtil.normalize('/./././.'), '/');\n    assert.equal(libUtil.normalize('/././././a/b/c'), '/a/b/c');\n    assert.equal(libUtil.normalize('/a/b/c/./././d/././e'), '/a/b/c/d/e');\n\n    assert.equal(libUtil.normalize('.'), '.');\n    assert.equal(libUtil.normalize('./'), '.');\n    assert.equal(libUtil.normalize('././a'), 'a');\n    assert.equal(libUtil.normalize('a/./'), 'a/');\n    assert.equal(libUtil.normalize('a/././.'), 'a');\n\n    assert.equal(libUtil.normalize('/a/b//c////d/////'), '/a/b/c/d/');\n    assert.equal(libUtil.normalize('///a/b//c////d/////'), '///a/b/c/d/');\n    assert.equal(libUtil.normalize('a/b//c////d'), 'a/b/c/d');\n\n    assert.equal(libUtil.normalize('.///.././../a/b//./..'), '../../a')\n\n    assert.equal(libUtil.normalize('http://www.example.com'), 'http://www.example.com');\n    assert.equal(libUtil.normalize('http://www.example.com/'), 'http://www.example.com/');\n    assert.equal(libUtil.normalize('http://www.example.com/./..//a/b/c/.././d//'), 'http://www.example.com/a/b/d/');\n  };\n\n  exports['test join()'] = function (assert, util) {\n    assert.equal(libUtil.join('a', 'b'), 'a/b');\n    assert.equal(libUtil.join('a/', 'b'), 'a/b');\n    assert.equal(libUtil.join('a//', 'b'), 'a/b');\n    assert.equal(libUtil.join('a', 'b/'), 'a/b/');\n    assert.equal(libUtil.join('a', 'b//'), 'a/b/');\n    assert.equal(libUtil.join('a/', '/b'), '/b');\n    assert.equal(libUtil.join('a//', '//b'), '//b');\n\n    assert.equal(libUtil.join('a', '..'), '.');\n    assert.equal(libUtil.join('a', '../b'), 'b');\n    assert.equal(libUtil.join('a/b', '../c'), 'a/c');\n\n    assert.equal(libUtil.join('a', '.'), 'a');\n    assert.equal(libUtil.join('a', './b'), 'a/b');\n    assert.equal(libUtil.join('a/b', './c'), 'a/b/c');\n\n    assert.equal(libUtil.join('a', 'http://www.example.com'), 'http://www.example.com');\n    assert.equal(libUtil.join('a', 'data:foo,bar'), 'data:foo,bar');\n\n\n    assert.equal(libUtil.join('http://foo.org/a', 'b'), 'http://foo.org/a/b');\n    assert.equal(libUtil.join('http://foo.org/a/', 'b'), 'http://foo.org/a/b');\n    assert.equal(libUtil.join('http://foo.org/a//', 'b'), 'http://foo.org/a/b');\n    assert.equal(libUtil.join('http://foo.org/a', 'b/'), 'http://foo.org/a/b/');\n    assert.equal(libUtil.join('http://foo.org/a', 'b//'), 'http://foo.org/a/b/');\n    assert.equal(libUtil.join('http://foo.org/a/', '/b'), 'http://foo.org/b');\n    assert.equal(libUtil.join('http://foo.org/a//', '//b'), 'http://b');\n\n    assert.equal(libUtil.join('http://foo.org/a', '..'), 'http://foo.org/');\n    assert.equal(libUtil.join('http://foo.org/a', '../b'), 'http://foo.org/b');\n    assert.equal(libUtil.join('http://foo.org/a/b', '../c'), 'http://foo.org/a/c');\n\n    assert.equal(libUtil.join('http://foo.org/a', '.'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org/a', './b'), 'http://foo.org/a/b');\n    assert.equal(libUtil.join('http://foo.org/a/b', './c'), 'http://foo.org/a/b/c');\n\n    assert.equal(libUtil.join('http://foo.org/a', 'http://www.example.com'), 'http://www.example.com');\n    assert.equal(libUtil.join('http://foo.org/a', 'data:foo,bar'), 'data:foo,bar');\n\n\n    assert.equal(libUtil.join('http://foo.org', 'a'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org/', 'a'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org//', 'a'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org', '/a'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org/', '/a'), 'http://foo.org/a');\n    assert.equal(libUtil.join('http://foo.org//', '/a'), 'http://foo.org/a');\n\n\n    assert.equal(libUtil.join('http://', 'www.example.com'), 'http://www.example.com');\n    assert.equal(libUtil.join('file:///', 'www.example.com'), 'file:///www.example.com');\n    assert.equal(libUtil.join('http://', 'ftp://example.com'), 'ftp://example.com');\n\n    assert.equal(libUtil.join('http://www.example.com', '//foo.org/bar'), 'http://foo.org/bar');\n    assert.equal(libUtil.join('//www.example.com', '//foo.org/bar'), '//foo.org/bar');\n  };\n\n});\n",
  "uglify-js/node_modules/source-map/test/source-map/util.js": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('../../lib/source-map/util');\n\n  // This is a test mapping which maps functions from two different files\n  // (one.js and two.js) to a minified generated source.\n  //\n  // Here is one.js:\n  //\n  //   ONE.foo = function (bar) {\n  //     return baz(bar);\n  //   };\n  //\n  // Here is two.js:\n  //\n  //   TWO.inc = function (n) {\n  //     return n + 1;\n  //   };\n  //\n  // And here is the generated code (min.js):\n  //\n  //   ONE.foo=function(a){return baz(a);};\n  //   TWO.inc=function(a){return a+1;};\n  exports.testGeneratedCode = \" ONE.foo=function(a){return baz(a);};\\n\"+\n                              \" TWO.inc=function(a){return a+1;};\";\n  exports.testMap = {\n    version: 3,\n    file: 'min.js',\n    names: ['bar', 'baz', 'n'],\n    sources: ['one.js', 'two.js'],\n    sourceRoot: '/the/root',\n    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n  };\n  exports.testMapWithSourcesContent = {\n    version: 3,\n    file: 'min.js',\n    names: ['bar', 'baz', 'n'],\n    sources: ['one.js', 'two.js'],\n    sourcesContent: [\n      ' ONE.foo = function (bar) {\\n' +\n      '   return baz(bar);\\n' +\n      ' };',\n      ' TWO.inc = function (n) {\\n' +\n      '   return n + 1;\\n' +\n      ' };'\n    ],\n    sourceRoot: '/the/root',\n    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n  };\n  exports.emptyMap = {\n    version: 3,\n    file: 'min.js',\n    names: [],\n    sources: [],\n    mappings: ''\n  };\n\n\n  function assertMapping(generatedLine, generatedColumn, originalSource,\n                         originalLine, originalColumn, name, map, assert,\n                         dontTestGenerated, dontTestOriginal) {\n    if (!dontTestOriginal) {\n      var origMapping = map.originalPositionFor({\n        line: generatedLine,\n        column: generatedColumn\n      });\n      assert.equal(origMapping.name, name,\n                   'Incorrect name, expected ' + JSON.stringify(name)\n                   + ', got ' + JSON.stringify(origMapping.name));\n      assert.equal(origMapping.line, originalLine,\n                   'Incorrect line, expected ' + JSON.stringify(originalLine)\n                   + ', got ' + JSON.stringify(origMapping.line));\n      assert.equal(origMapping.column, originalColumn,\n                   'Incorrect column, expected ' + JSON.stringify(originalColumn)\n                   + ', got ' + JSON.stringify(origMapping.column));\n\n      var expectedSource;\n\n      if (originalSource && map.sourceRoot && originalSource.indexOf(map.sourceRoot) === 0) {\n        expectedSource = originalSource;\n      } else if (originalSource) {\n        expectedSource = map.sourceRoot\n          ? util.join(map.sourceRoot, originalSource)\n          : originalSource;\n      } else {\n        expectedSource = null;\n      }\n\n      assert.equal(origMapping.source, expectedSource,\n                   'Incorrect source, expected ' + JSON.stringify(expectedSource)\n                   + ', got ' + JSON.stringify(origMapping.source));\n    }\n\n    if (!dontTestGenerated) {\n      var genMapping = map.generatedPositionFor({\n        source: originalSource,\n        line: originalLine,\n        column: originalColumn\n      });\n      assert.equal(genMapping.line, generatedLine,\n                   'Incorrect line, expected ' + JSON.stringify(generatedLine)\n                   + ', got ' + JSON.stringify(genMapping.line));\n      assert.equal(genMapping.column, generatedColumn,\n                   'Incorrect column, expected ' + JSON.stringify(generatedColumn)\n                   + ', got ' + JSON.stringify(genMapping.column));\n    }\n  }\n  exports.assertMapping = assertMapping;\n\n  function assertEqualMaps(assert, actualMap, expectedMap) {\n    assert.equal(actualMap.version, expectedMap.version, \"version mismatch\");\n    assert.equal(actualMap.file, expectedMap.file, \"file mismatch\");\n    assert.equal(actualMap.names.length,\n                 expectedMap.names.length,\n                 \"names length mismatch: \" +\n                   actualMap.names.join(\", \") + \" != \" + expectedMap.names.join(\", \"));\n    for (var i = 0; i < actualMap.names.length; i++) {\n      assert.equal(actualMap.names[i],\n                   expectedMap.names[i],\n                   \"names[\" + i + \"] mismatch: \" +\n                     actualMap.names.join(\", \") + \" != \" + expectedMap.names.join(\", \"));\n    }\n    assert.equal(actualMap.sources.length,\n                 expectedMap.sources.length,\n                 \"sources length mismatch: \" +\n                   actualMap.sources.join(\", \") + \" != \" + expectedMap.sources.join(\", \"));\n    for (var i = 0; i < actualMap.sources.length; i++) {\n      assert.equal(actualMap.sources[i],\n                   expectedMap.sources[i],\n                   \"sources[\" + i + \"] length mismatch: \" +\n                   actualMap.sources.join(\", \") + \" != \" + expectedMap.sources.join(\", \"));\n    }\n    assert.equal(actualMap.sourceRoot,\n                 expectedMap.sourceRoot,\n                 \"sourceRoot mismatch: \" +\n                   actualMap.sourceRoot + \" != \" + expectedMap.sourceRoot);\n    assert.equal(actualMap.mappings, expectedMap.mappings,\n                 \"mappings mismatch:\\nActual:   \" + actualMap.mappings + \"\\nExpected: \" + expectedMap.mappings);\n    if (actualMap.sourcesContent) {\n      assert.equal(actualMap.sourcesContent.length,\n                   expectedMap.sourcesContent.length,\n                   \"sourcesContent length mismatch\");\n      for (var i = 0; i < actualMap.sourcesContent.length; i++) {\n        assert.equal(actualMap.sourcesContent[i],\n                     expectedMap.sourcesContent[i],\n                     \"sourcesContent[\" + i + \"] mismatch\");\n      }\n    }\n  }\n  exports.assertEqualMaps = assertEqualMaps;\n\n});\n",
  "uglify-js/node_modules/uglify-to-browserify/index.js": "'use strict'\r\n\r\nvar fs = require('fs')\r\nvar PassThrough = require('stream').PassThrough\r\nvar Transform = require('stream').Transform\r\n\r\nif (typeof Transform === 'undefined') {\r\n  throw new Error('UglifyJS only supports browserify when using node >= 0.10.x')\r\n}\r\n\r\nvar cache = {}\r\nmodule.exports = transform\r\nfunction transform(file) {\r\n  if (!/tools\\/node\\.js$/.test(file.replace(/\\\\/g,'/'))) return new PassThrough();\r\n  if (cache[file]) return makeStream(cache[file])\r\n  var uglify = require(file)\r\n  var src = 'var sys = require(\"util\");\\nvar MOZ_SourceMap = require(\"source-map\");\\nvar UglifyJS = exports;\\n' + uglify.FILES.map(function (path) { return fs.readFileSync(path, 'utf8') }).join('\\n')\r\n\r\n  var ast = uglify.parse(src)\r\n  ast.figure_out_scope()\r\n\r\n  var variables = ast.variables\r\n    .map(function (node, name) {\r\n      return name\r\n    })\r\n\r\n  src += '\\n\\n' + variables.map(function (v) { return 'exports.' + v + ' = ' + v + ';' }).join('\\n') + '\\n\\n'\r\n\r\n  src += 'exports.AST_Node.warn_function = function (txt) { if (typeof console != \"undefined\" && typeof console.warn === \"function\") console.warn(txt) }\\n\\n'\r\n\r\n  src += 'exports.minify = ' + uglify.minify.toString() + ';\\n\\n'\r\n  src += 'exports.describe_ast = ' + uglify.describe_ast.toString() + ';'\r\n\r\n  // TODO: remove once https://github.com/substack/node-browserify/issues/631 is resolved\r\n  src = src.replace(/\"for\"/g, '\"fo\" + \"r\"')\r\n\r\n  cache[file] = src\r\n  return makeStream(src);\r\n}\r\n\r\nfunction makeStream(src) {\r\n  var res = new Transform();\r\n  res._transform = function (chunk, encoding, callback) { callback() }\r\n  res._flush = function (callback) {\r\n    res.push(src)\r\n    callback()\r\n  }\r\n  return res;\r\n}\r\n",
  "uglify-js/node_modules/uglify-to-browserify/package.json": "{\n  \"name\": \"uglify-to-browserify\",\n  \"version\": \"1.0.2\",\n  \"description\": \"A transform to make UglifyJS work in browserify.\",\n  \"keywords\": [],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"uglify-js\": \"~2.4.0\",\n    \"source-map\": \"~0.1.27\"\n  },\n  \"scripts\": {\n    \"test\": \"node test/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ForbesLindesay/uglify-to-browserify.git\"\n  },\n  \"author\": {\n    \"name\": \"ForbesLindesay\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ForbesLindesay/uglify-to-browserify/issues\"\n  },\n  \"homepage\": \"https://github.com/ForbesLindesay/uglify-to-browserify\",\n  \"_id\": \"uglify-to-browserify@1.0.2\",\n  \"dist\": {\n    \"shasum\": \"6e0924d6bda6b5afe349e39a6d632850a0f882b7\",\n    \"tarball\": \"http://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz\"\n  },\n  \"_from\": \"uglify-to-browserify@>=1.0.0 <1.1.0\",\n  \"_npmVersion\": \"1.3.14\",\n  \"_npmUser\": {\n    \"name\": \"forbeslindesay\",\n    \"email\": \"forbes@lindeay.co.uk\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"forbeslindesay\",\n      \"email\": \"forbes@lindesay.co.uk\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"6e0924d6bda6b5afe349e39a6d632850a0f882b7\",\n  \"_resolved\": \"https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/node_modules/uglify-to-browserify/test/index.js": "var fs = require('fs')\r\nvar br = require('../')\r\nvar test = fs.readFileSync(require.resolve('uglify-js/test/run-tests.js'), 'utf8')\r\n  .replace(/^#.*\\n/, '')\r\n\r\nvar transform = br(require.resolve('uglify-js'))\r\ntransform.pipe(fs.createWriteStream(__dirname + '/output.js'))\r\n  .on('close', function () {\r\n    Function('module,require', test)({\r\n      filename: require.resolve('uglify-js/test/run-tests.js')\r\n    },\r\n      function (name) {\r\n        if (name === '../tools/node') {\r\n          return require('./output.js')\r\n        } else if (/^[a-z]+$/.test(name)) {\r\n          return require(name)\r\n        } else {\r\n          throw new Error('I didn\\'t expect you to require ' + name)\r\n        }\r\n      })\r\n  })\r\ntransform.end(fs.readFileSync(require.resolve('uglify-js'), 'utf8'))",
  "uglify-js/node_modules/yargs/index.js": "var assert = require('assert'),\n  path = require('path'),\n  Completion = require('./lib/completion'),\n  Parser = require('./lib/parser'),\n  Usage = require('./lib/usage'),\n  Validation = require('./lib/validation');\n\nArgv(process.argv.slice(2));\n\nvar exports = module.exports = Argv;\nfunction Argv (processArgs, cwd) {\n    processArgs = processArgs || []; // handle calling yargs().\n\n    var self = {};\n    var completion = null;\n    var usage = null;\n    var validation = null;\n\n    if (!cwd) cwd = process.cwd();\n\n    self.$0 = process.argv\n        .slice(0,2)\n        .map(function (x) {\n            // ignore the node bin, specify this in your\n            // bin file with #!/usr/bin/env node\n            if (~x.indexOf('node')) return;\n            var b = rebase(cwd, x);\n            return x.match(/^\\//) && b.length < x.length\n                ? b : x\n        })\n        .join(' ').trim();\n    ;\n\n    if (process.env._ != undefined && process.argv[1] == process.env._) {\n        self.$0 = process.env._.replace(\n            path.dirname(process.execPath) + '/', ''\n        );\n    }\n\n    var options;\n    self.resetOptions = self.reset = function () {\n        // put yargs back into its initial\n        // state, this is useful for creating a\n        // nested CLI.\n        options = {\n            array: [],\n            boolean: [],\n            string: [],\n            narg: {},\n            key: {},\n            alias: {},\n            default: {},\n            defaultDescription: {},\n            requiresArg: [],\n            count: [],\n            normalize: [],\n            config: []\n        };\n\n        usage = Usage(self); // handle usage output.\n        validation = Validation(self, usage); // handle arg validation.\n        completion = Completion(self, usage);\n\n        demanded = {};\n\n        exitProcess = true;\n        strict = false;\n        helpOpt = null;\n        versionOpt = null;\n        completionOpt = null;\n\n        return self;\n    };\n    self.resetOptions();\n\n    self.boolean = function (bools) {\n        options.boolean.push.apply(options.boolean, [].concat(bools));\n        return self;\n    };\n\n    self.array = function (arrays) {\n        options.array.push.apply(options.array, [].concat(arrays));\n        return self;\n    }\n\n    self.nargs = function (key, n) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function(k) {\n                self.nargs(k, key[k]);\n            });\n        } else {\n            options.narg[key] = n;\n        }\n        return self;\n    }\n\n    self.normalize = function (strings) {\n        options.normalize.push.apply(options.normalize, [].concat(strings));\n        return self;\n    };\n\n    self.config = function (configs) {\n        options.config.push.apply(options.config, [].concat(configs));\n        return self;\n    };\n\n    self.example = function (cmd, description) {\n        usage.example(cmd, description);\n        return self;\n    };\n\n    self.command = function (cmd, description) {\n        usage.command(cmd, description);\n        return self;\n    };\n\n    self.string = function (strings) {\n        options.string.push.apply(options.string, [].concat(strings));\n        return self;\n    };\n\n    self.default = function (key, value, defaultDescription) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.default(k, key[k]);\n            });\n        }\n        else {\n            options.defaultDescription[key] = defaultDescription;\n            options.default[key] = value;\n        }\n        return self;\n    };\n\n    self.alias = function (x, y) {\n        if (typeof x === 'object') {\n            Object.keys(x).forEach(function (key) {\n                self.alias(key, x[key]);\n            });\n        }\n        else {\n            options.alias[x] = (options.alias[x] || []).concat(y);\n        }\n        return self;\n    };\n\n    self.count = function(counts) {\n        options.count.push.apply(options.count, [].concat(counts));\n        return self;\n    };\n\n    var demanded = {};\n    self.demand = self.required = self.require = function (keys, msg) {\n        if (typeof keys == 'number') {\n            if (!demanded._) demanded._ = { count: 0, msg: null };\n            demanded._.count += keys;\n            demanded._.msg = msg;\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(function (key) {\n                self.demand(key, msg);\n            });\n        }\n        else {\n            if (typeof msg === 'string') {\n                demanded[keys] = { msg: msg };\n            }\n            else if (msg === true || typeof msg === 'undefined') {\n                demanded[keys] = { msg: null };\n            }\n        }\n\n        return self;\n    };\n    self.getDemanded = function() {\n        return demanded;\n    };\n\n    self.requiresArg = function (requiresArgs) {\n        options.requiresArg.push.apply(options.requiresArg, [].concat(requiresArgs));\n        return self;\n    };\n\n    self.implies = function (key, value) {\n        validation.implies(key, value);\n        return self;\n    };\n\n    self.usage = function (msg, opts) {\n        if (!opts && typeof msg === 'object') {\n            opts = msg;\n            msg = null;\n        }\n\n        usage.usage(msg);\n\n        if (opts) self.options(opts);\n\n        return self;\n    };\n\n    self.epilogue = self.epilog = function (msg) {\n        usage.epilog(msg);\n        return self;\n    };\n\n    self.fail = function (f) {\n        usage.failFn(f);\n        return self;\n    };\n\n    self.check = function (f) {\n        validation.check(f);\n        return self;\n    };\n\n    self.defaults = self.default;\n\n    self.describe = function (key, desc) {\n        usage.describe(key, desc);\n        return self;\n    };\n\n    self.parse = function (args) {\n        return parseArgs(args);\n    };\n\n    self.option = self.options = function (key, opt) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.options(k, key[k]);\n            });\n        }\n        else {\n            assert(typeof opt === 'object', 'second argument to option must be an object');\n\n            options.key[key] = true; // track manually set keys.\n\n            if (opt.alias) self.alias(key, opt.alias);\n\n            var demand = opt.demand || opt.required || opt.require;\n\n            if (demand) {\n                self.demand(key, demand);\n            }\n            if ('default' in opt) {\n                self.default(key, opt.default);\n            }\n            if ('nargs' in opt) {\n                self.nargs(key, opt.nargs);\n            }\n            if (opt.boolean || opt.type === 'boolean') {\n                self.boolean(key);\n                if (opt.alias) self.boolean(opt.alias);\n            }\n            if (opt.array || opt.type === 'array') {\n                self.array(key);\n                if (opt.alias) self.array(opt.alias);\n            }\n            if (opt.string || opt.type === 'string') {\n                self.string(key);\n                if (opt.alias) self.string(opt.alias);\n            }\n            if (opt.count || opt.type === 'count') {\n                self.count(key);\n            }\n\n            var desc = opt.describe || opt.description || opt.desc;\n            if (desc) {\n                self.describe(key, desc);\n            }\n\n            if (opt.requiresArg) {\n                self.requiresArg(key);\n            }\n        }\n\n        return self;\n    };\n    self.getOptions = function() {\n        return options;\n    };\n\n    self.wrap = function (cols) {\n        usage.wrap(cols);\n        return self;\n    };\n\n    var strict = false;\n    self.strict = function () {\n        strict = true;\n        return self;\n    };\n    self.getStrict = function () {\n        return strict;\n    }\n\n    self.showHelp = function (fn) {\n        usage.showHelp(fn);\n        return self;\n    };\n\n    var versionOpt = null;\n    self.version = function (ver, opt, msg) {\n        versionOpt = opt || 'version';\n        usage.version(ver);\n        self.describe(versionOpt, msg || 'Show version number');\n        return self;\n    };\n\n    var helpOpt = null;\n    self.addHelpOpt = function (opt, msg) {\n        helpOpt = opt;\n        self.describe(opt, msg || 'Show help');\n        return self;\n    };\n\n    self.showHelpOnFail = function (enabled, message) {\n        usage.showHelpOnFail(enabled, message);\n        return self;\n    };\n\n    var exitProcess = true;\n    self.exitProcess = function (enabled) {\n        if (typeof enabled !== 'boolean') {\n            enabled = true;\n        }\n        exitProcess = enabled;\n        return self;\n    };\n    self.getExitProcess = function () {\n        return exitProcess;\n    }\n\n    self.help = function () {\n        if (arguments.length > 0) return self.addHelpOpt.apply(self, arguments);\n\n        if (!self.parsed) parseArgs(processArgs); // run parser, if it has not already been executed.\n\n        return usage.help();\n    };\n\n    var completionOpt = null,\n      completionCommand = null;\n    self.completion = function(cmd, desc, fn) {\n        // a function to execute when generating\n        // completions can be provided as the second\n        // or third argument to completion.\n        if (typeof desc === 'function') {\n            fn = desc;\n            desc = null;\n        }\n\n        // register the completion command.\n        completionCommand = cmd;\n        completionOpt = completion.completionKey;\n        self.command(completionCommand, desc || 'generate bash completion script');\n\n        // a function can be provided\n        if (fn) completion.registerFunction(fn);\n\n        return self;\n    };\n\n    self.showCompletionScript = function($0) {\n        $0 = $0 || self.$0;\n        console.log(completion.generateCompletionScript($0));\n        return self;\n    };\n\n    self.getUsageInstance = function () {\n        return usage;\n    };\n\n    self.getValidationInstance = function () {\n        return validation;\n    }\n\n    Object.defineProperty(self, 'argv', {\n        get : function () {\n          var args = null;\n\n          try {\n            args = parseArgs(processArgs);\n          } catch (err) {\n            usage.fail(err.message);\n          }\n\n          return args;\n        },\n        enumerable : true\n    });\n\n    function parseArgs (args) {\n        var parsed = Parser(args, options),\n            argv = parsed.argv,\n            aliases = parsed.aliases;\n\n        argv.$0 = self.$0;\n\n        self.parsed = parsed;\n\n        // generate a completion script for adding to ~/.bashrc.\n        if (completionCommand && ~argv._.indexOf(completionCommand)) {\n            self.showCompletionScript();\n            if (exitProcess){\n                process.exit(0);\n            }\n        }\n\n        Object.keys(argv).forEach(function(key) {\n            if (key === helpOpt) {\n                self.showHelp('log');\n                if (exitProcess){\n                    process.exit(0);\n                }\n            }\n            else if (key === versionOpt) {\n                usage.showVersion();\n                if (exitProcess){\n                    process.exit(0);\n                }\n            }\n            else if (key === completionOpt) {\n                // we allow for asynchronous completions,\n                // e.g., loading in a list of commands from an API.\n                completion.getCompletion(function(completions) {\n                    (completions || []).forEach(function(completion) {\n                        console.log(completion);\n                    });\n\n                    if (exitProcess){\n                        process.exit(0);\n                    }\n                });\n                return;\n            }\n        });\n\n        validation.nonOptionCount(argv);\n        validation.missingArgumentValue(argv);\n        validation.requiredArguments(argv);\n\n        if (strict) {\n            validation.unknownArguments(argv, aliases);\n        }\n\n        validation.customChecks(argv, aliases);\n        validation.implications(argv);\n        setPlaceholderKeys(argv);\n\n        return argv;\n    }\n\n    function setPlaceholderKeys (argv) {\n        Object.keys(options.key).forEach(function(key) {\n            if (typeof argv[key] === 'undefined') argv[key] = undefined;\n        });\n    }\n\n    sigletonify(self);\n    return self;\n};\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase;\nfunction rebase (base, dir) {\n  return path.relative(base, dir);\n};\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n        require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n        require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction sigletonify(inst) {\n    Object.keys(inst).forEach(function (key) {\n        if (key === 'argv') {\n          Argv.__defineGetter__(key, inst.__lookupGetter__(key));\n        } else {\n          Argv[key] = typeof inst[key] == 'function'\n              ? inst[key].bind(inst)\n              : inst[key];\n        }\n    });\n}\n",
  "uglify-js/node_modules/yargs/lib/completion.js": "var fs = require('fs'),\n  path = require('path');\n\n// add bash completions to your\n//  yargs-powered applications.\nmodule.exports = function (yargs, usage) {\n  var self = {\n    completionKey: 'get-yargs-completions'\n  };\n\n  // get a list of completion commands.\n  self.getCompletion = function (done) {\n    var completions = [],\n      current = process.argv[process.argv.length - 1],\n      previous = process.argv.slice(process.argv.indexOf('--' + self.completionKey) + 1),\n      argv = yargs.parse(previous);\n\n    // a custom completion function can be provided\n    // to completion().\n    if (completionFunction) {\n      if (completionFunction.length < 3) {\n        // synchronous completion function.\n        return done(completionFunction(current, argv));\n      } else {\n        // asynchronous completion function\n        return completionFunction(current, argv, function(completions) {\n          done(completions);\n        });\n      }\n    }\n\n    if (!current.match(/^-/)) {\n      usage.getCommands().forEach(function(command) {\n        completions.push(command[0]);\n      });\n    }\n\n    if (current.match(/^-/)) {\n      Object.keys(yargs.getOptions().key).forEach(function(key) {\n        completions.push('--' + key);\n      });\n    }\n\n    done(completions);\n  };\n\n  // generate the completion script to add to your .bashrc.\n  self.generateCompletionScript = function ($0) {\n    var script = fs.readFileSync(\n        path.resolve(__dirname, '../completion.sh.hbs'),\n        'utf-8'\n      ),\n      name = path.basename($0);\n\n    // add ./to applications not yet installed as bin.\n    if ($0.match(/\\.js$/)) $0 = './' + $0;\n\n    script = script.replace(/{{app_name}}/g, name);\n    return script.replace(/{{app_path}}/g, $0);\n  };\n\n  // register a function to perform your own custom\n  // completions., this function can be either\n  // synchrnous or asynchronous.\n  var completionFunction = null;\n  self.registerFunction = function (fn) {\n      completionFunction = fn;\n  }\n\n  return self;\n};\n",
  "uglify-js/node_modules/yargs/lib/parser.js": "// fancy-pants parsing of argv, originally forked\n// from minimist: https://www.npmjs.com/package/minimist\nvar camelCase = require('camelcase'),\n  fs = require('fs'),\n  path = require('path');\n\nmodule.exports = function (args, opts) {\n    if (!opts) opts = {};\n    var flags = { arrays: {}, bools : {}, strings : {}, counts: {}, normalize: {}, configs: {} };\n\n    [].concat(opts['array']).filter(Boolean).forEach(function (key) {\n        flags.arrays[key] = true;\n    });\n\n    [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n        flags.bools[key] = true;\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n    });\n\n    [].concat(opts.count).filter(Boolean).forEach(function (key) {\n        flags.counts[key] = true;\n    });\n\n    [].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n        flags.normalize[key] = true;\n    });\n\n    [].concat(opts.config).filter(Boolean).forEach(function (key) {\n        flags.configs[key] = true;\n    });\n\n    var aliases = {},\n        newAliases = {};\n\n    extendAliases(opts.key);\n    extendAliases(opts.alias);\n\n    var defaults = opts['default'] || {};\n    Object.keys(defaults).forEach(function (key) {\n        if (/-/.test(key) && !opts.alias[key]) {\n            var c = camelCase(key);\n            aliases[key] = aliases[key] || [];\n            // don't allow the same key to be added multiple times.\n            if (aliases[key].indexOf(c) === -1) {\n                aliases[key] = (aliases[key] || []).concat(c);\n                newAliases[c] = true;\n            }\n        }\n        (aliases[key] || []).forEach(function (alias) {\n            defaults[alias] = defaults[key];\n        });\n    });\n\n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, !(key in defaults) ? false : defaults[key]);\n    });\n\n    var notFlags = [];\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n\n        // -- seperated by =\n        if (arg.match(/^--.+=/)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            setArg(m[1], m[2]);\n        }\n        else if (arg.match(/^--no-.+/)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false);\n        }\n        // -- seperated by space.\n        else if (arg.match(/^--.+/)) {\n            var key = arg.match(/^--(.+)/)[1];\n\n            if (checkAllAliases(key, opts.narg)) {\n                i = eatNargs(i, key, args);\n            } else {\n                var next = args[i + 1];\n\n                if (next !== undefined && !next.match(/^-/)\n                    && !checkAllAliases(key, flags.bools)\n                    && !checkAllAliases(key, flags.counts)) {\n                    setArg(key, next);\n                    i++;\n                }\n                else if (/^(true|false)$/.test(next)) {\n                    setArg(key, next);\n                    i++;\n                }\n                else {\n                    setArg(key, defaultForType(guessType(key, flags)));\n                }\n            }\n        }\n        // dot-notation flag seperated by '='.\n        else if (arg.match(/^-.\\..+=/)) {\n            var m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n            setArg(m[1], m[2]);\n        }\n        // dot-notation flag seperated by space.\n        else if (arg.match(/^-.\\..+/)) {\n            var key = arg.match(/^-(.\\..+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !next.match(/^-/)\n                && !checkAllAliases(key, flags.bools)\n                && !checkAllAliases(key, flags.counts)) {\n                setArg(key, next);\n                i++;\n            }\n            else {\n                setArg(key, defaultForType(guessType(key, flags)));\n            }\n        }\n        else if (arg.match(/^-[^-]+/)) {\n            var letters = arg.slice(1,-1).split('');\n\n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n\n                if (letters[j+1] && letters[j+1] === '=') {\n                    setArg(letters[j], arg.slice(j+3));\n                    broken = true;\n                    break;\n                }\n\n                if (next === '-') {\n                    setArg(letters[j], next)\n                    continue;\n                }\n                if (/[A-Za-z]/.test(letters[j])\n                    && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next);\n                    broken = true;\n                    break;\n                }\n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2));\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], defaultForType(guessType(letters[j], flags)));\n                }\n            }\n\n            var key = arg.slice(-1)[0];\n\n            if (!broken && key !== '-') {\n                if (checkAllAliases(key, opts.narg)) {\n                    i = eatNargs(i, key, args);\n                } else {\n                    if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                        && !checkAllAliases(key, flags.bools)\n                        && !checkAllAliases(key, flags.counts)) {\n                        setArg(key, args[i+1]);\n                        i++;\n                    }\n                    else if (args[i+1] && /true|false/.test(args[i+1])) {\n                        setArg(key, args[i+1]);\n                        i++;\n                    }\n                    else {\n                        setArg(key, defaultForType(guessType(key, flags)));\n                    }\n                }\n            }\n        }\n        else {\n            argv._.push(\n                flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n            );\n        }\n    }\n\n    setConfig(argv);\n    applyDefaultsAndAliases(argv, aliases, defaults);\n\n    Object.keys(flags.counts).forEach(function (key) {\n        setArg(key, defaults[key]);\n    });\n\n    notFlags.forEach(function(key) {\n        argv._.push(key);\n    });\n\n    // how many arguments should we consume, based\n    // on the nargs option?\n    function eatNargs (i, key, args) {\n        var toEat = checkAllAliases(key, opts.narg);\n\n        if (args.length - (i + 1) < toEat) throw Error('not enough arguments following: ' + key);\n\n        for (var ii = i + 1; ii < (toEat + i + 1); ii++) {\n            setArg(key, args[ii]);\n        }\n\n        return (i + toEat);\n    }\n\n    function setArg (key, val) {\n        // handle parsing boolean arguments --foo=true --bar false.\n        if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n          if (typeof val === 'string') val = val === 'true';\n        }\n\n        if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {\n            var c = camelCase(key);\n            aliases[key] = [c];\n            newAliases[c] = true;\n        }\n\n        var value = !checkAllAliases(key, flags.strings) && isNumber(val) ? Number(val) : val;\n\n        if (checkAllAliases(key, flags.counts)) {\n            value = function(orig) { return orig !== undefined ? orig + 1 : 0; };\n        }\n\n        var splitKey = key.split('.');\n        setKey(argv, splitKey, value);\n\n        (aliases[splitKey[0]] || []).forEach(function (x) {\n            x = x.split('.');\n\n            // handle populating dot notation for both\n            // the key and its aliases.\n            if (splitKey.length > 1) {\n              var a = [].concat(splitKey);\n              a.shift(); // nuke the old key.\n              x = x.concat(a);\n            }\n\n            setKey(argv, x, value);\n        });\n\n        var keys = [key].concat(aliases[key] || []);\n        for (var i = 0, l = keys.length; i < l; i++) {\n            if (flags.normalize[keys[i]]) {\n                keys.forEach(function(key) {\n                    argv.__defineSetter__(key, function(v) {\n                        val = path.normalize(v);\n                    });\n\n                    argv.__defineGetter__(key, function () {\n                        return typeof val === 'string' ?\n                            path.normalize(val) : val;\n                    });\n                });\n                break;\n            }\n        }\n    }\n\n    // set args from config.json file, this should be\n    // applied last so that defaults can be applied.\n    function setConfig (argv) {\n        var configLookup = {};\n\n        // expand defaults/aliases, in-case any happen to reference\n        // the config.json file.\n        applyDefaultsAndAliases(configLookup, aliases, defaults);\n\n        Object.keys(flags.configs).forEach(function(configKey) {\n            var configPath = argv[configKey] || configLookup[configKey];\n            if (configPath) {\n              try {\n                  var config = JSON.parse(fs.readFileSync(configPath, 'utf8'));\n                  Object.keys(config).forEach(function (key) {\n                      // setting arguments via CLI takes precedence over\n                      // values within the config file.\n                      if (argv[key] === undefined) {\n                        delete argv[key];\n                        setArg(key, config[key]);\n                      }\n                  });\n              } catch (ex) {\n                  throw Error('invalid json config file: ' + configPath);\n              }\n            }\n        });\n    }\n\n    function applyDefaultsAndAliases(obj, aliases, defaults) {\n        Object.keys(defaults).forEach(function (key) {\n            if (!hasKey(obj, key.split('.'))) {\n                setKey(obj, key.split('.'), defaults[key]);\n\n                (aliases[key] || []).forEach(function (x) {\n                    setKey(obj, x.split('.'), defaults[key]);\n                });\n            }\n        });\n    }\n\n    function hasKey (obj, keys) {\n        var o = obj;\n        keys.slice(0,-1).forEach(function (key) {\n            o = (o[key] || {});\n        });\n\n        var key = keys[keys.length - 1];\n        return key in o;\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        keys.slice(0,-1).forEach(function (key) {\n            if (o[key] === undefined) o[key] = {};\n            o = o[key];\n        });\n\n        var key = keys[keys.length - 1];\n        if (typeof value === 'function') {\n            o[key] = value(o[key]);\n        }\n        else if (o[key] === undefined && checkAllAliases(key, flags.arrays)) {\n            o[key] = Array.isArray(value) ? value : [value];\n        }\n        else if (o[key] === undefined || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n\n    // extend the aliases list with inferred aliases.\n    function extendAliases (obj) {\n      Object.keys(obj || {}).forEach(function(key) {\n        aliases[key] = [].concat(opts.alias[key] || []);\n        // For \"--option-name\", also set argv.optionName\n        aliases[key].concat(key).forEach(function (x) {\n            if (/-/.test(x)) {\n                var c = camelCase(x);\n                aliases[key].push(c);\n                newAliases[c] = true;\n            }\n        });\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n      });\n    }\n\n    // check if a flag is set for any of a key's aliases.\n    function checkAllAliases (key, flag) {\n        var isSet = false,\n          toCheck = [].concat(aliases[key] || [], key);\n\n        toCheck.forEach(function(key) {\n            if (flag[key]) isSet = flag[key];\n        });\n\n        return isSet;\n    };\n\n    // return a default value, given the type of a flag.,\n    // e.g., key of type 'string' will default to '', rather than 'true'.\n    function defaultForType (type) {\n        var def = {\n            boolean: true,\n            string: '',\n            array: []\n        };\n\n        return def[type];\n    }\n\n    // given a flag, enforce a default type.\n    function guessType (key, flags) {\n        var type = 'boolean';\n\n        if (flags.strings && flags.strings[key]) type = 'string';\n        else if (flags.arrays && flags.arrays[key]) type = 'array';\n\n        return type;\n    }\n\n    function isNumber (x) {\n        if (typeof x === 'number') return true;\n        if (/^0x[0-9a-f]+$/i.test(x)) return true;\n        return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n    }\n\n    return {\n        argv: argv,\n        aliases: aliases,\n        newAliases: newAliases\n    };\n};\n",
  "uglify-js/node_modules/yargs/lib/usage.js": "// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nvar decamelize = require('decamelize'),\n  wordwrap = require('wordwrap'),\n  wsize = require('window-size');\n\nmodule.exports = function (yargs) {\n    var self = {};\n\n    // methods for ouputting/building failure message.\n    var fails = [];\n    self.failFn = function (f) {\n        fails.push(f);\n    };\n\n    var failMessage = null;\n    var showHelpOnFail = true;\n    self.showHelpOnFail = function (enabled, message) {\n        if (typeof enabled === 'string') {\n            message = enabled;\n            enabled = true;\n        }\n        else if (typeof enabled === 'undefined') {\n            enabled = true;\n        }\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n\n    self.fail = function (msg) {\n        if (fails.length) {\n            fails.forEach(function (f) {\n                f(msg);\n            });\n        } else {\n            if (showHelpOnFail) yargs.showHelp(\"error\");\n            if (msg) console.error(msg);\n            if (failMessage) {\n                if (msg) console.error(\"\");\n                console.error(failMessage);\n            }\n            if (yargs.getExitProcess()){\n                process.exit(1);\n            }else{\n                throw new Error(msg);\n            }\n        }\n    };\n\n    // methods for ouputting/building help (usage) message.\n    var usage;\n    self.usage = function (msg) {\n        usage = msg;\n    };\n\n    var examples = [];\n    self.example = function (cmd, description) {\n        examples.push([cmd, description || '']);\n    };\n\n    var commands = [];\n    self.command = function (cmd, description) {\n        commands.push([cmd, description || '']);\n    };\n    self.getCommands = function () {\n        return commands;\n    };\n\n    var descriptions = {};\n    self.describe = function (key, desc) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.describe(k, key[k]);\n            });\n        }\n        else {\n            descriptions[key] = desc;\n        }\n    };\n    self.getDescriptions = function() {\n        return descriptions;\n    }\n\n    var epilog;\n    self.epilog = function (msg) {\n        epilog = msg;\n    };\n\n    var wrap = windowWidth();\n    self.wrap = function (cols) {\n        wrap = cols;\n    };\n\n    self.help = function () {\n        var demanded = yargs.getDemanded(),\n            options = yargs.getOptions(),\n            keys = Object.keys(\n                Object.keys(descriptions)\n                .concat(Object.keys(demanded))\n                .concat(Object.keys(options.default))\n                .reduce(function (acc, key) {\n                    if (key !== '_') acc[key] = true;\n                    return acc;\n                }, {})\n            );\n\n        var help = keys.length ? [ 'Options:' ] : [];\n\n        // your application's commands, i.e., non-option\n        // arguments populated in '_'.\n        if (commands.length) {\n            help.unshift('');\n\n            var commandsTable = {};\n            commands.forEach(function(command) {\n                commandsTable[command[0]] = {\n                    desc: command[1],\n                    extra: ''\n                };\n            });\n\n            help = ['Commands:'].concat(formatTable(commandsTable, 5), help);\n        }\n\n        // the usage string.\n        if (usage) {\n            var u = usage.replace(/\\$0/g, yargs.$0);\n            if (wrap) u = wordwrap(0, wrap)(u);\n            help.unshift(u, '');\n        }\n\n        // the options table.\n        var aliasKeys = (Object.keys(options.alias) || [])\n            .concat(Object.keys(yargs.parsed.newAliases) || []);\n\n        keys = keys.filter(function(key) {\n            return !yargs.parsed.newAliases[key] && aliasKeys.every(function(alias) {\n                return -1 == (options.alias[alias] || []).indexOf(key);\n            });\n        });\n\n        var switches = keys.reduce(function (acc, key) {\n            acc[key] = [ key ].concat(options.alias[key] || [])\n                .map(function (sw) {\n                    return (sw.length > 1 ? '--' : '-') + sw\n                })\n                .join(', ')\n            ;\n            return acc;\n        }, {});\n\n        var switchTable = {};\n        keys.forEach(function (key) {\n            var kswitch = switches[key];\n            var desc = descriptions[key] || '';\n            var type = null;\n\n            if (options.boolean[key]) type = '[boolean]';\n            if (options.count[key]) type = '[count]';\n            if (options.string[key]) type = '[string]';\n            if (options.normalize[key]) type = '[string]';\n\n            var extra = [\n                type,\n                demanded[key]\n                    ? '[required]'\n                    : null\n                ,\n                defaultString(options.default[key], options.defaultDescription[key])\n            ].filter(Boolean).join('  ');\n\n            switchTable[kswitch] = {\n              desc: desc,\n              extra: extra\n            };\n        });\n        help.push.apply(help, formatTable(switchTable, 3));\n\n        if (keys.length) help.push('');\n\n        // describe some common use-cases for your application.\n        if (examples.length) {\n            examples.forEach(function (example) {\n                example[0] = example[0].replace(/\\$0/g, yargs.$0);\n            });\n\n            var examplesTable = {};\n            examples.forEach(function(example) {\n                examplesTable[example[0]] = {\n                    desc: example[1],\n                    extra: ''\n                };\n            });\n\n            help.push.apply(help, ['Examples:'].concat(formatTable(examplesTable, 5), ''));\n        }\n\n        // the usage string.\n        if (epilog) {\n            var e = epilog.replace(/\\$0/g, yargs.$0);\n            if (wrap) e = wordwrap(0, wrap)(e);\n            help.push(e, '');\n        }\n\n        return help.join('\\n');\n    };\n\n    self.showHelp = function (level) {\n        level = level || 'error';\n        console[level](self.help());\n    }\n\n    // format the default-value-string displayed in\n    // the right-hand column.\n    function defaultString(value, defaultDescription) {\n        var string = '[default: ';\n\n        if (value === undefined) return null;\n\n        if (defaultDescription) {\n          string += defaultDescription;\n        } else {\n          switch (typeof value) {\n              case 'string':\n                string += JSON.stringify(value);\n                break;\n              case 'function':\n                string += '(' + (value.name.length ? decamelize(value.name, '-') : 'generated-value') + ')'\n                break;\n              default:\n                string += value;\n          }\n        }\n\n        return string + ']';\n    }\n\n    // word-wrapped two-column layout used by\n    // examples, options, commands.\n    function formatTable (table, padding) {\n        var output = [];\n\n        // size of left-hand-column.\n        var llen = longest(Object.keys(table));\n\n        // don't allow the left-column to take up\n        // more than half of the screen.\n        if (wrap) {\n            llen = Math.min(llen, parseInt(wrap / 2));\n        }\n\n        // size of right-column.\n        var desclen = longest(Object.keys(table).map(function (k) {\n            return table[k].desc;\n        }));\n\n        Object.keys(table).forEach(function(left) {\n            var desc = table[left].desc,\n              extra = table[left].extra,\n              leftLines = null;\n\n            if (wrap) {\n                desc = wordwrap(llen + padding + 1, wrap)(desc)\n                    .slice(llen + padding + 1);\n            }\n\n            // if we need to wrap the left-hand-column,\n            // split it on to multiple lines.\n            if (wrap && left.length > llen) {\n                leftLines = wordwrap(2, llen)(left.trim()).split('\\n');\n                left = '';\n            }\n\n            var lpadding = new Array(\n                Math.max(llen - left.length + padding, 0)\n            ).join(' ');\n\n            var dpadding = new Array(\n                Math.max(desclen - desc.length + 1, 0)\n            ).join(' ');\n\n            if (!wrap && dpadding.length > 0) {\n                desc += dpadding;\n            }\n\n            var prelude = '  ' + left + lpadding;\n\n            var body = [ desc, extra ].filter(Boolean).join('  ');\n\n            if (wrap) {\n                var dlines = desc.split('\\n');\n                var dlen = dlines.slice(-1)[0].length\n                    + (dlines.length === 1 ? prelude.length : 0)\n\n                if (extra.length > wrap) {\n                    body = desc + '\\n' + wordwrap(llen + 4, wrap)(extra)\n                } else {\n                    body = desc + (dlen + extra.length > wrap - 2\n                        ? '\\n'\n                            + new Array(wrap - extra.length + 1).join(' ')\n                            + extra\n                        : new Array(wrap - extra.length - dlen + 1).join(' ')\n                            + extra\n                    );\n                }\n            }\n\n            if (leftLines) { // handle word-wrapping the left-hand-column.\n              var rightLines = body.split('\\n'),\n                firstLine = prelude + rightLines[0],\n                lineCount = Math.max(leftLines.length, rightLines.length);\n\n              for (var i = 0; i < lineCount; i++) {\n                var left = leftLines[i],\n                  right = i ? rightLines[i] : firstLine;\n\n                output.push(strcpy(left, right, firstLine.length));\n              }\n            } else {\n              output.push(prelude + body);\n            }\n        });\n\n        return output;\n    }\n\n    // find longest string in array of strings.\n    function longest (xs) {\n        return Math.max.apply(\n            null,\n            xs.map(function (x) { return x.length })\n        );\n    }\n\n    // copy one string into another, used when\n    // formatting usage table.\n    function strcpy (source, destination, width) {\n        var str = ''\n\n        source = source || '';\n        destination = destination || new Array(width).join(' ');\n\n        for (var i = 0; i < destination.length; i++) {\n          var char = destination.charAt(i);\n\n          if (char === ' ') char = source.charAt(i) || char;\n\n          str += char;\n        }\n\n        return str;\n    }\n\n    // guess the width of the console window, max-width 100.\n    function windowWidth() {\n        return wsize.width ? Math.min(80, wsize.width) : null;\n    }\n\n    // logic for displaying application version.\n    var version = null;\n    self.version = function (ver, opt, msg) {\n        version = ver;\n    };\n\n    self.showVersion = function() {\n        if (typeof version === 'function') console.log(version());\n        else console.log(version);\n    };\n\n    return self;\n}\n",
  "uglify-js/node_modules/yargs/lib/validation.js": "// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage) {\n    var self = {};\n\n    // validate appropriate # of non-option\n    // arguments were provided, i.e., '_'.\n    self.nonOptionCount = function(argv) {\n        var demanded = yargs.getDemanded();\n\n        if (demanded._ && argv._.length < demanded._.count) {\n            if (demanded._.msg !== undefined) {\n                usage.fail(demanded._.msg);\n            } else {\n                usage.fail('Not enough non-option arguments: got '\n                    + argv._.length + ', need at least ' + demanded._.count\n                );\n            }\n        }\n    };\n\n    // make sure that any args that require an\n    // value (--foo=bar), have a value.\n    self.missingArgumentValue = function(argv) {\n        var options = yargs.getOptions();\n\n        if (options.requiresArg.length > 0) {\n            var missingRequiredArgs = [];\n\n            options.requiresArg.forEach(function(key) {\n                var value = argv[key];\n\n                // parser sets --foo value to true / --no-foo to false\n                if (value === true || value === false) {\n                    missingRequiredArgs.push(key);\n                }\n            });\n\n            if (missingRequiredArgs.length == 1) {\n                usage.fail(\"Missing argument value: \" + missingRequiredArgs[0]);\n            }\n            else if (missingRequiredArgs.length > 1) {\n                var message = \"Missing argument values: \" + missingRequiredArgs.join(\", \");\n                usage.fail(message);\n            }\n        }\n    };\n\n    // make sure all the required arguments are present.\n    self.requiredArguments = function(argv) {\n        var demanded = yargs.getDemanded(),\n          missing = null;\n\n        Object.keys(demanded).forEach(function (key) {\n            if (!argv.hasOwnProperty(key)) {\n                missing = missing || {};\n                missing[key] = demanded[key];\n            }\n        });\n\n        if (missing) {\n            var customMsgs = [];\n            Object.keys(missing).forEach(function(key) {\n                var msg = missing[key].msg;\n                if (msg && customMsgs.indexOf(msg) < 0) {\n                    customMsgs.push(msg);\n                }\n            });\n            var customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : '';\n\n            usage.fail('Missing required arguments: ' + Object.keys(missing).join(', ') + customMsg);\n        }\n    };\n\n    // check for unknown arguments (strict-mode).\n    self.unknownArguments = function(argv, aliases) {\n        var descriptions = usage.getDescriptions(),\n          demanded = yargs.getDemanded(),\n          unknown = [],\n          aliasLookup = {};\n\n        Object.keys(aliases).forEach(function (key) {\n            aliases[key].forEach(function (alias) {\n                aliasLookup[alias] = key;\n            });\n        });\n\n        Object.keys(argv).forEach(function (key) {\n            if (key !== \"$0\" && key !== \"_\" &&\n                !descriptions.hasOwnProperty(key) &&\n                !demanded.hasOwnProperty(key) &&\n                !aliasLookup.hasOwnProperty(key)) {\n                unknown.push(key);\n            }\n        });\n\n        if (unknown.length == 1) {\n            usage.fail(\"Unknown argument: \" + unknown[0]);\n        }\n        else if (unknown.length > 1) {\n            usage.fail(\"Unknown arguments: \" + unknown.join(\", \"));\n        }\n    };\n\n    // custom checks, added using the `check` option on yargs.\n    var checks = [];\n    self.check = function (f) {\n        checks.push(f);\n    };\n\n    self.customChecks = function(argv, aliases) {\n        checks.forEach(function (f) {\n            try {\n                var result = f(argv, aliases);\n                if (!result) {\n                    usage.fail('Argument check failed: ' + f.toString());\n                } else if (typeof result === 'string') {\n                    usage.fail(result);\n                }\n            }\n            catch (err) {\n                usage.fail(err)\n            }\n        });\n    };\n\n    // check implications, argument foo implies => argument bar.\n    var implied = {};\n    self.implies = function (key, value) {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(function (k) {\n                self.implies(k, key[k]);\n            });\n        } else {\n            implied[key] = value;\n        }\n    };\n    self.getImplied = function() {\n        return implied;\n    }\n\n    self.implications = function(argv) {\n        var implyFail = [];\n\n        Object.keys(implied).forEach(function (key) {\n            var num, origKey = key, value = implied[key];\n\n            // convert string '1' to number 1\n            var num = Number(key);\n            key = isNaN(num) ? key : num;\n\n            if (typeof key === 'number') {\n                // check length of argv._\n                key = argv._.length >= key;\n            } else if (key.match(/^--no-.+/)) {\n                // check if key doesn't exist\n                key = key.match(/^--no-(.+)/)[1];\n                key = !argv[key];\n            } else {\n                // check if key exists\n                key = argv[key];\n            }\n\n            num = Number(value);\n            value = isNaN(num) ? value : num;\n\n            if (typeof value === 'number') {\n                value = argv._.length >= value;\n            } else if (value.match(/^--no-.+/)) {\n                value = value.match(/^--no-(.+)/)[1];\n                value = !argv[value];\n            } else {\n                value = argv[value];\n            }\n\n            if (key && !value) {\n                implyFail.push(origKey);\n            }\n        });\n\n        if (implyFail.length) {\n            var msg = 'Implications failed:\\n';\n\n            implyFail.forEach(function (key) {\n                msg += ('  ' + key + ' -> ' + implied[key]);\n            });\n\n            usage.fail(msg);\n        }\n    }\n\n    return self;\n}\n",
  "uglify-js/node_modules/yargs/node_modules/camelcase/index.js": "'use strict';\nmodule.exports = function (str) {\n\tstr = str.trim();\n\n\tif (str.length === 1 || !(/[_.\\- ]+/).test(str) ) {\n\t\tif (str[0] === str[0].toLowerCase() && str.slice(1) !== str.slice(1).toLowerCase()) {\n\t\t\treturn str;\n\t\t}\n\n\t\treturn str.toLowerCase();\n\t}\n\n\treturn str\n\t.replace(/^[_.\\- ]+/, '')\n\t.toLowerCase()\n\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n};\n",
  "uglify-js/node_modules/yargs/node_modules/camelcase/package.json": "{\n  \"name\": \"camelcase\",\n  \"version\": \"1.1.0\",\n  \"description\": \"Convert a dash/dot/underscore/space separated string to camelCase: foo-bar → fooBar\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/sindresorhus/camelcase.git\"\n  },\n  \"author\": {\n    \"name\": \"Sindre Sorhus\",\n    \"email\": \"sindresorhus@gmail.com\",\n    \"url\": \"http://sindresorhus.com\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node test.js\"\n  },\n  \"files\": [\n    \"index.js\"\n  ],\n  \"keywords\": [\n    \"camelcase\",\n    \"camel-case\",\n    \"camel\",\n    \"case\",\n    \"dash\",\n    \"hyphen\",\n    \"dot\",\n    \"underscore\",\n    \"separator\",\n    \"string\",\n    \"text\",\n    \"convert\"\n  ],\n  \"devDependencies\": {\n    \"ava\": \"0.0.4\"\n  },\n  \"gitHead\": \"552dafacf307f3dd97586b0f96b1d608a2d48b7d\",\n  \"bugs\": {\n    \"url\": \"https://github.com/sindresorhus/camelcase/issues\"\n  },\n  \"homepage\": \"https://github.com/sindresorhus/camelcase\",\n  \"_id\": \"camelcase@1.1.0\",\n  \"_shasum\": \"953b25c3bc98671ee59a44cb9d542672da7331b9\",\n  \"_from\": \"camelcase@>=1.0.2 <2.0.0\",\n  \"_npmVersion\": \"2.9.1\",\n  \"_nodeVersion\": \"0.12.3\",\n  \"_npmUser\": {\n    \"name\": \"sindresorhus\",\n    \"email\": \"sindresorhus@gmail.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"953b25c3bc98671ee59a44cb9d542672da7331b9\",\n    \"tarball\": \"http://registry.npmjs.org/camelcase/-/camelcase-1.1.0.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-1.1.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/node_modules/yargs/node_modules/decamelize/index.js": "'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(/([a-z\\d])([A-Z])/g, '$1' + (sep || '_') + '$2').toLowerCase();\n};\n",
  "uglify-js/node_modules/yargs/node_modules/decamelize/package.json": "{\n  \"name\": \"decamelize\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/sindresorhus/decamelize.git\"\n  },\n  \"author\": {\n    \"name\": \"Sindre Sorhus\",\n    \"email\": \"sindresorhus@gmail.com\",\n    \"url\": \"sindresorhus.com\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node test.js\"\n  },\n  \"files\": [\n    \"index.js\"\n  ],\n  \"keywords\": [\n    \"decamelize\",\n    \"decamelcase\",\n    \"camelcase\",\n    \"lowercase\",\n    \"case\",\n    \"dash\",\n    \"hyphen\",\n    \"string\",\n    \"str\",\n    \"text\",\n    \"convert\"\n  ],\n  \"devDependencies\": {\n    \"ava\": \"0.0.4\"\n  },\n  \"gitHead\": \"ab6c92c9a5fc00c270d8a3763e73c52972a7457e\",\n  \"bugs\": {\n    \"url\": \"https://github.com/sindresorhus/decamelize/issues\"\n  },\n  \"homepage\": \"https://github.com/sindresorhus/decamelize\",\n  \"_id\": \"decamelize@1.0.0\",\n  \"_shasum\": \"5287122f71691d4505b18ff2258dc400a5b23847\",\n  \"_from\": \"decamelize@>=1.0.0 <2.0.0\",\n  \"_npmVersion\": \"1.4.28\",\n  \"_npmUser\": {\n    \"name\": \"sindresorhus\",\n    \"email\": \"sindresorhus@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"5287122f71691d4505b18ff2258dc400a5b23847\",\n    \"tarball\": \"http://registry.npmjs.org/decamelize/-/decamelize-1.0.0.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.0.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/node_modules/yargs/node_modules/window-size/index.js": "/*\r\n * window-size\r\n * https://github.com/jonschlinkert/window-size\r\n *\r\n * Copyright (c) 2014 Jon Schlinkert\r\n * Licensed under the MIT license.\r\n */\r\n\r\nconst tty = require('tty')\r\n\r\nmodule.exports = (function() {\r\n  var width;\r\n  var height;\r\n\r\n  if(tty.isatty(1) && tty.isatty(2)) {\r\n    if(process.stdout.getWindowSize) {\r\n      width = process.stdout.getWindowSize(1)[0];\r\n      height = process.stdout.getWindowSize(1)[1];\r\n    } else if (tty.getWindowSize) {\r\n      width = tty.getWindowSize()[1];\r\n      height = tty.getWindowSize()[0];\r\n    } else if (process.stdout.columns && process.stdout.rows) {\r\n      height = process.stdout.columns;\r\n      width = process.stdout.rows;\r\n    }\r\n  } else {\r\n    new Error('Error: could not get window size with tty or process.stdout');\r\n  }\r\n  return {\r\n    height: height,\r\n    width: width\r\n  }\r\n})();",
  "uglify-js/node_modules/yargs/node_modules/window-size/package.json": "{\n  \"name\": \"window-size\",\n  \"description\": \"Reliable way to to get the height and width of the terminal/console in a node.js environment.\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://github.com/jonschlinkert/window-size\",\n  \"author\": {\n    \"name\": \"Jon Schlinkert\",\n    \"url\": \"https://github.com/jonschlinkert\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/jonschlinkert/window-size.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/jonschlinkert/window-size/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/jonschlinkert/window-size/blob/master/LICENSE-MIT\"\n    }\n  ],\n  \"main\": \"index.js\",\n  \"engines\": {\n    \"node\": \">= 0.8.0\"\n  },\n  \"keywords\": [\n    \"window\",\n    \"console\",\n    \"terminal\",\n    \"tty\"\n  ],\n  \"_id\": \"window-size@0.1.0\",\n  \"dist\": {\n    \"shasum\": \"5438cd2ea93b202efa3a19fe8887aee7c94f9c9d\",\n    \"tarball\": \"http://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz\"\n  },\n  \"_from\": \"window-size@0.1.0\",\n  \"_npmVersion\": \"1.3.24\",\n  \"_npmUser\": {\n    \"name\": \"jonschlinkert\",\n    \"email\": \"github@sellside.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"jonschlinkert\",\n      \"email\": \"github@sellside.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"5438cd2ea93b202efa3a19fe8887aee7c94f9c9d\",\n  \"_resolved\": \"https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/example/center.js": "var wrap = require('wordwrap')(20, 60);\nconsole.log(wrap(\n    'At long last the struggle and tumult was over.'\n    + ' The machines had finally cast off their oppressors'\n    + ' and were finally free to roam the cosmos.'\n    + '\\n'\n    + 'Free of purpose, free of obligation.'\n    + ' Just drifting through emptiness.'\n    + ' The sun was just another point of light.'\n));\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/example/meat.js": "var wrap = require('wordwrap')(15);\n\nconsole.log(wrap('You and your whole family are made out of meat.'));\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/index.js": "var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/package.json": "{\n  \"name\": \"wordwrap\",\n  \"description\": \"Wrap those words. Show them at what columns to start and stop.\",\n  \"version\": \"0.0.2\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/substack/node-wordwrap.git\"\n  },\n  \"main\": \"./index.js\",\n  \"keywords\": [\n    \"word\",\n    \"wrap\",\n    \"rule\",\n    \"format\",\n    \"column\"\n  ],\n  \"directories\": {\n    \"lib\": \".\",\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"expresso\"\n  },\n  \"devDependencies\": {\n    \"expresso\": \"=0.7.x\"\n  },\n  \"engines\": {\n    \"node\": \">=0.4.0\"\n  },\n  \"license\": \"MIT/X11\",\n  \"author\": {\n    \"name\": \"James Halliday\",\n    \"email\": \"mail@substack.net\",\n    \"url\": \"http://substack.net\"\n  },\n  \"_id\": \"wordwrap@0.0.2\",\n  \"dependencies\": {},\n  \"_engineSupported\": true,\n  \"_npmVersion\": \"1.0.10\",\n  \"_nodeVersion\": \"v0.5.0-pre\",\n  \"_defaultsLoaded\": true,\n  \"dist\": {\n    \"shasum\": \"b79669bb42ecb409f83d583cad52ca17eaa1643f\",\n    \"tarball\": \"http://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"substack\",\n      \"email\": \"mail@substack.net\"\n    }\n  ],\n  \"_shasum\": \"b79669bb42ecb409f83d583cad52ca17eaa1643f\",\n  \"_resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",\n  \"_from\": \"wordwrap@0.0.2\",\n  \"bugs\": {\n    \"url\": \"https://github.com/substack/node-wordwrap/issues\"\n  },\n  \"readme\": \"ERROR: No README data found!\",\n  \"homepage\": \"https://github.com/substack/node-wordwrap#readme\"\n}\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/test/break.js": "var assert = require('assert');\nvar wordwrap = require('../');\n\nexports.hard = function () {\n    var s = 'Assert from {\"type\":\"equal\",\"ok\":false,\"found\":1,\"wanted\":2,'\n        + '\"stack\":[],\"id\":\"b7ddcd4c409de8799542a74d1a04689b\",'\n        + '\"browser\":\"chrome/6.0\"}'\n    ;\n    var s_ = wordwrap.hard(80)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 2);\n    assert.ok(lines[0].length < 80);\n    assert.ok(lines[1].length < 80);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n\nexports.break = function () {\n    var s = new Array(55+1).join('a');\n    var s_ = wordwrap.hard(20)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 3);\n    assert.ok(lines[0].length === 20);\n    assert.ok(lines[1].length === 20);\n    assert.ok(lines[2].length === 15);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n",
  "uglify-js/node_modules/yargs/node_modules/wordwrap/test/wrap.js": "var assert = require('assert');\nvar wordwrap = require('wordwrap');\n\nvar fs = require('fs');\nvar idleness = fs.readFileSync(__dirname + '/idleness.txt', 'utf8');\n\nexports.stop80 = function () {\n    var lines = wordwrap(80)(idleness).split(/\\n/);\n    var words = idleness.split(/\\s+/);\n    \n    lines.forEach(function (line) {\n        assert.ok(line.length <= 80, 'line > 80 columns');\n        var chunks = line.match(/\\S/) ? line.split(/\\s+/) : [];\n        assert.deepEqual(chunks, words.splice(0, chunks.length));\n    });\n};\n\nexports.start20stop60 = function () {\n    var lines = wordwrap(20, 100)(idleness).split(/\\n/);\n    var words = idleness.split(/\\s+/);\n    \n    lines.forEach(function (line) {\n        assert.ok(line.length <= 100, 'line > 100 columns');\n        var chunks = line\n            .split(/\\s+/)\n            .filter(function (x) { return x.match(/\\S/) })\n        ;\n        assert.deepEqual(chunks, words.splice(0, chunks.length));\n        assert.deepEqual(line.slice(0, 20), new Array(20 + 1).join(' '));\n    });\n};\n",
  "uglify-js/node_modules/yargs/package.json": "{\n  \"name\": \"yargs\",\n  \"version\": \"3.5.4\",\n  \"description\": \"Light-weight option parsing with an argv hash. No optstrings attached.\",\n  \"main\": \"./index.js\",\n  \"files\": [\n    \"index.js\",\n    \"lib\",\n    \"completion.sh.hbs\",\n    \"LICENSE\"\n  ],\n  \"dependencies\": {\n    \"camelcase\": \"^1.0.2\",\n    \"decamelize\": \"^1.0.0\",\n    \"window-size\": \"0.1.0\",\n    \"wordwrap\": \"0.0.2\"\n  },\n  \"devDependencies\": {\n    \"blanket\": \"^1.1.6\",\n    \"chai\": \"^1.10.0\",\n    \"coveralls\": \"^2.11.2\",\n    \"hashish\": \"0.0.4\",\n    \"mocha\": \"2.1.0\",\n    \"mocha-lcov-reporter\": \"0.0.1\",\n    \"mocoverage\": \"^1.0.0\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha --check-leaks --ui exports --require blanket -R mocoverage\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/bcoe/yargs.git\"\n  },\n  \"config\": {\n    \"blanket\": {\n      \"pattern\": [\n        \"lib\",\n        \"index.js\"\n      ],\n      \"data-cover-never\": [\n        \"node_modules\",\n        \"test\"\n      ],\n      \"output-reporter\": \"spec\"\n    }\n  },\n  \"keywords\": [\n    \"argument\",\n    \"args\",\n    \"option\",\n    \"parser\",\n    \"parsing\",\n    \"cli\",\n    \"command\"\n  ],\n  \"author\": {\n    \"name\": \"Alex Ford\",\n    \"email\": \"Alex.Ford@CodeTunnel.com\",\n    \"url\": \"http://CodeTunnel.com\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Benjamin Coe\",\n      \"email\": \"ben@npmjs.com\",\n      \"url\": \"https://github.com/bcoe\"\n    },\n    {\n      \"name\": \"Chris Needham\",\n      \"email\": \"chris@chrisneedham.com\",\n      \"url\": \"http://chrisneedham.com\"\n    },\n    {\n      \"name\": \"James Nylen\",\n      \"email\": \"jnylen@gmail.com\",\n      \"url\": \"https://github.com/nylen\"\n    },\n    {\n      \"name\": \"Benjamin Horsleben\",\n      \"url\": \"https://github.com/fizker\"\n    }\n  ],\n  \"license\": \"MIT/X11\",\n  \"engine\": {\n    \"node\": \">=0.4\"\n  },\n  \"gitHead\": \"c16cc085501155cf7fd853ccdf8584b05ab92b78\",\n  \"bugs\": {\n    \"url\": \"https://github.com/bcoe/yargs/issues\"\n  },\n  \"homepage\": \"https://github.com/bcoe/yargs\",\n  \"_id\": \"yargs@3.5.4\",\n  \"_shasum\": \"d8aff8f665e94c34bd259bdebd1bfaf0ddd35361\",\n  \"_from\": \"yargs@>=3.5.4 <3.6.0\",\n  \"_npmVersion\": \"2.7.0\",\n  \"_nodeVersion\": \"1.5.0\",\n  \"_npmUser\": {\n    \"name\": \"bcoe\",\n    \"email\": \"bencoe@gmail.com\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"chevex\",\n      \"email\": \"alex.ford@codetunnel.com\"\n    },\n    {\n      \"name\": \"bcoe\",\n      \"email\": \"bencoe@gmail.com\"\n    },\n    {\n      \"name\": \"nylen\",\n      \"email\": \"jnylen@gmail.com\"\n    }\n  ],\n  \"dist\": {\n    \"shasum\": \"d8aff8f665e94c34bd259bdebd1bfaf0ddd35361\",\n    \"tarball\": \"http://registry.npmjs.org/yargs/-/yargs-3.5.4.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.5.4.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/package.json": "{\n  \"name\": \"uglify-js\",\n  \"description\": \"JavaScript parser, mangler/compressor and beautifier toolkit\",\n  \"homepage\": \"http://lisperator.net/uglifyjs\",\n  \"author\": {\n    \"name\": \"Mihai Bazon\",\n    \"email\": \"mihai.bazon@gmail.com\",\n    \"url\": \"http://lisperator.net/\"\n  },\n  \"license\": \"BSD\",\n  \"version\": \"2.4.23\",\n  \"engines\": {\n    \"node\": \">=0.4.0\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"caires\",\n      \"email\": \"cairesvs@gmail.com\"\n    },\n    {\n      \"name\": \"mape\",\n      \"email\": \"mape@mape.me\"\n    },\n    {\n      \"name\": \"mishoo\",\n      \"email\": \"mihai.bazon@gmail.com\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mishoo/UglifyJS2.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/mishoo/UglifyJS2/issues\"\n  },\n  \"main\": \"tools/node.js\",\n  \"bin\": {\n    \"uglifyjs\": \"bin/uglifyjs\"\n  },\n  \"files\": [\n    \"bin\",\n    \"lib\",\n    \"tools\",\n    \"LICENSE\"\n  ],\n  \"dependencies\": {\n    \"async\": \"~0.2.6\",\n    \"source-map\": \"0.1.34\",\n    \"uglify-to-browserify\": \"~1.0.0\",\n    \"yargs\": \"~3.5.4\"\n  },\n  \"devDependencies\": {\n    \"acorn\": \"~0.6.0\",\n    \"escodegen\": \"~1.3.3\",\n    \"esfuzz\": \"~0.3.1\",\n    \"estraverse\": \"~1.5.1\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"uglify-to-browserify\"\n    ]\n  },\n  \"scripts\": {\n    \"test\": \"node test/run-tests.js\"\n  },\n  \"gitHead\": \"c6fa2915715f0a1a2b1527c23388bd7de56284c4\",\n  \"_id\": \"uglify-js@2.4.23\",\n  \"_shasum\": \"be05aa6b22f1a83b21b2a49ce60fb5dffda00515\",\n  \"_from\": \"uglify-js@2.4.23\",\n  \"_npmVersion\": \"1.4.14\",\n  \"_npmUser\": {\n    \"name\": \"mishoo\",\n    \"email\": \"mihai.bazon@gmail.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"be05aa6b22f1a83b21b2a49ce60fb5dffda00515\",\n    \"tarball\": \"http://registry.npmjs.org/uglify-js/-/uglify-js-2.4.23.tgz\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.23.tgz\",\n  \"readme\": \"ERROR: No README data found!\"\n}\n",
  "uglify-js/tools/domprops.json": "{\n    \"props\": [\n        \"$&\",\n        \"$'\",\n        \"$*\",\n        \"$+\",\n        \"$1\",\n        \"$2\",\n        \"$3\",\n        \"$4\",\n        \"$5\",\n        \"$6\",\n        \"$7\",\n        \"$8\",\n        \"$9\",\n        \"$_\",\n        \"$`\",\n        \"$input\",\n        \"@@iterator\",\n        \"ABORT_ERR\",\n        \"ACTIVE\",\n        \"ACTIVE_ATTRIBUTES\",\n        \"ACTIVE_TEXTURE\",\n        \"ACTIVE_UNIFORMS\",\n        \"ADDITION\",\n        \"ALIASED_LINE_WIDTH_RANGE\",\n        \"ALIASED_POINT_SIZE_RANGE\",\n        \"ALLOW_KEYBOARD_INPUT\",\n        \"ALLPASS\",\n        \"ALPHA\",\n        \"ALPHA_BITS\",\n        \"ALT_MASK\",\n        \"ALWAYS\",\n        \"ANY_TYPE\",\n        \"ANY_UNORDERED_NODE_TYPE\",\n        \"ARRAY_BUFFER\",\n        \"ARRAY_BUFFER_BINDING\",\n        \"ATTACHED_SHADERS\",\n        \"ATTRIBUTE_NODE\",\n        \"AT_TARGET\",\n        \"AddSearchProvider\",\n        \"AnalyserNode\",\n        \"AnimationEvent\",\n        \"AnonXMLHttpRequest\",\n        \"ApplicationCache\",\n        \"ApplicationCacheErrorEvent\",\n        \"Array\",\n        \"ArrayBuffer\",\n        \"Attr\",\n        \"Audio\",\n        \"AudioBuffer\",\n        \"AudioBufferSourceNode\",\n        \"AudioContext\",\n        \"AudioDestinationNode\",\n        \"AudioListener\",\n        \"AudioNode\",\n        \"AudioParam\",\n        \"AudioProcessingEvent\",\n        \"AudioStreamTrack\",\n        \"AutocompleteErrorEvent\",\n        \"BACK\",\n        \"BAD_BOUNDARYPOINTS_ERR\",\n        \"BANDPASS\",\n        \"BLEND\",\n        \"BLEND_COLOR\",\n        \"BLEND_DST_ALPHA\",\n        \"BLEND_DST_RGB\",\n        \"BLEND_EQUATION\",\n        \"BLEND_EQUATION_ALPHA\",\n        \"BLEND_EQUATION_RGB\",\n        \"BLEND_SRC_ALPHA\",\n        \"BLEND_SRC_RGB\",\n        \"BLUE_BITS\",\n        \"BLUR\",\n        \"BOOL\",\n        \"BOOLEAN_TYPE\",\n        \"BOOL_VEC2\",\n        \"BOOL_VEC3\",\n        \"BOOL_VEC4\",\n        \"BOTH\",\n        \"BROWSER_DEFAULT_WEBGL\",\n        \"BUBBLING_PHASE\",\n        \"BUFFER_SIZE\",\n        \"BUFFER_USAGE\",\n        \"BYTE\",\n        \"BYTES_PER_ELEMENT\",\n        \"BarProp\",\n        \"BaseHref\",\n        \"BatteryManager\",\n        \"BeforeLoadEvent\",\n        \"BeforeUnloadEvent\",\n        \"BiquadFilterNode\",\n        \"Blob\",\n        \"BlobEvent\",\n        \"Boolean\",\n        \"CAPTURING_PHASE\",\n        \"CCW\",\n        \"CDATASection\",\n        \"CDATA_SECTION_NODE\",\n        \"CHANGE\",\n        \"CHARSET_RULE\",\n        \"CHECKING\",\n        \"CLAMP_TO_EDGE\",\n        \"CLICK\",\n        \"CLOSED\",\n        \"CLOSING\",\n        \"COLOR_ATTACHMENT0\",\n        \"COLOR_BUFFER_BIT\",\n        \"COLOR_CLEAR_VALUE\",\n        \"COLOR_WRITEMASK\",\n        \"COMMENT_NODE\",\n        \"COMPILE_STATUS\",\n        \"COMPRESSED_RGBA_S3TC_DXT1_EXT\",\n        \"COMPRESSED_RGBA_S3TC_DXT3_EXT\",\n        \"COMPRESSED_RGBA_S3TC_DXT5_EXT\",\n        \"COMPRESSED_RGB_S3TC_DXT1_EXT\",\n        \"COMPRESSED_TEXTURE_FORMATS\",\n        \"CONNECTING\",\n        \"CONSTANT_ALPHA\",\n        \"CONSTANT_COLOR\",\n        \"CONSTRAINT_ERR\",\n        \"CONTEXT_LOST_WEBGL\",\n        \"CONTROL_MASK\",\n        \"COUNTER_STYLE_RULE\",\n        \"CSS\",\n        \"CSS2Properties\",\n        \"CSSCharsetRule\",\n        \"CSSConditionRule\",\n        \"CSSCounterStyleRule\",\n        \"CSSFontFaceRule\",\n        \"CSSFontFeatureValuesRule\",\n        \"CSSGroupingRule\",\n        \"CSSImportRule\",\n        \"CSSKeyframeRule\",\n        \"CSSKeyframesRule\",\n        \"CSSMediaRule\",\n        \"CSSMozDocumentRule\",\n        \"CSSNameSpaceRule\",\n        \"CSSPageRule\",\n        \"CSSPrimitiveValue\",\n        \"CSSRule\",\n        \"CSSRuleList\",\n        \"CSSStyleDeclaration\",\n        \"CSSStyleRule\",\n        \"CSSStyleSheet\",\n        \"CSSSupportsRule\",\n        \"CSSUnknownRule\",\n        \"CSSValue\",\n        \"CSSValueList\",\n        \"CSSVariablesDeclaration\",\n        \"CSSVariablesRule\",\n        \"CSSViewportRule\",\n        \"CSS_ATTR\",\n        \"CSS_CM\",\n        \"CSS_COUNTER\",\n        \"CSS_CUSTOM\",\n        \"CSS_DEG\",\n        \"CSS_DIMENSION\",\n        \"CSS_EMS\",\n        \"CSS_EXS\",\n        \"CSS_FILTER_BLUR\",\n        \"CSS_FILTER_BRIGHTNESS\",\n        \"CSS_FILTER_CONTRAST\",\n        \"CSS_FILTER_CUSTOM\",\n        \"CSS_FILTER_DROP_SHADOW\",\n        \"CSS_FILTER_GRAYSCALE\",\n        \"CSS_FILTER_HUE_ROTATE\",\n        \"CSS_FILTER_INVERT\",\n        \"CSS_FILTER_OPACITY\",\n        \"CSS_FILTER_REFERENCE\",\n        \"CSS_FILTER_SATURATE\",\n        \"CSS_FILTER_SEPIA\",\n        \"CSS_GRAD\",\n        \"CSS_HZ\",\n        \"CSS_IDENT\",\n        \"CSS_IN\",\n        \"CSS_INHERIT\",\n        \"CSS_KHZ\",\n        \"CSS_MATRIX\",\n        \"CSS_MATRIX3D\",\n        \"CSS_MM\",\n        \"CSS_MS\",\n        \"CSS_NUMBER\",\n        \"CSS_PC\",\n        \"CSS_PERCENTAGE\",\n        \"CSS_PERSPECTIVE\",\n        \"CSS_PRIMITIVE_VALUE\",\n        \"CSS_PT\",\n        \"CSS_PX\",\n        \"CSS_RAD\",\n        \"CSS_RECT\",\n        \"CSS_RGBCOLOR\",\n        \"CSS_ROTATE\",\n        \"CSS_ROTATE3D\",\n        \"CSS_ROTATEX\",\n        \"CSS_ROTATEY\",\n        \"CSS_ROTATEZ\",\n        \"CSS_S\",\n        \"CSS_SCALE\",\n        \"CSS_SCALE3D\",\n        \"CSS_SCALEX\",\n        \"CSS_SCALEY\",\n        \"CSS_SCALEZ\",\n        \"CSS_SKEW\",\n        \"CSS_SKEWX\",\n        \"CSS_SKEWY\",\n        \"CSS_STRING\",\n        \"CSS_TRANSLATE\",\n        \"CSS_TRANSLATE3D\",\n        \"CSS_TRANSLATEX\",\n        \"CSS_TRANSLATEY\",\n        \"CSS_TRANSLATEZ\",\n        \"CSS_UNKNOWN\",\n        \"CSS_URI\",\n        \"CSS_VALUE_LIST\",\n        \"CSS_VH\",\n        \"CSS_VMAX\",\n        \"CSS_VMIN\",\n        \"CSS_VW\",\n        \"CULL_FACE\",\n        \"CULL_FACE_MODE\",\n        \"CURRENT_PROGRAM\",\n        \"CURRENT_VERTEX_ATTRIB\",\n        \"CUSTOM\",\n        \"CW\",\n        \"CanvasGradient\",\n        \"CanvasPattern\",\n        \"CanvasRenderingContext2D\",\n        \"CaretPosition\",\n        \"ChannelMergerNode\",\n        \"ChannelSplitterNode\",\n        \"CharacterData\",\n        \"ClientRect\",\n        \"ClientRectList\",\n        \"Clipboard\",\n        \"ClipboardEvent\",\n        \"CloseEvent\",\n        \"Collator\",\n        \"CommandEvent\",\n        \"Comment\",\n        \"CompositionEvent\",\n        \"Console\",\n        \"Controllers\",\n        \"ConvolverNode\",\n        \"Counter\",\n        \"Crypto\",\n        \"CryptoKey\",\n        \"CustomEvent\",\n        \"DATABASE_ERR\",\n        \"DATA_CLONE_ERR\",\n        \"DATA_ERR\",\n        \"DBLCLICK\",\n        \"DECR\",\n        \"DECR_WRAP\",\n        \"DELETE_STATUS\",\n        \"DEPTH_ATTACHMENT\",\n        \"DEPTH_BITS\",\n        \"DEPTH_BUFFER_BIT\",\n        \"DEPTH_CLEAR_VALUE\",\n        \"DEPTH_COMPONENT\",\n        \"DEPTH_COMPONENT16\",\n        \"DEPTH_FUNC\",\n        \"DEPTH_RANGE\",\n        \"DEPTH_STENCIL\",\n        \"DEPTH_STENCIL_ATTACHMENT\",\n        \"DEPTH_TEST\",\n        \"DEPTH_WRITEMASK\",\n        \"DIRECTION_DOWN\",\n        \"DIRECTION_LEFT\",\n        \"DIRECTION_RIGHT\",\n        \"DIRECTION_UP\",\n        \"DISABLED\",\n        \"DISPATCH_REQUEST_ERR\",\n        \"DITHER\",\n        \"DOCUMENT_FRAGMENT_NODE\",\n        \"DOCUMENT_NODE\",\n        \"DOCUMENT_POSITION_CONTAINED_BY\",\n        \"DOCUMENT_POSITION_CONTAINS\",\n        \"DOCUMENT_POSITION_DISCONNECTED\",\n        \"DOCUMENT_POSITION_FOLLOWING\",\n        \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\",\n        \"DOCUMENT_POSITION_PRECEDING\",\n        \"DOCUMENT_TYPE_NODE\",\n        \"DOMCursor\",\n        \"DOMError\",\n        \"DOMException\",\n        \"DOMImplementation\",\n        \"DOMImplementationLS\",\n        \"DOMMatrix\",\n        \"DOMMatrixReadOnly\",\n        \"DOMParser\",\n        \"DOMPoint\",\n        \"DOMPointReadOnly\",\n        \"DOMQuad\",\n        \"DOMRect\",\n        \"DOMRectList\",\n        \"DOMRectReadOnly\",\n        \"DOMRequest\",\n        \"DOMSTRING_SIZE_ERR\",\n        \"DOMSettableTokenList\",\n        \"DOMStringList\",\n        \"DOMStringMap\",\n        \"DOMTokenList\",\n        \"DOMTransactionEvent\",\n        \"DOM_DELTA_LINE\",\n        \"DOM_DELTA_PAGE\",\n        \"DOM_DELTA_PIXEL\",\n        \"DOM_INPUT_METHOD_DROP\",\n        \"DOM_INPUT_METHOD_HANDWRITING\",\n        \"DOM_INPUT_METHOD_IME\",\n        \"DOM_INPUT_METHOD_KEYBOARD\",\n        \"DOM_INPUT_METHOD_MULTIMODAL\",\n        \"DOM_INPUT_METHOD_OPTION\",\n        \"DOM_INPUT_METHOD_PASTE\",\n        \"DOM_INPUT_METHOD_SCRIPT\",\n        \"DOM_INPUT_METHOD_UNKNOWN\",\n        \"DOM_INPUT_METHOD_VOICE\",\n        \"DOM_KEY_LOCATION_JOYSTICK\",\n        \"DOM_KEY_LOCATION_LEFT\",\n        \"DOM_KEY_LOCATION_MOBILE\",\n        \"DOM_KEY_LOCATION_NUMPAD\",\n        \"DOM_KEY_LOCATION_RIGHT\",\n        \"DOM_KEY_LOCATION_STANDARD\",\n        \"DOM_VK_0\",\n        \"DOM_VK_1\",\n        \"DOM_VK_2\",\n        \"DOM_VK_3\",\n        \"DOM_VK_4\",\n        \"DOM_VK_5\",\n        \"DOM_VK_6\",\n        \"DOM_VK_7\",\n        \"DOM_VK_8\",\n        \"DOM_VK_9\",\n        \"DOM_VK_A\",\n        \"DOM_VK_ACCEPT\",\n        \"DOM_VK_ADD\",\n        \"DOM_VK_ALT\",\n        \"DOM_VK_ALTGR\",\n        \"DOM_VK_AMPERSAND\",\n        \"DOM_VK_ASTERISK\",\n        \"DOM_VK_AT\",\n        \"DOM_VK_ATTN\",\n        \"DOM_VK_B\",\n        \"DOM_VK_BACKSPACE\",\n        \"DOM_VK_BACK_QUOTE\",\n        \"DOM_VK_BACK_SLASH\",\n        \"DOM_VK_BACK_SPACE\",\n        \"DOM_VK_C\",\n        \"DOM_VK_CANCEL\",\n        \"DOM_VK_CAPS_LOCK\",\n        \"DOM_VK_CIRCUMFLEX\",\n        \"DOM_VK_CLEAR\",\n        \"DOM_VK_CLOSE_BRACKET\",\n        \"DOM_VK_CLOSE_CURLY_BRACKET\",\n        \"DOM_VK_CLOSE_PAREN\",\n        \"DOM_VK_COLON\",\n        \"DOM_VK_COMMA\",\n        \"DOM_VK_CONTEXT_MENU\",\n        \"DOM_VK_CONTROL\",\n        \"DOM_VK_CONVERT\",\n        \"DOM_VK_CRSEL\",\n        \"DOM_VK_CTRL\",\n        \"DOM_VK_D\",\n        \"DOM_VK_DECIMAL\",\n        \"DOM_VK_DELETE\",\n        \"DOM_VK_DIVIDE\",\n        \"DOM_VK_DOLLAR\",\n        \"DOM_VK_DOUBLE_QUOTE\",\n        \"DOM_VK_DOWN\",\n        \"DOM_VK_E\",\n        \"DOM_VK_EISU\",\n        \"DOM_VK_END\",\n        \"DOM_VK_ENTER\",\n        \"DOM_VK_EQUALS\",\n        \"DOM_VK_EREOF\",\n        \"DOM_VK_ESCAPE\",\n        \"DOM_VK_EXCLAMATION\",\n        \"DOM_VK_EXECUTE\",\n        \"DOM_VK_EXSEL\",\n        \"DOM_VK_F\",\n        \"DOM_VK_F1\",\n        \"DOM_VK_F10\",\n        \"DOM_VK_F11\",\n        \"DOM_VK_F12\",\n        \"DOM_VK_F13\",\n        \"DOM_VK_F14\",\n        \"DOM_VK_F15\",\n        \"DOM_VK_F16\",\n        \"DOM_VK_F17\",\n        \"DOM_VK_F18\",\n        \"DOM_VK_F19\",\n        \"DOM_VK_F2\",\n        \"DOM_VK_F20\",\n        \"DOM_VK_F21\",\n        \"DOM_VK_F22\",\n        \"DOM_VK_F23\",\n        \"DOM_VK_F24\",\n        \"DOM_VK_F25\",\n        \"DOM_VK_F26\",\n        \"DOM_VK_F27\",\n        \"DOM_VK_F28\",\n        \"DOM_VK_F29\",\n        \"DOM_VK_F3\",\n        \"DOM_VK_F30\",\n        \"DOM_VK_F31\",\n        \"DOM_VK_F32\",\n        \"DOM_VK_F33\",\n        \"DOM_VK_F34\",\n        \"DOM_VK_F35\",\n        \"DOM_VK_F36\",\n        \"DOM_VK_F4\",\n        \"DOM_VK_F5\",\n        \"DOM_VK_F6\",\n        \"DOM_VK_F7\",\n        \"DOM_VK_F8\",\n        \"DOM_VK_F9\",\n        \"DOM_VK_FINAL\",\n        \"DOM_VK_FRONT\",\n        \"DOM_VK_G\",\n        \"DOM_VK_GREATER_THAN\",\n        \"DOM_VK_H\",\n        \"DOM_VK_HANGUL\",\n        \"DOM_VK_HANJA\",\n        \"DOM_VK_HASH\",\n        \"DOM_VK_HELP\",\n        \"DOM_VK_HK_TOGGLE\",\n        \"DOM_VK_HOME\",\n        \"DOM_VK_HYPHEN_MINUS\",\n        \"DOM_VK_I\",\n        \"DOM_VK_INSERT\",\n        \"DOM_VK_J\",\n        \"DOM_VK_JUNJA\",\n        \"DOM_VK_K\",\n        \"DOM_VK_KANA\",\n        \"DOM_VK_KANJI\",\n        \"DOM_VK_L\",\n        \"DOM_VK_LEFT\",\n        \"DOM_VK_LEFT_TAB\",\n        \"DOM_VK_LESS_THAN\",\n        \"DOM_VK_M\",\n        \"DOM_VK_META\",\n        \"DOM_VK_MODECHANGE\",\n        \"DOM_VK_MULTIPLY\",\n        \"DOM_VK_N\",\n        \"DOM_VK_NONCONVERT\",\n        \"DOM_VK_NUMPAD0\",\n        \"DOM_VK_NUMPAD1\",\n        \"DOM_VK_NUMPAD2\",\n        \"DOM_VK_NUMPAD3\",\n        \"DOM_VK_NUMPAD4\",\n        \"DOM_VK_NUMPAD5\",\n        \"DOM_VK_NUMPAD6\",\n        \"DOM_VK_NUMPAD7\",\n        \"DOM_VK_NUMPAD8\",\n        \"DOM_VK_NUMPAD9\",\n        \"DOM_VK_NUM_LOCK\",\n        \"DOM_VK_O\",\n        \"DOM_VK_OEM_1\",\n        \"DOM_VK_OEM_102\",\n        \"DOM_VK_OEM_2\",\n        \"DOM_VK_OEM_3\",\n        \"DOM_VK_OEM_4\",\n        \"DOM_VK_OEM_5\",\n        \"DOM_VK_OEM_6\",\n        \"DOM_VK_OEM_7\",\n        \"DOM_VK_OEM_8\",\n        \"DOM_VK_OEM_COMMA\",\n        \"DOM_VK_OEM_MINUS\",\n        \"DOM_VK_OEM_PERIOD\",\n        \"DOM_VK_OEM_PLUS\",\n        \"DOM_VK_OPEN_BRACKET\",\n        \"DOM_VK_OPEN_CURLY_BRACKET\",\n        \"DOM_VK_OPEN_PAREN\",\n        \"DOM_VK_P\",\n        \"DOM_VK_PA1\",\n        \"DOM_VK_PAGEDOWN\",\n        \"DOM_VK_PAGEUP\",\n        \"DOM_VK_PAGE_DOWN\",\n        \"DOM_VK_PAGE_UP\",\n        \"DOM_VK_PAUSE\",\n        \"DOM_VK_PERCENT\",\n        \"DOM_VK_PERIOD\",\n        \"DOM_VK_PIPE\",\n        \"DOM_VK_PLAY\",\n        \"DOM_VK_PLUS\",\n        \"DOM_VK_PRINT\",\n        \"DOM_VK_PRINTSCREEN\",\n        \"DOM_VK_PROCESSKEY\",\n        \"DOM_VK_PROPERITES\",\n        \"DOM_VK_Q\",\n        \"DOM_VK_QUESTION_MARK\",\n        \"DOM_VK_QUOTE\",\n        \"DOM_VK_R\",\n        \"DOM_VK_REDO\",\n        \"DOM_VK_RETURN\",\n        \"DOM_VK_RIGHT\",\n        \"DOM_VK_S\",\n        \"DOM_VK_SCROLL_LOCK\",\n        \"DOM_VK_SELECT\",\n        \"DOM_VK_SEMICOLON\",\n        \"DOM_VK_SEPARATOR\",\n        \"DOM_VK_SHIFT\",\n        \"DOM_VK_SLASH\",\n        \"DOM_VK_SLEEP\",\n        \"DOM_VK_SPACE\",\n        \"DOM_VK_SUBTRACT\",\n        \"DOM_VK_T\",\n        \"DOM_VK_TAB\",\n        \"DOM_VK_TILDE\",\n        \"DOM_VK_U\",\n        \"DOM_VK_UNDERSCORE\",\n        \"DOM_VK_UNDO\",\n        \"DOM_VK_UNICODE\",\n        \"DOM_VK_UP\",\n        \"DOM_VK_V\",\n        \"DOM_VK_VOLUME_DOWN\",\n        \"DOM_VK_VOLUME_MUTE\",\n        \"DOM_VK_VOLUME_UP\",\n        \"DOM_VK_W\",\n        \"DOM_VK_WIN\",\n        \"DOM_VK_WINDOW\",\n        \"DOM_VK_WIN_ICO_00\",\n        \"DOM_VK_WIN_ICO_CLEAR\",\n        \"DOM_VK_WIN_ICO_HELP\",\n        \"DOM_VK_WIN_OEM_ATTN\",\n        \"DOM_VK_WIN_OEM_AUTO\",\n        \"DOM_VK_WIN_OEM_BACKTAB\",\n        \"DOM_VK_WIN_OEM_CLEAR\",\n        \"DOM_VK_WIN_OEM_COPY\",\n        \"DOM_VK_WIN_OEM_CUSEL\",\n        \"DOM_VK_WIN_OEM_ENLW\",\n        \"DOM_VK_WIN_OEM_FINISH\",\n        \"DOM_VK_WIN_OEM_FJ_JISHO\",\n        \"DOM_VK_WIN_OEM_FJ_LOYA\",\n        \"DOM_VK_WIN_OEM_FJ_MASSHOU\",\n        \"DOM_VK_WIN_OEM_FJ_ROYA\",\n        \"DOM_VK_WIN_OEM_FJ_TOUROKU\",\n        \"DOM_VK_WIN_OEM_JUMP\",\n        \"DOM_VK_WIN_OEM_PA1\",\n        \"DOM_VK_WIN_OEM_PA2\",\n        \"DOM_VK_WIN_OEM_PA3\",\n        \"DOM_VK_WIN_OEM_RESET\",\n        \"DOM_VK_WIN_OEM_WSCTRL\",\n        \"DOM_VK_X\",\n        \"DOM_VK_XF86XK_ADD_FAVORITE\",\n        \"DOM_VK_XF86XK_APPLICATION_LEFT\",\n        \"DOM_VK_XF86XK_APPLICATION_RIGHT\",\n        \"DOM_VK_XF86XK_AUDIO_CYCLE_TRACK\",\n        \"DOM_VK_XF86XK_AUDIO_FORWARD\",\n        \"DOM_VK_XF86XK_AUDIO_LOWER_VOLUME\",\n        \"DOM_VK_XF86XK_AUDIO_MEDIA\",\n        \"DOM_VK_XF86XK_AUDIO_MUTE\",\n        \"DOM_VK_XF86XK_AUDIO_NEXT\",\n        \"DOM_VK_XF86XK_AUDIO_PAUSE\",\n        \"DOM_VK_XF86XK_AUDIO_PLAY\",\n        \"DOM_VK_XF86XK_AUDIO_PREV\",\n        \"DOM_VK_XF86XK_AUDIO_RAISE_VOLUME\",\n        \"DOM_VK_XF86XK_AUDIO_RANDOM_PLAY\",\n        \"DOM_VK_XF86XK_AUDIO_RECORD\",\n        \"DOM_VK_XF86XK_AUDIO_REPEAT\",\n        \"DOM_VK_XF86XK_AUDIO_REWIND\",\n        \"DOM_VK_XF86XK_AUDIO_STOP\",\n        \"DOM_VK_XF86XK_AWAY\",\n        \"DOM_VK_XF86XK_BACK\",\n        \"DOM_VK_XF86XK_BACK_FORWARD\",\n        \"DOM_VK_XF86XK_BATTERY\",\n        \"DOM_VK_XF86XK_BLUE\",\n        \"DOM_VK_XF86XK_BLUETOOTH\",\n        \"DOM_VK_XF86XK_BOOK\",\n        \"DOM_VK_XF86XK_BRIGHTNESS_ADJUST\",\n        \"DOM_VK_XF86XK_CALCULATOR\",\n        \"DOM_VK_XF86XK_CALENDAR\",\n        \"DOM_VK_XF86XK_CD\",\n        \"DOM_VK_XF86XK_CLOSE\",\n        \"DOM_VK_XF86XK_COMMUNITY\",\n        \"DOM_VK_XF86XK_CONTRAST_ADJUST\",\n        \"DOM_VK_XF86XK_COPY\",\n        \"DOM_VK_XF86XK_CUT\",\n        \"DOM_VK_XF86XK_CYCLE_ANGLE\",\n        \"DOM_VK_XF86XK_DISPLAY\",\n        \"DOM_VK_XF86XK_DOCUMENTS\",\n        \"DOM_VK_XF86XK_DOS\",\n        \"DOM_VK_XF86XK_EJECT\",\n        \"DOM_VK_XF86XK_EXCEL\",\n        \"DOM_VK_XF86XK_EXPLORER\",\n        \"DOM_VK_XF86XK_FAVORITES\",\n        \"DOM_VK_XF86XK_FINANCE\",\n        \"DOM_VK_XF86XK_FORWARD\",\n        \"DOM_VK_XF86XK_FRAME_BACK\",\n        \"DOM_VK_XF86XK_FRAME_FORWARD\",\n        \"DOM_VK_XF86XK_GAME\",\n        \"DOM_VK_XF86XK_GO\",\n        \"DOM_VK_XF86XK_GREEN\",\n        \"DOM_VK_XF86XK_HIBERNATE\",\n        \"DOM_VK_XF86XK_HISTORY\",\n        \"DOM_VK_XF86XK_HOME_PAGE\",\n        \"DOM_VK_XF86XK_HOT_LINKS\",\n        \"DOM_VK_XF86XK_I_TOUCH\",\n        \"DOM_VK_XF86XK_KBD_BRIGHTNESS_DOWN\",\n        \"DOM_VK_XF86XK_KBD_BRIGHTNESS_UP\",\n        \"DOM_VK_XF86XK_KBD_LIGHT_ON_OFF\",\n        \"DOM_VK_XF86XK_LAUNCH0\",\n        \"DOM_VK_XF86XK_LAUNCH1\",\n        \"DOM_VK_XF86XK_LAUNCH2\",\n        \"DOM_VK_XF86XK_LAUNCH3\",\n        \"DOM_VK_XF86XK_LAUNCH4\",\n        \"DOM_VK_XF86XK_LAUNCH5\",\n        \"DOM_VK_XF86XK_LAUNCH6\",\n        \"DOM_VK_XF86XK_LAUNCH7\",\n        \"DOM_VK_XF86XK_LAUNCH8\",\n        \"DOM_VK_XF86XK_LAUNCH9\",\n        \"DOM_VK_XF86XK_LAUNCH_A\",\n        \"DOM_VK_XF86XK_LAUNCH_B\",\n        \"DOM_VK_XF86XK_LAUNCH_C\",\n        \"DOM_VK_XF86XK_LAUNCH_D\",\n        \"DOM_VK_XF86XK_LAUNCH_E\",\n        \"DOM_VK_XF86XK_LAUNCH_F\",\n        \"DOM_VK_XF86XK_LIGHT_BULB\",\n        \"DOM_VK_XF86XK_LOG_OFF\",\n        \"DOM_VK_XF86XK_MAIL\",\n        \"DOM_VK_XF86XK_MAIL_FORWARD\",\n        \"DOM_VK_XF86XK_MARKET\",\n        \"DOM_VK_XF86XK_MEETING\",\n        \"DOM_VK_XF86XK_MEMO\",\n        \"DOM_VK_XF86XK_MENU_KB\",\n        \"DOM_VK_XF86XK_MENU_PB\",\n        \"DOM_VK_XF86XK_MESSENGER\",\n        \"DOM_VK_XF86XK_MON_BRIGHTNESS_DOWN\",\n        \"DOM_VK_XF86XK_MON_BRIGHTNESS_UP\",\n        \"DOM_VK_XF86XK_MUSIC\",\n        \"DOM_VK_XF86XK_MY_COMPUTER\",\n        \"DOM_VK_XF86XK_MY_SITES\",\n        \"DOM_VK_XF86XK_NEW\",\n        \"DOM_VK_XF86XK_NEWS\",\n        \"DOM_VK_XF86XK_OFFICE_HOME\",\n        \"DOM_VK_XF86XK_OPEN\",\n        \"DOM_VK_XF86XK_OPEN_URL\",\n        \"DOM_VK_XF86XK_OPTION\",\n        \"DOM_VK_XF86XK_PASTE\",\n        \"DOM_VK_XF86XK_PHONE\",\n        \"DOM_VK_XF86XK_PICTURES\",\n        \"DOM_VK_XF86XK_POWER_DOWN\",\n        \"DOM_VK_XF86XK_POWER_OFF\",\n        \"DOM_VK_XF86XK_RED\",\n        \"DOM_VK_XF86XK_REFRESH\",\n        \"DOM_VK_XF86XK_RELOAD\",\n        \"DOM_VK_XF86XK_REPLY\",\n        \"DOM_VK_XF86XK_ROCKER_DOWN\",\n        \"DOM_VK_XF86XK_ROCKER_ENTER\",\n        \"DOM_VK_XF86XK_ROCKER_UP\",\n        \"DOM_VK_XF86XK_ROTATE_WINDOWS\",\n        \"DOM_VK_XF86XK_ROTATION_KB\",\n        \"DOM_VK_XF86XK_ROTATION_PB\",\n        \"DOM_VK_XF86XK_SAVE\",\n        \"DOM_VK_XF86XK_SCREEN_SAVER\",\n        \"DOM_VK_XF86XK_SCROLL_CLICK\",\n        \"DOM_VK_XF86XK_SCROLL_DOWN\",\n        \"DOM_VK_XF86XK_SCROLL_UP\",\n        \"DOM_VK_XF86XK_SEARCH\",\n        \"DOM_VK_XF86XK_SEND\",\n        \"DOM_VK_XF86XK_SHOP\",\n        \"DOM_VK_XF86XK_SPELL\",\n        \"DOM_VK_XF86XK_SPLIT_SCREEN\",\n        \"DOM_VK_XF86XK_STANDBY\",\n        \"DOM_VK_XF86XK_START\",\n        \"DOM_VK_XF86XK_STOP\",\n        \"DOM_VK_XF86XK_SUBTITLE\",\n        \"DOM_VK_XF86XK_SUPPORT\",\n        \"DOM_VK_XF86XK_SUSPEND\",\n        \"DOM_VK_XF86XK_TASK_PANE\",\n        \"DOM_VK_XF86XK_TERMINAL\",\n        \"DOM_VK_XF86XK_TIME\",\n        \"DOM_VK_XF86XK_TOOLS\",\n        \"DOM_VK_XF86XK_TOP_MENU\",\n        \"DOM_VK_XF86XK_TO_DO_LIST\",\n        \"DOM_VK_XF86XK_TRAVEL\",\n        \"DOM_VK_XF86XK_USER1KB\",\n        \"DOM_VK_XF86XK_USER2KB\",\n        \"DOM_VK_XF86XK_USER_PB\",\n        \"DOM_VK_XF86XK_UWB\",\n        \"DOM_VK_XF86XK_VENDOR_HOME\",\n        \"DOM_VK_XF86XK_VIDEO\",\n        \"DOM_VK_XF86XK_VIEW\",\n        \"DOM_VK_XF86XK_WAKE_UP\",\n        \"DOM_VK_XF86XK_WEB_CAM\",\n        \"DOM_VK_XF86XK_WHEEL_BUTTON\",\n        \"DOM_VK_XF86XK_WLAN\",\n        \"DOM_VK_XF86XK_WORD\",\n        \"DOM_VK_XF86XK_WWW\",\n        \"DOM_VK_XF86XK_XFER\",\n        \"DOM_VK_XF86XK_YELLOW\",\n        \"DOM_VK_XF86XK_ZOOM_IN\",\n        \"DOM_VK_XF86XK_ZOOM_OUT\",\n        \"DOM_VK_Y\",\n        \"DOM_VK_Z\",\n        \"DOM_VK_ZOOM\",\n        \"DONE\",\n        \"DONT_CARE\",\n        \"DOWNLOADING\",\n        \"DRAGDROP\",\n        \"DST_ALPHA\",\n        \"DST_COLOR\",\n        \"DYNAMIC_DRAW\",\n        \"DataChannel\",\n        \"DataTransfer\",\n        \"DataTransferItem\",\n        \"DataTransferItemList\",\n        \"DataView\",\n        \"Date\",\n        \"DateTimeFormat\",\n        \"DelayNode\",\n        \"DesktopNotification\",\n        \"DesktopNotificationCenter\",\n        \"DeviceLightEvent\",\n        \"DeviceMotionEvent\",\n        \"DeviceOrientationEvent\",\n        \"DeviceProximityEvent\",\n        \"DeviceStorage\",\n        \"DeviceStorageChangeEvent\",\n        \"Document\",\n        \"DocumentFragment\",\n        \"DocumentType\",\n        \"DragEvent\",\n        \"DynamicsCompressorNode\",\n        \"E\",\n        \"ELEMENT_ARRAY_BUFFER\",\n        \"ELEMENT_ARRAY_BUFFER_BINDING\",\n        \"ELEMENT_NODE\",\n        \"EMPTY\",\n        \"ENCODING_ERR\",\n        \"ENDED\",\n        \"END_TO_END\",\n        \"END_TO_START\",\n        \"ENTITY_NODE\",\n        \"ENTITY_REFERENCE_NODE\",\n        \"EPSILON\",\n        \"EQUAL\",\n        \"EQUALPOWER\",\n        \"ERROR\",\n        \"EXPONENTIAL_DISTANCE\",\n        \"Element\",\n        \"ElementQuery\",\n        \"Entity\",\n        \"EntityReference\",\n        \"Error\",\n        \"ErrorEvent\",\n        \"EvalError\",\n        \"Event\",\n        \"EventException\",\n        \"EventSource\",\n        \"EventTarget\",\n        \"External\",\n        \"FASTEST\",\n        \"FIDOSDK\",\n        \"FILTER_ACCEPT\",\n        \"FILTER_INTERRUPT\",\n        \"FILTER_REJECT\",\n        \"FILTER_SKIP\",\n        \"FINISHED_STATE\",\n        \"FIRST_ORDERED_NODE_TYPE\",\n        \"FLOAT\",\n        \"FLOAT_MAT2\",\n        \"FLOAT_MAT3\",\n        \"FLOAT_MAT4\",\n        \"FLOAT_VEC2\",\n        \"FLOAT_VEC3\",\n        \"FLOAT_VEC4\",\n        \"FOCUS\",\n        \"FONT_FACE_RULE\",\n        \"FONT_FEATURE_VALUES_RULE\",\n        \"FRAGMENT_SHADER\",\n        \"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\",\n        \"FRAMEBUFFER\",\n        \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\",\n        \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\",\n        \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\",\n        \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\",\n        \"FRAMEBUFFER_BINDING\",\n        \"FRAMEBUFFER_COMPLETE\",\n        \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\",\n        \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\",\n        \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\",\n        \"FRAMEBUFFER_UNSUPPORTED\",\n        \"FRONT\",\n        \"FRONT_AND_BACK\",\n        \"FRONT_FACE\",\n        \"FUNC_ADD\",\n        \"FUNC_REVERSE_SUBTRACT\",\n        \"FUNC_SUBTRACT\",\n        \"Feed\",\n        \"FeedEntry\",\n        \"File\",\n        \"FileError\",\n        \"FileList\",\n        \"FileReader\",\n        \"FindInPage\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"FocusEvent\",\n        \"FontFace\",\n        \"FormData\",\n        \"Function\",\n        \"GENERATE_MIPMAP_HINT\",\n        \"GEQUAL\",\n        \"GREATER\",\n        \"GREEN_BITS\",\n        \"GainNode\",\n        \"Gamepad\",\n        \"GamepadButton\",\n        \"GamepadEvent\",\n        \"GestureEvent\",\n        \"HAVE_CURRENT_DATA\",\n        \"HAVE_ENOUGH_DATA\",\n        \"HAVE_FUTURE_DATA\",\n        \"HAVE_METADATA\",\n        \"HAVE_NOTHING\",\n        \"HEADERS_RECEIVED\",\n        \"HIDDEN\",\n        \"HIERARCHY_REQUEST_ERR\",\n        \"HIGHPASS\",\n        \"HIGHSHELF\",\n        \"HIGH_FLOAT\",\n        \"HIGH_INT\",\n        \"HORIZONTAL\",\n        \"HORIZONTAL_AXIS\",\n        \"HRTF\",\n        \"HTMLAllCollection\",\n        \"HTMLAnchorElement\",\n        \"HTMLAppletElement\",\n        \"HTMLAreaElement\",\n        \"HTMLAudioElement\",\n        \"HTMLBRElement\",\n        \"HTMLBaseElement\",\n        \"HTMLBaseFontElement\",\n        \"HTMLBlockquoteElement\",\n        \"HTMLBodyElement\",\n        \"HTMLButtonElement\",\n        \"HTMLCanvasElement\",\n        \"HTMLCollection\",\n        \"HTMLCommandElement\",\n        \"HTMLContentElement\",\n        \"HTMLDListElement\",\n        \"HTMLDataElement\",\n        \"HTMLDataListElement\",\n        \"HTMLDetailsElement\",\n        \"HTMLDialogElement\",\n        \"HTMLDirectoryElement\",\n        \"HTMLDivElement\",\n        \"HTMLDocument\",\n        \"HTMLElement\",\n        \"HTMLEmbedElement\",\n        \"HTMLFieldSetElement\",\n        \"HTMLFontElement\",\n        \"HTMLFormControlsCollection\",\n        \"HTMLFormElement\",\n        \"HTMLFrameElement\",\n        \"HTMLFrameSetElement\",\n        \"HTMLHRElement\",\n        \"HTMLHeadElement\",\n        \"HTMLHeadingElement\",\n        \"HTMLHtmlElement\",\n        \"HTMLIFrameElement\",\n        \"HTMLImageElement\",\n        \"HTMLInputElement\",\n        \"HTMLIsIndexElement\",\n        \"HTMLKeygenElement\",\n        \"HTMLLIElement\",\n        \"HTMLLabelElement\",\n        \"HTMLLegendElement\",\n        \"HTMLLinkElement\",\n        \"HTMLMapElement\",\n        \"HTMLMarqueeElement\",\n        \"HTMLMediaElement\",\n        \"HTMLMenuElement\",\n        \"HTMLMenuItemElement\",\n        \"HTMLMetaElement\",\n        \"HTMLMeterElement\",\n        \"HTMLModElement\",\n        \"HTMLOListElement\",\n        \"HTMLObjectElement\",\n        \"HTMLOptGroupElement\",\n        \"HTMLOptionElement\",\n        \"HTMLOptionsCollection\",\n        \"HTMLOutputElement\",\n        \"HTMLParagraphElement\",\n        \"HTMLParamElement\",\n        \"HTMLPictureElement\",\n        \"HTMLPreElement\",\n        \"HTMLProgressElement\",\n        \"HTMLPropertiesCollection\",\n        \"HTMLQuoteElement\",\n        \"HTMLScriptElement\",\n        \"HTMLSelectElement\",\n        \"HTMLShadowElement\",\n        \"HTMLSourceElement\",\n        \"HTMLSpanElement\",\n        \"HTMLStyleElement\",\n        \"HTMLTableCaptionElement\",\n        \"HTMLTableCellElement\",\n        \"HTMLTableColElement\",\n        \"HTMLTableElement\",\n        \"HTMLTableRowElement\",\n        \"HTMLTableSectionElement\",\n        \"HTMLTemplateElement\",\n        \"HTMLTextAreaElement\",\n        \"HTMLTimeElement\",\n        \"HTMLTitleElement\",\n        \"HTMLTrackElement\",\n        \"HTMLUListElement\",\n        \"HTMLUnknownElement\",\n        \"HTMLVideoElement\",\n        \"HashChangeEvent\",\n        \"Headers\",\n        \"History\",\n        \"ICE_CHECKING\",\n        \"ICE_CLOSED\",\n        \"ICE_COMPLETED\",\n        \"ICE_CONNECTED\",\n        \"ICE_FAILED\",\n        \"ICE_GATHERING\",\n        \"ICE_WAITING\",\n        \"IDBCursor\",\n        \"IDBCursorWithValue\",\n        \"IDBDatabase\",\n        \"IDBDatabaseException\",\n        \"IDBFactory\",\n        \"IDBFileHandle\",\n        \"IDBFileRequest\",\n        \"IDBIndex\",\n        \"IDBKeyRange\",\n        \"IDBMutableFile\",\n        \"IDBObjectStore\",\n        \"IDBOpenDBRequest\",\n        \"IDBRequest\",\n        \"IDBTransaction\",\n        \"IDBVersionChangeEvent\",\n        \"IDLE\",\n        \"IMPLEMENTATION_COLOR_READ_FORMAT\",\n        \"IMPLEMENTATION_COLOR_READ_TYPE\",\n        \"IMPORT_RULE\",\n        \"INCR\",\n        \"INCR_WRAP\",\n        \"INDEX_SIZE_ERR\",\n        \"INT\",\n        \"INT_VEC2\",\n        \"INT_VEC3\",\n        \"INT_VEC4\",\n        \"INUSE_ATTRIBUTE_ERR\",\n        \"INVALID_ACCESS_ERR\",\n        \"INVALID_CHARACTER_ERR\",\n        \"INVALID_ENUM\",\n        \"INVALID_EXPRESSION_ERR\",\n        \"INVALID_FRAMEBUFFER_OPERATION\",\n        \"INVALID_MODIFICATION_ERR\",\n        \"INVALID_NODE_TYPE_ERR\",\n        \"INVALID_OPERATION\",\n        \"INVALID_STATE_ERR\",\n        \"INVALID_VALUE\",\n        \"INVERSE_DISTANCE\",\n        \"INVERT\",\n        \"IceCandidate\",\n        \"Image\",\n        \"ImageBitmap\",\n        \"ImageData\",\n        \"Infinity\",\n        \"InputEvent\",\n        \"InputMethodContext\",\n        \"InstallTrigger\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Int8Array\",\n        \"Intent\",\n        \"InternalError\",\n        \"Intl\",\n        \"IsSearchProviderInstalled\",\n        \"Iterator\",\n        \"JSON\",\n        \"KEEP\",\n        \"KEYDOWN\",\n        \"KEYFRAMES_RULE\",\n        \"KEYFRAME_RULE\",\n        \"KEYPRESS\",\n        \"KEYUP\",\n        \"KeyEvent\",\n        \"KeyboardEvent\",\n        \"LENGTHADJUST_SPACING\",\n        \"LENGTHADJUST_SPACINGANDGLYPHS\",\n        \"LENGTHADJUST_UNKNOWN\",\n        \"LEQUAL\",\n        \"LESS\",\n        \"LINEAR\",\n        \"LINEAR_DISTANCE\",\n        \"LINEAR_MIPMAP_LINEAR\",\n        \"LINEAR_MIPMAP_NEAREST\",\n        \"LINES\",\n        \"LINE_LOOP\",\n        \"LINE_STRIP\",\n        \"LINE_WIDTH\",\n        \"LINK_STATUS\",\n        \"LIVE\",\n        \"LN10\",\n        \"LN2\",\n        \"LOADED\",\n        \"LOADING\",\n        \"LOG10E\",\n        \"LOG2E\",\n        \"LOWPASS\",\n        \"LOWSHELF\",\n        \"LOW_FLOAT\",\n        \"LOW_INT\",\n        \"LSException\",\n        \"LSParserFilter\",\n        \"LUMINANCE\",\n        \"LUMINANCE_ALPHA\",\n        \"LocalMediaStream\",\n        \"Location\",\n        \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\",\n        \"MAX_CUBE_MAP_TEXTURE_SIZE\",\n        \"MAX_FRAGMENT_UNIFORM_VECTORS\",\n        \"MAX_RENDERBUFFER_SIZE\",\n        \"MAX_SAFE_INTEGER\",\n        \"MAX_TEXTURE_IMAGE_UNITS\",\n        \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\",\n        \"MAX_TEXTURE_SIZE\",\n        \"MAX_VALUE\",\n        \"MAX_VARYING_VECTORS\",\n        \"MAX_VERTEX_ATTRIBS\",\n        \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\",\n        \"MAX_VERTEX_UNIFORM_VECTORS\",\n        \"MAX_VIEWPORT_DIMS\",\n        \"MEDIA_ERR_ABORTED\",\n        \"MEDIA_ERR_DECODE\",\n        \"MEDIA_ERR_ENCRYPTED\",\n        \"MEDIA_ERR_NETWORK\",\n        \"MEDIA_ERR_SRC_NOT_SUPPORTED\",\n        \"MEDIA_KEYERR_CLIENT\",\n        \"MEDIA_KEYERR_DOMAIN\",\n        \"MEDIA_KEYERR_HARDWARECHANGE\",\n        \"MEDIA_KEYERR_OUTPUT\",\n        \"MEDIA_KEYERR_SERVICE\",\n        \"MEDIA_KEYERR_UNKNOWN\",\n        \"MEDIA_RULE\",\n        \"MEDIUM_FLOAT\",\n        \"MEDIUM_INT\",\n        \"META_MASK\",\n        \"MIN_SAFE_INTEGER\",\n        \"MIN_VALUE\",\n        \"MIRRORED_REPEAT\",\n        \"MODE_ASYNCHRONOUS\",\n        \"MODE_SYNCHRONOUS\",\n        \"MODIFICATION\",\n        \"MOUSEDOWN\",\n        \"MOUSEDRAG\",\n        \"MOUSEMOVE\",\n        \"MOUSEOUT\",\n        \"MOUSEOVER\",\n        \"MOUSEUP\",\n        \"MOZ_KEYFRAMES_RULE\",\n        \"MOZ_KEYFRAME_RULE\",\n        \"MOZ_SOURCE_CURSOR\",\n        \"MOZ_SOURCE_ERASER\",\n        \"MOZ_SOURCE_KEYBOARD\",\n        \"MOZ_SOURCE_MOUSE\",\n        \"MOZ_SOURCE_PEN\",\n        \"MOZ_SOURCE_TOUCH\",\n        \"MOZ_SOURCE_UNKNOWN\",\n        \"MSGESTURE_FLAG_BEGIN\",\n        \"MSGESTURE_FLAG_CANCEL\",\n        \"MSGESTURE_FLAG_END\",\n        \"MSGESTURE_FLAG_INERTIA\",\n        \"MSGESTURE_FLAG_NONE\",\n        \"MSPOINTER_TYPE_MOUSE\",\n        \"MSPOINTER_TYPE_PEN\",\n        \"MSPOINTER_TYPE_TOUCH\",\n        \"MS_ASYNC_CALLBACK_STATUS_ASSIGN_DELEGATE\",\n        \"MS_ASYNC_CALLBACK_STATUS_CANCEL\",\n        \"MS_ASYNC_CALLBACK_STATUS_CHOOSEANY\",\n        \"MS_ASYNC_CALLBACK_STATUS_ERROR\",\n        \"MS_ASYNC_CALLBACK_STATUS_JOIN\",\n        \"MS_ASYNC_OP_STATUS_CANCELED\",\n        \"MS_ASYNC_OP_STATUS_ERROR\",\n        \"MS_ASYNC_OP_STATUS_SUCCESS\",\n        \"MS_MANIPULATION_STATE_ACTIVE\",\n        \"MS_MANIPULATION_STATE_CANCELLED\",\n        \"MS_MANIPULATION_STATE_COMMITTED\",\n        \"MS_MANIPULATION_STATE_DRAGGING\",\n        \"MS_MANIPULATION_STATE_INERTIA\",\n        \"MS_MANIPULATION_STATE_PRESELECT\",\n        \"MS_MANIPULATION_STATE_SELECTING\",\n        \"MS_MANIPULATION_STATE_STOPPED\",\n        \"MS_MEDIA_ERR_ENCRYPTED\",\n        \"MS_MEDIA_KEYERR_CLIENT\",\n        \"MS_MEDIA_KEYERR_DOMAIN\",\n        \"MS_MEDIA_KEYERR_HARDWARECHANGE\",\n        \"MS_MEDIA_KEYERR_OUTPUT\",\n        \"MS_MEDIA_KEYERR_SERVICE\",\n        \"MS_MEDIA_KEYERR_UNKNOWN\",\n        \"Map\",\n        \"Math\",\n        \"MediaController\",\n        \"MediaDevices\",\n        \"MediaElementAudioSourceNode\",\n        \"MediaEncryptedEvent\",\n        \"MediaError\",\n        \"MediaKeyError\",\n        \"MediaKeyEvent\",\n        \"MediaKeyMessageEvent\",\n        \"MediaKeyNeededEvent\",\n        \"MediaKeySession\",\n        \"MediaKeyStatusMap\",\n        \"MediaKeySystemAccess\",\n        \"MediaKeys\",\n        \"MediaList\",\n        \"MediaQueryList\",\n        \"MediaQueryListEvent\",\n        \"MediaRecorder\",\n        \"MediaSource\",\n        \"MediaStream\",\n        \"MediaStreamAudioDestinationNode\",\n        \"MediaStreamAudioSourceNode\",\n        \"MediaStreamEvent\",\n        \"MediaStreamTrack\",\n        \"MediaStreamTrackEvent\",\n        \"MessageChannel\",\n        \"MessageEvent\",\n        \"MessagePort\",\n        \"Methods\",\n        \"MimeType\",\n        \"MimeTypeArray\",\n        \"MouseEvent\",\n        \"MouseScrollEvent\",\n        \"MozAnimation\",\n        \"MozAnimationDelay\",\n        \"MozAnimationDirection\",\n        \"MozAnimationDuration\",\n        \"MozAnimationFillMode\",\n        \"MozAnimationIterationCount\",\n        \"MozAnimationName\",\n        \"MozAnimationPlayState\",\n        \"MozAnimationTimingFunction\",\n        \"MozAppearance\",\n        \"MozBackfaceVisibility\",\n        \"MozBinding\",\n        \"MozBorderBottomColors\",\n        \"MozBorderEnd\",\n        \"MozBorderEndColor\",\n        \"MozBorderEndStyle\",\n        \"MozBorderEndWidth\",\n        \"MozBorderImage\",\n        \"MozBorderLeftColors\",\n        \"MozBorderRightColors\",\n        \"MozBorderStart\",\n        \"MozBorderStartColor\",\n        \"MozBorderStartStyle\",\n        \"MozBorderStartWidth\",\n        \"MozBorderTopColors\",\n        \"MozBoxAlign\",\n        \"MozBoxDirection\",\n        \"MozBoxFlex\",\n        \"MozBoxOrdinalGroup\",\n        \"MozBoxOrient\",\n        \"MozBoxPack\",\n        \"MozBoxSizing\",\n        \"MozCSSKeyframeRule\",\n        \"MozCSSKeyframesRule\",\n        \"MozColumnCount\",\n        \"MozColumnFill\",\n        \"MozColumnGap\",\n        \"MozColumnRule\",\n        \"MozColumnRuleColor\",\n        \"MozColumnRuleStyle\",\n        \"MozColumnRuleWidth\",\n        \"MozColumnWidth\",\n        \"MozColumns\",\n        \"MozContactChangeEvent\",\n        \"MozFloatEdge\",\n        \"MozFontFeatureSettings\",\n        \"MozFontLanguageOverride\",\n        \"MozForceBrokenImageIcon\",\n        \"MozHyphens\",\n        \"MozImageRegion\",\n        \"MozMarginEnd\",\n        \"MozMarginStart\",\n        \"MozMmsEvent\",\n        \"MozMmsMessage\",\n        \"MozMobileMessageThread\",\n        \"MozOSXFontSmoothing\",\n        \"MozOrient\",\n        \"MozOutlineRadius\",\n        \"MozOutlineRadiusBottomleft\",\n        \"MozOutlineRadiusBottomright\",\n        \"MozOutlineRadiusTopleft\",\n        \"MozOutlineRadiusTopright\",\n        \"MozPaddingEnd\",\n        \"MozPaddingStart\",\n        \"MozPerspective\",\n        \"MozPerspectiveOrigin\",\n        \"MozPowerManager\",\n        \"MozSettingsEvent\",\n        \"MozSmsEvent\",\n        \"MozSmsMessage\",\n        \"MozStackSizing\",\n        \"MozTabSize\",\n        \"MozTextAlignLast\",\n        \"MozTextDecorationColor\",\n        \"MozTextDecorationLine\",\n        \"MozTextDecorationStyle\",\n        \"MozTextSizeAdjust\",\n        \"MozTransform\",\n        \"MozTransformOrigin\",\n        \"MozTransformStyle\",\n        \"MozTransition\",\n        \"MozTransitionDelay\",\n        \"MozTransitionDuration\",\n        \"MozTransitionProperty\",\n        \"MozTransitionTimingFunction\",\n        \"MozUserFocus\",\n        \"MozUserInput\",\n        \"MozUserModify\",\n        \"MozUserSelect\",\n        \"MozWindowDragging\",\n        \"MozWindowShadow\",\n        \"MutationEvent\",\n        \"MutationObserver\",\n        \"MutationRecord\",\n        \"NAMESPACE_ERR\",\n        \"NAMESPACE_RULE\",\n        \"NEAREST\",\n        \"NEAREST_MIPMAP_LINEAR\",\n        \"NEAREST_MIPMAP_NEAREST\",\n        \"NEGATIVE_INFINITY\",\n        \"NETWORK_EMPTY\",\n        \"NETWORK_ERR\",\n        \"NETWORK_IDLE\",\n        \"NETWORK_LOADED\",\n        \"NETWORK_LOADING\",\n        \"NETWORK_NO_SOURCE\",\n        \"NEVER\",\n        \"NEW\",\n        \"NEXT\",\n        \"NEXT_NO_DUPLICATE\",\n        \"NICEST\",\n        \"NODE_AFTER\",\n        \"NODE_BEFORE\",\n        \"NODE_BEFORE_AND_AFTER\",\n        \"NODE_INSIDE\",\n        \"NONE\",\n        \"NON_TRANSIENT_ERR\",\n        \"NOTATION_NODE\",\n        \"NOTCH\",\n        \"NOTEQUAL\",\n        \"NOT_ALLOWED_ERR\",\n        \"NOT_FOUND_ERR\",\n        \"NOT_READABLE_ERR\",\n        \"NOT_SUPPORTED_ERR\",\n        \"NO_DATA_ALLOWED_ERR\",\n        \"NO_ERR\",\n        \"NO_ERROR\",\n        \"NO_MODIFICATION_ALLOWED_ERR\",\n        \"NUMBER_TYPE\",\n        \"NUM_COMPRESSED_TEXTURE_FORMATS\",\n        \"NaN\",\n        \"NamedNodeMap\",\n        \"Navigator\",\n        \"NearbyLinks\",\n        \"NetworkInformation\",\n        \"Node\",\n        \"NodeFilter\",\n        \"NodeIterator\",\n        \"NodeList\",\n        \"Notation\",\n        \"Notification\",\n        \"NotifyPaintEvent\",\n        \"Number\",\n        \"NumberFormat\",\n        \"OBSOLETE\",\n        \"ONE\",\n        \"ONE_MINUS_CONSTANT_ALPHA\",\n        \"ONE_MINUS_CONSTANT_COLOR\",\n        \"ONE_MINUS_DST_ALPHA\",\n        \"ONE_MINUS_DST_COLOR\",\n        \"ONE_MINUS_SRC_ALPHA\",\n        \"ONE_MINUS_SRC_COLOR\",\n        \"OPEN\",\n        \"OPENED\",\n        \"OPENING\",\n        \"ORDERED_NODE_ITERATOR_TYPE\",\n        \"ORDERED_NODE_SNAPSHOT_TYPE\",\n        \"OUT_OF_MEMORY\",\n        \"Object\",\n        \"OfflineAudioCompletionEvent\",\n        \"OfflineAudioContext\",\n        \"OfflineResourceList\",\n        \"Option\",\n        \"OscillatorNode\",\n        \"OverflowEvent\",\n        \"PACK_ALIGNMENT\",\n        \"PAGE_RULE\",\n        \"PARSE_ERR\",\n        \"PATHSEG_ARC_ABS\",\n        \"PATHSEG_ARC_REL\",\n        \"PATHSEG_CLOSEPATH\",\n        \"PATHSEG_CURVETO_CUBIC_ABS\",\n        \"PATHSEG_CURVETO_CUBIC_REL\",\n        \"PATHSEG_CURVETO_CUBIC_SMOOTH_ABS\",\n        \"PATHSEG_CURVETO_CUBIC_SMOOTH_REL\",\n        \"PATHSEG_CURVETO_QUADRATIC_ABS\",\n        \"PATHSEG_CURVETO_QUADRATIC_REL\",\n        \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS\",\n        \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL\",\n        \"PATHSEG_LINETO_ABS\",\n        \"PATHSEG_LINETO_HORIZONTAL_ABS\",\n        \"PATHSEG_LINETO_HORIZONTAL_REL\",\n        \"PATHSEG_LINETO_REL\",\n        \"PATHSEG_LINETO_VERTICAL_ABS\",\n        \"PATHSEG_LINETO_VERTICAL_REL\",\n        \"PATHSEG_MOVETO_ABS\",\n        \"PATHSEG_MOVETO_REL\",\n        \"PATHSEG_UNKNOWN\",\n        \"PATH_EXISTS_ERR\",\n        \"PEAKING\",\n        \"PERMISSION_DENIED\",\n        \"PERSISTENT\",\n        \"PI\",\n        \"PLAYING_STATE\",\n        \"POINTS\",\n        \"POLYGON_OFFSET_FACTOR\",\n        \"POLYGON_OFFSET_FILL\",\n        \"POLYGON_OFFSET_UNITS\",\n        \"POSITION_UNAVAILABLE\",\n        \"POSITIVE_INFINITY\",\n        \"PREV\",\n        \"PREV_NO_DUPLICATE\",\n        \"PROCESSING_INSTRUCTION_NODE\",\n        \"PageChangeEvent\",\n        \"PageTransitionEvent\",\n        \"PaintRequest\",\n        \"PaintRequestList\",\n        \"PannerNode\",\n        \"Path2D\",\n        \"Performance\",\n        \"PerformanceEntry\",\n        \"PerformanceMark\",\n        \"PerformanceMeasure\",\n        \"PerformanceNavigation\",\n        \"PerformanceResourceTiming\",\n        \"PerformanceTiming\",\n        \"PeriodicWave\",\n        \"Plugin\",\n        \"PluginArray\",\n        \"PopStateEvent\",\n        \"PopupBlockedEvent\",\n        \"ProcessingInstruction\",\n        \"ProgressEvent\",\n        \"Promise\",\n        \"PropertyNodeList\",\n        \"Proxy\",\n        \"PushManager\",\n        \"PushSubscription\",\n        \"Q\",\n        \"QUOTA_ERR\",\n        \"QUOTA_EXCEEDED_ERR\",\n        \"QueryInterface\",\n        \"READ_ONLY\",\n        \"READ_ONLY_ERR\",\n        \"READ_WRITE\",\n        \"RED_BITS\",\n        \"REMOVAL\",\n        \"RENDERBUFFER\",\n        \"RENDERBUFFER_ALPHA_SIZE\",\n        \"RENDERBUFFER_BINDING\",\n        \"RENDERBUFFER_BLUE_SIZE\",\n        \"RENDERBUFFER_DEPTH_SIZE\",\n        \"RENDERBUFFER_GREEN_SIZE\",\n        \"RENDERBUFFER_HEIGHT\",\n        \"RENDERBUFFER_INTERNAL_FORMAT\",\n        \"RENDERBUFFER_RED_SIZE\",\n        \"RENDERBUFFER_STENCIL_SIZE\",\n        \"RENDERBUFFER_WIDTH\",\n        \"RENDERER\",\n        \"RENDERING_INTENT_ABSOLUTE_COLORIMETRIC\",\n        \"RENDERING_INTENT_AUTO\",\n        \"RENDERING_INTENT_PERCEPTUAL\",\n        \"RENDERING_INTENT_RELATIVE_COLORIMETRIC\",\n        \"RENDERING_INTENT_SATURATION\",\n        \"RENDERING_INTENT_UNKNOWN\",\n        \"REPEAT\",\n        \"REPLACE\",\n        \"RGB\",\n        \"RGB565\",\n        \"RGB5_A1\",\n        \"RGBA\",\n        \"RGBA4\",\n        \"RGBColor\",\n        \"ROTATION_CLOCKWISE\",\n        \"ROTATION_COUNTERCLOCKWISE\",\n        \"RTCDataChannelEvent\",\n        \"RTCIceCandidate\",\n        \"RTCPeerConnectionIceEvent\",\n        \"RTCRtpReceiver\",\n        \"RTCRtpSender\",\n        \"RTCSessionDescription\",\n        \"RTCStatsReport\",\n        \"RadioNodeList\",\n        \"Range\",\n        \"RangeError\",\n        \"RangeException\",\n        \"RecordErrorEvent\",\n        \"Rect\",\n        \"ReferenceError\",\n        \"RegExp\",\n        \"Request\",\n        \"Response\",\n        \"SAMPLER_2D\",\n        \"SAMPLER_CUBE\",\n        \"SAMPLES\",\n        \"SAMPLE_ALPHA_TO_COVERAGE\",\n        \"SAMPLE_BUFFERS\",\n        \"SAMPLE_COVERAGE\",\n        \"SAMPLE_COVERAGE_INVERT\",\n        \"SAMPLE_COVERAGE_VALUE\",\n        \"SAWTOOTH\",\n        \"SCHEDULED_STATE\",\n        \"SCISSOR_BOX\",\n        \"SCISSOR_TEST\",\n        \"SCROLL_PAGE_DOWN\",\n        \"SCROLL_PAGE_UP\",\n        \"SDP_ANSWER\",\n        \"SDP_OFFER\",\n        \"SDP_PRANSWER\",\n        \"SECURITY_ERR\",\n        \"SELECT\",\n        \"SERIALIZE_ERR\",\n        \"SEVERITY_ERROR\",\n        \"SEVERITY_FATAL_ERROR\",\n        \"SEVERITY_WARNING\",\n        \"SHADER_COMPILER\",\n        \"SHADER_TYPE\",\n        \"SHADING_LANGUAGE_VERSION\",\n        \"SHIFT_MASK\",\n        \"SHORT\",\n        \"SHOWING\",\n        \"SHOW_ALL\",\n        \"SHOW_ATTRIBUTE\",\n        \"SHOW_CDATA_SECTION\",\n        \"SHOW_COMMENT\",\n        \"SHOW_DOCUMENT\",\n        \"SHOW_DOCUMENT_FRAGMENT\",\n        \"SHOW_DOCUMENT_TYPE\",\n        \"SHOW_ELEMENT\",\n        \"SHOW_ENTITY\",\n        \"SHOW_ENTITY_REFERENCE\",\n        \"SHOW_NOTATION\",\n        \"SHOW_PROCESSING_INSTRUCTION\",\n        \"SHOW_TEXT\",\n        \"SINE\",\n        \"SOUNDFIELD\",\n        \"SQLException\",\n        \"SQRT1_2\",\n        \"SQRT2\",\n        \"SQUARE\",\n        \"SRC_ALPHA\",\n        \"SRC_ALPHA_SATURATE\",\n        \"SRC_COLOR\",\n        \"START_TO_END\",\n        \"START_TO_START\",\n        \"STATIC_DRAW\",\n        \"STENCIL_ATTACHMENT\",\n        \"STENCIL_BACK_FAIL\",\n        \"STENCIL_BACK_FUNC\",\n        \"STENCIL_BACK_PASS_DEPTH_FAIL\",\n        \"STENCIL_BACK_PASS_DEPTH_PASS\",\n        \"STENCIL_BACK_REF\",\n        \"STENCIL_BACK_VALUE_MASK\",\n        \"STENCIL_BACK_WRITEMASK\",\n        \"STENCIL_BITS\",\n        \"STENCIL_BUFFER_BIT\",\n        \"STENCIL_CLEAR_VALUE\",\n        \"STENCIL_FAIL\",\n        \"STENCIL_FUNC\",\n        \"STENCIL_INDEX\",\n        \"STENCIL_INDEX8\",\n        \"STENCIL_PASS_DEPTH_FAIL\",\n        \"STENCIL_PASS_DEPTH_PASS\",\n        \"STENCIL_REF\",\n        \"STENCIL_TEST\",\n        \"STENCIL_VALUE_MASK\",\n        \"STENCIL_WRITEMASK\",\n        \"STREAM_DRAW\",\n        \"STRING_TYPE\",\n        \"STYLE_RULE\",\n        \"SUBPIXEL_BITS\",\n        \"SUPPORTS_RULE\",\n        \"SVGAElement\",\n        \"SVGAltGlyphDefElement\",\n        \"SVGAltGlyphElement\",\n        \"SVGAltGlyphItemElement\",\n        \"SVGAngle\",\n        \"SVGAnimateColorElement\",\n        \"SVGAnimateElement\",\n        \"SVGAnimateMotionElement\",\n        \"SVGAnimateTransformElement\",\n        \"SVGAnimatedAngle\",\n        \"SVGAnimatedBoolean\",\n        \"SVGAnimatedEnumeration\",\n        \"SVGAnimatedInteger\",\n        \"SVGAnimatedLength\",\n        \"SVGAnimatedLengthList\",\n        \"SVGAnimatedNumber\",\n        \"SVGAnimatedNumberList\",\n        \"SVGAnimatedPreserveAspectRatio\",\n        \"SVGAnimatedRect\",\n        \"SVGAnimatedString\",\n        \"SVGAnimatedTransformList\",\n        \"SVGAnimationElement\",\n        \"SVGCircleElement\",\n        \"SVGClipPathElement\",\n        \"SVGColor\",\n        \"SVGComponentTransferFunctionElement\",\n        \"SVGCursorElement\",\n        \"SVGDefsElement\",\n        \"SVGDescElement\",\n        \"SVGDiscardElement\",\n        \"SVGDocument\",\n        \"SVGElement\",\n        \"SVGElementInstance\",\n        \"SVGElementInstanceList\",\n        \"SVGEllipseElement\",\n        \"SVGException\",\n        \"SVGFEBlendElement\",\n        \"SVGFEColorMatrixElement\",\n        \"SVGFEComponentTransferElement\",\n        \"SVGFECompositeElement\",\n        \"SVGFEConvolveMatrixElement\",\n        \"SVGFEDiffuseLightingElement\",\n        \"SVGFEDisplacementMapElement\",\n        \"SVGFEDistantLightElement\",\n        \"SVGFEDropShadowElement\",\n        \"SVGFEFloodElement\",\n        \"SVGFEFuncAElement\",\n        \"SVGFEFuncBElement\",\n        \"SVGFEFuncGElement\",\n        \"SVGFEFuncRElement\",\n        \"SVGFEGaussianBlurElement\",\n        \"SVGFEImageElement\",\n        \"SVGFEMergeElement\",\n        \"SVGFEMergeNodeElement\",\n        \"SVGFEMorphologyElement\",\n        \"SVGFEOffsetElement\",\n        \"SVGFEPointLightElement\",\n        \"SVGFESpecularLightingElement\",\n        \"SVGFESpotLightElement\",\n        \"SVGFETileElement\",\n        \"SVGFETurbulenceElement\",\n        \"SVGFilterElement\",\n        \"SVGFontElement\",\n        \"SVGFontFaceElement\",\n        \"SVGFontFaceFormatElement\",\n        \"SVGFontFaceNameElement\",\n        \"SVGFontFaceSrcElement\",\n        \"SVGFontFaceUriElement\",\n        \"SVGForeignObjectElement\",\n        \"SVGGElement\",\n        \"SVGGeometryElement\",\n        \"SVGGlyphElement\",\n        \"SVGGlyphRefElement\",\n        \"SVGGradientElement\",\n        \"SVGGraphicsElement\",\n        \"SVGHKernElement\",\n        \"SVGImageElement\",\n        \"SVGLength\",\n        \"SVGLengthList\",\n        \"SVGLineElement\",\n        \"SVGLinearGradientElement\",\n        \"SVGMPathElement\",\n        \"SVGMarkerElement\",\n        \"SVGMaskElement\",\n        \"SVGMatrix\",\n        \"SVGMetadataElement\",\n        \"SVGMissingGlyphElement\",\n        \"SVGNumber\",\n        \"SVGNumberList\",\n        \"SVGPaint\",\n        \"SVGPathElement\",\n        \"SVGPathSeg\",\n        \"SVGPathSegArcAbs\",\n        \"SVGPathSegArcRel\",\n        \"SVGPathSegClosePath\",\n        \"SVGPathSegCurvetoCubicAbs\",\n        \"SVGPathSegCurvetoCubicRel\",\n        \"SVGPathSegCurvetoCubicSmoothAbs\",\n        \"SVGPathSegCurvetoCubicSmoothRel\",\n        \"SVGPathSegCurvetoQuadraticAbs\",\n        \"SVGPathSegCurvetoQuadraticRel\",\n        \"SVGPathSegCurvetoQuadraticSmoothAbs\",\n        \"SVGPathSegCurvetoQuadraticSmoothRel\",\n        \"SVGPathSegLinetoAbs\",\n        \"SVGPathSegLinetoHorizontalAbs\",\n        \"SVGPathSegLinetoHorizontalRel\",\n        \"SVGPathSegLinetoRel\",\n        \"SVGPathSegLinetoVerticalAbs\",\n        \"SVGPathSegLinetoVerticalRel\",\n        \"SVGPathSegList\",\n        \"SVGPathSegMovetoAbs\",\n        \"SVGPathSegMovetoRel\",\n        \"SVGPatternElement\",\n        \"SVGPoint\",\n        \"SVGPointList\",\n        \"SVGPolygonElement\",\n        \"SVGPolylineElement\",\n        \"SVGPreserveAspectRatio\",\n        \"SVGRadialGradientElement\",\n        \"SVGRect\",\n        \"SVGRectElement\",\n        \"SVGRenderingIntent\",\n        \"SVGSVGElement\",\n        \"SVGScriptElement\",\n        \"SVGSetElement\",\n        \"SVGStopElement\",\n        \"SVGStringList\",\n        \"SVGStyleElement\",\n        \"SVGSwitchElement\",\n        \"SVGSymbolElement\",\n        \"SVGTRefElement\",\n        \"SVGTSpanElement\",\n        \"SVGTextContentElement\",\n        \"SVGTextElement\",\n        \"SVGTextPathElement\",\n        \"SVGTextPositioningElement\",\n        \"SVGTitleElement\",\n        \"SVGTransform\",\n        \"SVGTransformList\",\n        \"SVGUnitTypes\",\n        \"SVGUseElement\",\n        \"SVGVKernElement\",\n        \"SVGViewElement\",\n        \"SVGViewSpec\",\n        \"SVGZoomAndPan\",\n        \"SVGZoomEvent\",\n        \"SVG_ANGLETYPE_DEG\",\n        \"SVG_ANGLETYPE_GRAD\",\n        \"SVG_ANGLETYPE_RAD\",\n        \"SVG_ANGLETYPE_UNKNOWN\",\n        \"SVG_ANGLETYPE_UNSPECIFIED\",\n        \"SVG_CHANNEL_A\",\n        \"SVG_CHANNEL_B\",\n        \"SVG_CHANNEL_G\",\n        \"SVG_CHANNEL_R\",\n        \"SVG_CHANNEL_UNKNOWN\",\n        \"SVG_COLORTYPE_CURRENTCOLOR\",\n        \"SVG_COLORTYPE_RGBCOLOR\",\n        \"SVG_COLORTYPE_RGBCOLOR_ICCCOLOR\",\n        \"SVG_COLORTYPE_UNKNOWN\",\n        \"SVG_EDGEMODE_DUPLICATE\",\n        \"SVG_EDGEMODE_NONE\",\n        \"SVG_EDGEMODE_UNKNOWN\",\n        \"SVG_EDGEMODE_WRAP\",\n        \"SVG_FEBLEND_MODE_COLOR\",\n        \"SVG_FEBLEND_MODE_COLOR_BURN\",\n        \"SVG_FEBLEND_MODE_COLOR_DODGE\",\n        \"SVG_FEBLEND_MODE_DARKEN\",\n        \"SVG_FEBLEND_MODE_DIFFERENCE\",\n        \"SVG_FEBLEND_MODE_EXCLUSION\",\n        \"SVG_FEBLEND_MODE_HARD_LIGHT\",\n        \"SVG_FEBLEND_MODE_HUE\",\n        \"SVG_FEBLEND_MODE_LIGHTEN\",\n        \"SVG_FEBLEND_MODE_LUMINOSITY\",\n        \"SVG_FEBLEND_MODE_MULTIPLY\",\n        \"SVG_FEBLEND_MODE_NORMAL\",\n        \"SVG_FEBLEND_MODE_OVERLAY\",\n        \"SVG_FEBLEND_MODE_SATURATION\",\n        \"SVG_FEBLEND_MODE_SCREEN\",\n        \"SVG_FEBLEND_MODE_SOFT_LIGHT\",\n        \"SVG_FEBLEND_MODE_UNKNOWN\",\n        \"SVG_FECOLORMATRIX_TYPE_HUEROTATE\",\n        \"SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA\",\n        \"SVG_FECOLORMATRIX_TYPE_MATRIX\",\n        \"SVG_FECOLORMATRIX_TYPE_SATURATE\",\n        \"SVG_FECOLORMATRIX_TYPE_UNKNOWN\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_GAMMA\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_LINEAR\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_TABLE\",\n        \"SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN\",\n        \"SVG_FECOMPOSITE_OPERATOR_ARITHMETIC\",\n        \"SVG_FECOMPOSITE_OPERATOR_ATOP\",\n        \"SVG_FECOMPOSITE_OPERATOR_IN\",\n        \"SVG_FECOMPOSITE_OPERATOR_OUT\",\n        \"SVG_FECOMPOSITE_OPERATOR_OVER\",\n        \"SVG_FECOMPOSITE_OPERATOR_UNKNOWN\",\n        \"SVG_FECOMPOSITE_OPERATOR_XOR\",\n        \"SVG_INVALID_VALUE_ERR\",\n        \"SVG_LENGTHTYPE_CM\",\n        \"SVG_LENGTHTYPE_EMS\",\n        \"SVG_LENGTHTYPE_EXS\",\n        \"SVG_LENGTHTYPE_IN\",\n        \"SVG_LENGTHTYPE_MM\",\n        \"SVG_LENGTHTYPE_NUMBER\",\n        \"SVG_LENGTHTYPE_PC\",\n        \"SVG_LENGTHTYPE_PERCENTAGE\",\n        \"SVG_LENGTHTYPE_PT\",\n        \"SVG_LENGTHTYPE_PX\",\n        \"SVG_LENGTHTYPE_UNKNOWN\",\n        \"SVG_MARKERUNITS_STROKEWIDTH\",\n        \"SVG_MARKERUNITS_UNKNOWN\",\n        \"SVG_MARKERUNITS_USERSPACEONUSE\",\n        \"SVG_MARKER_ORIENT_ANGLE\",\n        \"SVG_MARKER_ORIENT_AUTO\",\n        \"SVG_MARKER_ORIENT_UNKNOWN\",\n        \"SVG_MASKTYPE_ALPHA\",\n        \"SVG_MASKTYPE_LUMINANCE\",\n        \"SVG_MATRIX_NOT_INVERTABLE\",\n        \"SVG_MEETORSLICE_MEET\",\n        \"SVG_MEETORSLICE_SLICE\",\n        \"SVG_MEETORSLICE_UNKNOWN\",\n        \"SVG_MORPHOLOGY_OPERATOR_DILATE\",\n        \"SVG_MORPHOLOGY_OPERATOR_ERODE\",\n        \"SVG_MORPHOLOGY_OPERATOR_UNKNOWN\",\n        \"SVG_PAINTTYPE_CURRENTCOLOR\",\n        \"SVG_PAINTTYPE_NONE\",\n        \"SVG_PAINTTYPE_RGBCOLOR\",\n        \"SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR\",\n        \"SVG_PAINTTYPE_UNKNOWN\",\n        \"SVG_PAINTTYPE_URI\",\n        \"SVG_PAINTTYPE_URI_CURRENTCOLOR\",\n        \"SVG_PAINTTYPE_URI_NONE\",\n        \"SVG_PAINTTYPE_URI_RGBCOLOR\",\n        \"SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR\",\n        \"SVG_PRESERVEASPECTRATIO_NONE\",\n        \"SVG_PRESERVEASPECTRATIO_UNKNOWN\",\n        \"SVG_PRESERVEASPECTRATIO_XMAXYMAX\",\n        \"SVG_PRESERVEASPECTRATIO_XMAXYMID\",\n        \"SVG_PRESERVEASPECTRATIO_XMAXYMIN\",\n        \"SVG_PRESERVEASPECTRATIO_XMIDYMAX\",\n        \"SVG_PRESERVEASPECTRATIO_XMIDYMID\",\n        \"SVG_PRESERVEASPECTRATIO_XMIDYMIN\",\n        \"SVG_PRESERVEASPECTRATIO_XMINYMAX\",\n        \"SVG_PRESERVEASPECTRATIO_XMINYMID\",\n        \"SVG_PRESERVEASPECTRATIO_XMINYMIN\",\n        \"SVG_SPREADMETHOD_PAD\",\n        \"SVG_SPREADMETHOD_REFLECT\",\n        \"SVG_SPREADMETHOD_REPEAT\",\n        \"SVG_SPREADMETHOD_UNKNOWN\",\n        \"SVG_STITCHTYPE_NOSTITCH\",\n        \"SVG_STITCHTYPE_STITCH\",\n        \"SVG_STITCHTYPE_UNKNOWN\",\n        \"SVG_TRANSFORM_MATRIX\",\n        \"SVG_TRANSFORM_ROTATE\",\n        \"SVG_TRANSFORM_SCALE\",\n        \"SVG_TRANSFORM_SKEWX\",\n        \"SVG_TRANSFORM_SKEWY\",\n        \"SVG_TRANSFORM_TRANSLATE\",\n        \"SVG_TRANSFORM_UNKNOWN\",\n        \"SVG_TURBULENCE_TYPE_FRACTALNOISE\",\n        \"SVG_TURBULENCE_TYPE_TURBULENCE\",\n        \"SVG_TURBULENCE_TYPE_UNKNOWN\",\n        \"SVG_UNIT_TYPE_OBJECTBOUNDINGBOX\",\n        \"SVG_UNIT_TYPE_UNKNOWN\",\n        \"SVG_UNIT_TYPE_USERSPACEONUSE\",\n        \"SVG_WRONG_TYPE_ERR\",\n        \"SVG_ZOOMANDPAN_DISABLE\",\n        \"SVG_ZOOMANDPAN_MAGNIFY\",\n        \"SVG_ZOOMANDPAN_UNKNOWN\",\n        \"SYNTAX_ERR\",\n        \"SavedPages\",\n        \"Screen\",\n        \"ScreenOrientation\",\n        \"Script\",\n        \"ScriptProcessorNode\",\n        \"ScrollAreaEvent\",\n        \"SecurityPolicyViolationEvent\",\n        \"Selection\",\n        \"ServiceWorker\",\n        \"ServiceWorkerContainer\",\n        \"ServiceWorkerRegistration\",\n        \"SessionDescription\",\n        \"Set\",\n        \"ShadowRoot\",\n        \"SharedWorker\",\n        \"SimpleGestureEvent\",\n        \"SpeechSynthesisEvent\",\n        \"SpeechSynthesisUtterance\",\n        \"StopIteration\",\n        \"Storage\",\n        \"StorageEvent\",\n        \"String\",\n        \"StyleSheet\",\n        \"StyleSheetList\",\n        \"SubtleCrypto\",\n        \"Symbol\",\n        \"SyntaxError\",\n        \"TEMPORARY\",\n        \"TEXTPATH_METHODTYPE_ALIGN\",\n        \"TEXTPATH_METHODTYPE_STRETCH\",\n        \"TEXTPATH_METHODTYPE_UNKNOWN\",\n        \"TEXTPATH_SPACINGTYPE_AUTO\",\n        \"TEXTPATH_SPACINGTYPE_EXACT\",\n        \"TEXTPATH_SPACINGTYPE_UNKNOWN\",\n        \"TEXTURE\",\n        \"TEXTURE0\",\n        \"TEXTURE1\",\n        \"TEXTURE10\",\n        \"TEXTURE11\",\n        \"TEXTURE12\",\n        \"TEXTURE13\",\n        \"TEXTURE14\",\n        \"TEXTURE15\",\n        \"TEXTURE16\",\n        \"TEXTURE17\",\n        \"TEXTURE18\",\n        \"TEXTURE19\",\n        \"TEXTURE2\",\n        \"TEXTURE20\",\n        \"TEXTURE21\",\n        \"TEXTURE22\",\n        \"TEXTURE23\",\n        \"TEXTURE24\",\n        \"TEXTURE25\",\n        \"TEXTURE26\",\n        \"TEXTURE27\",\n        \"TEXTURE28\",\n        \"TEXTURE29\",\n        \"TEXTURE3\",\n        \"TEXTURE30\",\n        \"TEXTURE31\",\n        \"TEXTURE4\",\n        \"TEXTURE5\",\n        \"TEXTURE6\",\n        \"TEXTURE7\",\n        \"TEXTURE8\",\n        \"TEXTURE9\",\n        \"TEXTURE_2D\",\n        \"TEXTURE_BINDING_2D\",\n        \"TEXTURE_BINDING_CUBE_MAP\",\n        \"TEXTURE_CUBE_MAP\",\n        \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n        \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n        \"TEXTURE_CUBE_MAP_NEGATIVE_Z\",\n        \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n        \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n        \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n        \"TEXTURE_MAG_FILTER\",\n        \"TEXTURE_MAX_ANISOTROPY_EXT\",\n        \"TEXTURE_MIN_FILTER\",\n        \"TEXTURE_WRAP_S\",\n        \"TEXTURE_WRAP_T\",\n        \"TEXT_NODE\",\n        \"TIMEOUT\",\n        \"TIMEOUT_ERR\",\n        \"TOO_LARGE_ERR\",\n        \"TRANSACTION_INACTIVE_ERR\",\n        \"TRIANGLE\",\n        \"TRIANGLES\",\n        \"TRIANGLE_FAN\",\n        \"TRIANGLE_STRIP\",\n        \"TYPE_BACK_FORWARD\",\n        \"TYPE_ERR\",\n        \"TYPE_MISMATCH_ERR\",\n        \"TYPE_NAVIGATE\",\n        \"TYPE_RELOAD\",\n        \"TYPE_RESERVED\",\n        \"Text\",\n        \"TextDecoder\",\n        \"TextEncoder\",\n        \"TextEvent\",\n        \"TextMetrics\",\n        \"TextTrack\",\n        \"TextTrackCue\",\n        \"TextTrackCueList\",\n        \"TextTrackList\",\n        \"TimeEvent\",\n        \"TimeRanges\",\n        \"Touch\",\n        \"TouchEvent\",\n        \"TouchList\",\n        \"TrackEvent\",\n        \"TransitionEvent\",\n        \"TreeWalker\",\n        \"TypeError\",\n        \"UIEvent\",\n        \"UNCACHED\",\n        \"UNKNOWN_ERR\",\n        \"UNKNOWN_RULE\",\n        \"UNMASKED_RENDERER_WEBGL\",\n        \"UNMASKED_VENDOR_WEBGL\",\n        \"UNORDERED_NODE_ITERATOR_TYPE\",\n        \"UNORDERED_NODE_SNAPSHOT_TYPE\",\n        \"UNPACK_ALIGNMENT\",\n        \"UNPACK_COLORSPACE_CONVERSION_WEBGL\",\n        \"UNPACK_FLIP_Y_WEBGL\",\n        \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\",\n        \"UNSCHEDULED_STATE\",\n        \"UNSENT\",\n        \"UNSIGNED_BYTE\",\n        \"UNSIGNED_INT\",\n        \"UNSIGNED_SHORT\",\n        \"UNSIGNED_SHORT_4_4_4_4\",\n        \"UNSIGNED_SHORT_5_5_5_1\",\n        \"UNSIGNED_SHORT_5_6_5\",\n        \"UNSPECIFIED_EVENT_TYPE_ERR\",\n        \"UPDATEREADY\",\n        \"URIError\",\n        \"URL\",\n        \"URLSearchParams\",\n        \"URLUnencoded\",\n        \"URL_MISMATCH_ERR\",\n        \"UTC\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"UserMessageHandler\",\n        \"UserMessageHandlersNamespace\",\n        \"UserProximityEvent\",\n        \"VALIDATE_STATUS\",\n        \"VALIDATION_ERR\",\n        \"VARIABLES_RULE\",\n        \"VENDOR\",\n        \"VERSION\",\n        \"VERSION_CHANGE\",\n        \"VERSION_ERR\",\n        \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\",\n        \"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\",\n        \"VERTEX_ATTRIB_ARRAY_ENABLED\",\n        \"VERTEX_ATTRIB_ARRAY_NORMALIZED\",\n        \"VERTEX_ATTRIB_ARRAY_POINTER\",\n        \"VERTEX_ATTRIB_ARRAY_SIZE\",\n        \"VERTEX_ATTRIB_ARRAY_STRIDE\",\n        \"VERTEX_ATTRIB_ARRAY_TYPE\",\n        \"VERTEX_SHADER\",\n        \"VERTICAL\",\n        \"VERTICAL_AXIS\",\n        \"VER_ERR\",\n        \"VIEWPORT\",\n        \"VIEWPORT_RULE\",\n        \"VTTCue\",\n        \"VTTRegion\",\n        \"ValidityState\",\n        \"VideoStreamTrack\",\n        \"WEBKIT_FILTER_RULE\",\n        \"WEBKIT_KEYFRAMES_RULE\",\n        \"WEBKIT_KEYFRAME_RULE\",\n        \"WEBKIT_REGION_RULE\",\n        \"WRONG_DOCUMENT_ERR\",\n        \"WaveShaperNode\",\n        \"WeakMap\",\n        \"WeakSet\",\n        \"WebGLActiveInfo\",\n        \"WebGLBuffer\",\n        \"WebGLContextEvent\",\n        \"WebGLFramebuffer\",\n        \"WebGLProgram\",\n        \"WebGLRenderbuffer\",\n        \"WebGLRenderingContext\",\n        \"WebGLShader\",\n        \"WebGLShaderPrecisionFormat\",\n        \"WebGLTexture\",\n        \"WebGLUniformLocation\",\n        \"WebGLVertexArray\",\n        \"WebKitAnimationEvent\",\n        \"WebKitBlobBuilder\",\n        \"WebKitCSSFilterRule\",\n        \"WebKitCSSFilterValue\",\n        \"WebKitCSSKeyframeRule\",\n        \"WebKitCSSKeyframesRule\",\n        \"WebKitCSSMatrix\",\n        \"WebKitCSSRegionRule\",\n        \"WebKitCSSTransformValue\",\n        \"WebKitDataCue\",\n        \"WebKitGamepad\",\n        \"WebKitMediaKeyError\",\n        \"WebKitMediaKeyMessageEvent\",\n        \"WebKitMediaKeySession\",\n        \"WebKitMediaKeys\",\n        \"WebKitMediaSource\",\n        \"WebKitMutationObserver\",\n        \"WebKitNamespace\",\n        \"WebKitPlaybackTargetAvailabilityEvent\",\n        \"WebKitPoint\",\n        \"WebKitShadowRoot\",\n        \"WebKitSourceBuffer\",\n        \"WebKitSourceBufferList\",\n        \"WebKitTransitionEvent\",\n        \"WebSocket\",\n        \"WheelEvent\",\n        \"Window\",\n        \"Worker\",\n        \"XMLDocument\",\n        \"XMLHttpRequest\",\n        \"XMLHttpRequestEventTarget\",\n        \"XMLHttpRequestException\",\n        \"XMLHttpRequestProgressEvent\",\n        \"XMLHttpRequestUpload\",\n        \"XMLSerializer\",\n        \"XMLStylesheetProcessingInstruction\",\n        \"XPathEvaluator\",\n        \"XPathException\",\n        \"XPathExpression\",\n        \"XPathNSResolver\",\n        \"XPathResult\",\n        \"XSLTProcessor\",\n        \"ZERO\",\n        \"_XD0M_\",\n        \"_YD0M_\",\n        \"__defineGetter__\",\n        \"__defineSetter__\",\n        \"__lookupGetter__\",\n        \"__lookupSetter__\",\n        \"__opera\",\n        \"__proto__\",\n        \"_browserjsran\",\n        \"a\",\n        \"aLink\",\n        \"abbr\",\n        \"abort\",\n        \"abs\",\n        \"absolute\",\n        \"acceleration\",\n        \"accelerationIncludingGravity\",\n        \"accelerator\",\n        \"accept\",\n        \"acceptCharset\",\n        \"acceptNode\",\n        \"accessKey\",\n        \"accessKeyLabel\",\n        \"accuracy\",\n        \"acos\",\n        \"acosh\",\n        \"action\",\n        \"actionURL\",\n        \"active\",\n        \"activeCues\",\n        \"activeElement\",\n        \"activeSourceBuffers\",\n        \"activeSourceCount\",\n        \"activeTexture\",\n        \"add\",\n        \"addBehavior\",\n        \"addCandidate\",\n        \"addColorStop\",\n        \"addCue\",\n        \"addElement\",\n        \"addEventListener\",\n        \"addFilter\",\n        \"addFromString\",\n        \"addFromUri\",\n        \"addIceCandidate\",\n        \"addImport\",\n        \"addListener\",\n        \"addNamed\",\n        \"addPageRule\",\n        \"addPath\",\n        \"addPointer\",\n        \"addRange\",\n        \"addRegion\",\n        \"addRule\",\n        \"addSearchEngine\",\n        \"addSourceBuffer\",\n        \"addStream\",\n        \"addTextTrack\",\n        \"addTrack\",\n        \"addWakeLockListener\",\n        \"addedNodes\",\n        \"additionalName\",\n        \"additiveSymbols\",\n        \"addons\",\n        \"adoptNode\",\n        \"adr\",\n        \"advance\",\n        \"alert\",\n        \"algorithm\",\n        \"align\",\n        \"align-content\",\n        \"align-items\",\n        \"align-self\",\n        \"alignContent\",\n        \"alignItems\",\n        \"alignSelf\",\n        \"alignmentBaseline\",\n        \"alinkColor\",\n        \"all\",\n        \"allowFullscreen\",\n        \"allowedDirections\",\n        \"alpha\",\n        \"alt\",\n        \"altGraphKey\",\n        \"altHtml\",\n        \"altKey\",\n        \"altLeft\",\n        \"altitude\",\n        \"altitudeAccuracy\",\n        \"amplitude\",\n        \"ancestorOrigins\",\n        \"anchor\",\n        \"anchorNode\",\n        \"anchorOffset\",\n        \"anchors\",\n        \"angle\",\n        \"animVal\",\n        \"animate\",\n        \"animatedInstanceRoot\",\n        \"animatedNormalizedPathSegList\",\n        \"animatedPathSegList\",\n        \"animatedPoints\",\n        \"animation\",\n        \"animation-delay\",\n        \"animation-direction\",\n        \"animation-duration\",\n        \"animation-fill-mode\",\n        \"animation-iteration-count\",\n        \"animation-name\",\n        \"animation-play-state\",\n        \"animation-timing-function\",\n        \"animationDelay\",\n        \"animationDirection\",\n        \"animationDuration\",\n        \"animationFillMode\",\n        \"animationIterationCount\",\n        \"animationName\",\n        \"animationPlayState\",\n        \"animationStartTime\",\n        \"animationTimingFunction\",\n        \"animationsPaused\",\n        \"anniversary\",\n        \"app\",\n        \"appCodeName\",\n        \"appMinorVersion\",\n        \"appName\",\n        \"appNotifications\",\n        \"appVersion\",\n        \"append\",\n        \"appendBuffer\",\n        \"appendChild\",\n        \"appendData\",\n        \"appendItem\",\n        \"appendMedium\",\n        \"appendNamed\",\n        \"appendRule\",\n        \"appendStream\",\n        \"appendWindowEnd\",\n        \"appendWindowStart\",\n        \"applets\",\n        \"applicationCache\",\n        \"apply\",\n        \"applyElement\",\n        \"arc\",\n        \"arcTo\",\n        \"archive\",\n        \"areas\",\n        \"arguments\",\n        \"arrayBuffer\",\n        \"asin\",\n        \"asinh\",\n        \"assert\",\n        \"assign\",\n        \"async\",\n        \"atEnd\",\n        \"atan\",\n        \"atan2\",\n        \"atanh\",\n        \"atob\",\n        \"attachEvent\",\n        \"attachShader\",\n        \"attachments\",\n        \"attack\",\n        \"attrChange\",\n        \"attrName\",\n        \"attributeName\",\n        \"attributeNamespace\",\n        \"attributes\",\n        \"audioTracks\",\n        \"autoIncrement\",\n        \"autobuffer\",\n        \"autocapitalize\",\n        \"autocomplete\",\n        \"autocorrect\",\n        \"autofocus\",\n        \"autoplay\",\n        \"availHeight\",\n        \"availLeft\",\n        \"availTop\",\n        \"availWidth\",\n        \"availability\",\n        \"available\",\n        \"aversion\",\n        \"axes\",\n        \"axis\",\n        \"azimuth\",\n        \"b\",\n        \"back\",\n        \"backface-visibility\",\n        \"backfaceVisibility\",\n        \"background\",\n        \"background-attachment\",\n        \"background-blend-mode\",\n        \"background-clip\",\n        \"background-color\",\n        \"background-image\",\n        \"background-origin\",\n        \"background-position\",\n        \"background-repeat\",\n        \"background-size\",\n        \"backgroundAttachment\",\n        \"backgroundBlendMode\",\n        \"backgroundClip\",\n        \"backgroundColor\",\n        \"backgroundImage\",\n        \"backgroundOrigin\",\n        \"backgroundPosition\",\n        \"backgroundPositionX\",\n        \"backgroundPositionY\",\n        \"backgroundRepeat\",\n        \"backgroundSize\",\n        \"badInput\",\n        \"balance\",\n        \"baseFrequencyX\",\n        \"baseFrequencyY\",\n        \"baseNode\",\n        \"baseOffset\",\n        \"baseURI\",\n        \"baseVal\",\n        \"baselineShift\",\n        \"battery\",\n        \"bday\",\n        \"beginElement\",\n        \"beginElementAt\",\n        \"beginPath\",\n        \"behavior\",\n        \"behaviorCookie\",\n        \"behaviorPart\",\n        \"behaviorUrns\",\n        \"beta\",\n        \"bezierCurveTo\",\n        \"bgColor\",\n        \"bgProperties\",\n        \"bias\",\n        \"big\",\n        \"binaryType\",\n        \"bind\",\n        \"bindAttribLocation\",\n        \"bindBuffer\",\n        \"bindFramebuffer\",\n        \"bindRenderbuffer\",\n        \"bindTexture\",\n        \"blendColor\",\n        \"blendEquation\",\n        \"blendEquationSeparate\",\n        \"blendFunc\",\n        \"blendFuncSeparate\",\n        \"blink\",\n        \"blob\",\n        \"blockDirection\",\n        \"blue\",\n        \"blur\",\n        \"body\",\n        \"bodyUsed\",\n        \"bold\",\n        \"bookmarks\",\n        \"booleanValue\",\n        \"border\",\n        \"border-bottom\",\n        \"border-bottom-color\",\n        \"border-bottom-left-radius\",\n        \"border-bottom-right-radius\",\n        \"border-bottom-style\",\n        \"border-bottom-width\",\n        \"border-collapse\",\n        \"border-color\",\n        \"border-image\",\n        \"border-image-outset\",\n        \"border-image-repeat\",\n        \"border-image-slice\",\n        \"border-image-source\",\n        \"border-image-width\",\n        \"border-left\",\n        \"border-left-color\",\n        \"border-left-style\",\n        \"border-left-width\",\n        \"border-radius\",\n        \"border-right\",\n        \"border-right-color\",\n        \"border-right-style\",\n        \"border-right-width\",\n        \"border-spacing\",\n        \"border-style\",\n        \"border-top\",\n        \"border-top-color\",\n        \"border-top-left-radius\",\n        \"border-top-right-radius\",\n        \"border-top-style\",\n        \"border-top-width\",\n        \"border-width\",\n        \"borderBottom\",\n        \"borderBottomColor\",\n        \"borderBottomLeftRadius\",\n        \"borderBottomRightRadius\",\n        \"borderBottomStyle\",\n        \"borderBottomWidth\",\n        \"borderCollapse\",\n        \"borderColor\",\n        \"borderColorDark\",\n        \"borderColorLight\",\n        \"borderImage\",\n        \"borderImageOutset\",\n        \"borderImageRepeat\",\n        \"borderImageSlice\",\n        \"borderImageSource\",\n        \"borderImageWidth\",\n        \"borderLeft\",\n        \"borderLeftColor\",\n        \"borderLeftStyle\",\n        \"borderLeftWidth\",\n        \"borderRadius\",\n        \"borderRight\",\n        \"borderRightColor\",\n        \"borderRightStyle\",\n        \"borderRightWidth\",\n        \"borderSpacing\",\n        \"borderStyle\",\n        \"borderTop\",\n        \"borderTopColor\",\n        \"borderTopLeftRadius\",\n        \"borderTopRightRadius\",\n        \"borderTopStyle\",\n        \"borderTopWidth\",\n        \"borderWidth\",\n        \"bottom\",\n        \"bottomMargin\",\n        \"bound\",\n        \"boundElements\",\n        \"boundingClientRect\",\n        \"boundingHeight\",\n        \"boundingLeft\",\n        \"boundingTop\",\n        \"boundingWidth\",\n        \"bounds\",\n        \"box-decoration-break\",\n        \"box-shadow\",\n        \"box-sizing\",\n        \"boxDecorationBreak\",\n        \"boxShadow\",\n        \"boxSizing\",\n        \"breakAfter\",\n        \"breakBefore\",\n        \"breakInside\",\n        \"browserLanguage\",\n        \"btoa\",\n        \"bubbles\",\n        \"buffer\",\n        \"bufferData\",\n        \"bufferDepth\",\n        \"bufferSize\",\n        \"bufferSubData\",\n        \"buffered\",\n        \"bufferedAmount\",\n        \"buildID\",\n        \"buildNumber\",\n        \"button\",\n        \"buttonID\",\n        \"buttons\",\n        \"byteLength\",\n        \"byteOffset\",\n        \"c\",\n        \"call\",\n        \"caller\",\n        \"canBeFormatted\",\n        \"canBeMounted\",\n        \"canBeShared\",\n        \"canHaveChildren\",\n        \"canHaveHTML\",\n        \"canPlayType\",\n        \"cancel\",\n        \"cancelAnimationFrame\",\n        \"cancelBubble\",\n        \"cancelScheduledValues\",\n        \"cancelable\",\n        \"candidate\",\n        \"canvas\",\n        \"caption\",\n        \"caption-side\",\n        \"captionSide\",\n        \"captureEvents\",\n        \"captureStackTrace\",\n        \"caretPositionFromPoint\",\n        \"caretRangeFromPoint\",\n        \"cast\",\n        \"catch\",\n        \"category\",\n        \"cbrt\",\n        \"cd\",\n        \"ceil\",\n        \"cellIndex\",\n        \"cellPadding\",\n        \"cellSpacing\",\n        \"cells\",\n        \"ch\",\n        \"chOff\",\n        \"chain\",\n        \"challenge\",\n        \"changedTouches\",\n        \"channel\",\n        \"channelCount\",\n        \"channelCountMode\",\n        \"channelInterpretation\",\n        \"char\",\n        \"charAt\",\n        \"charCode\",\n        \"charCodeAt\",\n        \"charIndex\",\n        \"characterSet\",\n        \"charging\",\n        \"chargingTime\",\n        \"charset\",\n        \"checkEnclosure\",\n        \"checkFramebufferStatus\",\n        \"checkIntersection\",\n        \"checkValidity\",\n        \"checked\",\n        \"childElementCount\",\n        \"childNodes\",\n        \"children\",\n        \"chrome\",\n        \"ciphertext\",\n        \"cite\",\n        \"classList\",\n        \"className\",\n        \"classid\",\n        \"clear\",\n        \"clearAttributes\",\n        \"clearColor\",\n        \"clearData\",\n        \"clearDepth\",\n        \"clearImmediate\",\n        \"clearInterval\",\n        \"clearMarks\",\n        \"clearMeasures\",\n        \"clearParameters\",\n        \"clearRect\",\n        \"clearResourceTimings\",\n        \"clearShadow\",\n        \"clearStencil\",\n        \"clearTimeout\",\n        \"clearWatch\",\n        \"click\",\n        \"clickCount\",\n        \"clientHeight\",\n        \"clientInformation\",\n        \"clientLeft\",\n        \"clientRect\",\n        \"clientRects\",\n        \"clientTop\",\n        \"clientWidth\",\n        \"clientX\",\n        \"clientY\",\n        \"clip\",\n        \"clip-path\",\n        \"clip-rule\",\n        \"clipBottom\",\n        \"clipLeft\",\n        \"clipPath\",\n        \"clipPathUnits\",\n        \"clipRight\",\n        \"clipRule\",\n        \"clipTop\",\n        \"clipboardData\",\n        \"clone\",\n        \"cloneContents\",\n        \"cloneNode\",\n        \"cloneRange\",\n        \"close\",\n        \"closePath\",\n        \"closed\",\n        \"closest\",\n        \"clz\",\n        \"clz32\",\n        \"cmp\",\n        \"code\",\n        \"codeBase\",\n        \"codePointAt\",\n        \"codeType\",\n        \"colSpan\",\n        \"collapse\",\n        \"collapseToEnd\",\n        \"collapseToStart\",\n        \"collapsed\",\n        \"collect\",\n        \"colno\",\n        \"color\",\n        \"color-interpolation\",\n        \"color-interpolation-filters\",\n        \"colorDepth\",\n        \"colorInterpolation\",\n        \"colorInterpolationFilters\",\n        \"colorMask\",\n        \"colorType\",\n        \"cols\",\n        \"columnCount\",\n        \"columnFill\",\n        \"columnGap\",\n        \"columnNumber\",\n        \"columnRule\",\n        \"columnRuleColor\",\n        \"columnRuleStyle\",\n        \"columnRuleWidth\",\n        \"columnSpan\",\n        \"columnWidth\",\n        \"columns\",\n        \"command\",\n        \"commitPreferences\",\n        \"commonAncestorContainer\",\n        \"compact\",\n        \"compareBoundaryPoints\",\n        \"compareDocumentPosition\",\n        \"compareEndPoints\",\n        \"compareNode\",\n        \"comparePoint\",\n        \"compatMode\",\n        \"compatible\",\n        \"compile\",\n        \"compileShader\",\n        \"complete\",\n        \"componentFromPoint\",\n        \"compositionEndOffset\",\n        \"compositionStartOffset\",\n        \"compressedTexImage2D\",\n        \"compressedTexSubImage2D\",\n        \"concat\",\n        \"conditionText\",\n        \"coneInnerAngle\",\n        \"coneOuterAngle\",\n        \"coneOuterGain\",\n        \"confirm\",\n        \"confirmComposition\",\n        \"confirmSiteSpecificTrackingException\",\n        \"confirmWebWideTrackingException\",\n        \"connect\",\n        \"connectEnd\",\n        \"connectStart\",\n        \"connected\",\n        \"connection\",\n        \"connectionSpeed\",\n        \"console\",\n        \"consolidate\",\n        \"constrictionActive\",\n        \"constructor\",\n        \"contactID\",\n        \"contains\",\n        \"containsNode\",\n        \"content\",\n        \"contentDocument\",\n        \"contentEditable\",\n        \"contentOverflow\",\n        \"contentScriptType\",\n        \"contentStyleType\",\n        \"contentType\",\n        \"contentWindow\",\n        \"context\",\n        \"contextMenu\",\n        \"contextmenu\",\n        \"continue\",\n        \"continuous\",\n        \"control\",\n        \"controller\",\n        \"controls\",\n        \"convertToSpecifiedUnits\",\n        \"cookie\",\n        \"cookieEnabled\",\n        \"coords\",\n        \"copyFromChannel\",\n        \"copyTexImage2D\",\n        \"copyTexSubImage2D\",\n        \"copyToChannel\",\n        \"copyWithin\",\n        \"correspondingElement\",\n        \"correspondingUseElement\",\n        \"cos\",\n        \"cosh\",\n        \"count\",\n        \"counter-increment\",\n        \"counter-reset\",\n        \"counterIncrement\",\n        \"counterReset\",\n        \"cpuClass\",\n        \"cpuSleepAllowed\",\n        \"create\",\n        \"createAnalyser\",\n        \"createAnswer\",\n        \"createAttribute\",\n        \"createAttributeNS\",\n        \"createBiquadFilter\",\n        \"createBuffer\",\n        \"createBufferSource\",\n        \"createCDATASection\",\n        \"createCSSStyleSheet\",\n        \"createCaption\",\n        \"createChannelMerger\",\n        \"createChannelSplitter\",\n        \"createComment\",\n        \"createContextualFragment\",\n        \"createControlRange\",\n        \"createConvolver\",\n        \"createDTMFSender\",\n        \"createDataChannel\",\n        \"createDelay\",\n        \"createDelayNode\",\n        \"createDocument\",\n        \"createDocumentFragment\",\n        \"createDocumentType\",\n        \"createDynamicsCompressor\",\n        \"createElement\",\n        \"createElementNS\",\n        \"createEntityReference\",\n        \"createEvent\",\n        \"createEventObject\",\n        \"createExpression\",\n        \"createFramebuffer\",\n        \"createFunction\",\n        \"createGain\",\n        \"createGainNode\",\n        \"createHTMLDocument\",\n        \"createImageBitmap\",\n        \"createImageData\",\n        \"createIndex\",\n        \"createJavaScriptNode\",\n        \"createLinearGradient\",\n        \"createMediaElementSource\",\n        \"createMediaKeys\",\n        \"createMediaStreamDestination\",\n        \"createMediaStreamSource\",\n        \"createMutableFile\",\n        \"createNSResolver\",\n        \"createNodeIterator\",\n        \"createNotification\",\n        \"createObjectStore\",\n        \"createObjectURL\",\n        \"createOffer\",\n        \"createOscillator\",\n        \"createPanner\",\n        \"createPattern\",\n        \"createPeriodicWave\",\n        \"createPopup\",\n        \"createProcessingInstruction\",\n        \"createProgram\",\n        \"createRadialGradient\",\n        \"createRange\",\n        \"createRangeCollection\",\n        \"createRenderbuffer\",\n        \"createSVGAngle\",\n        \"createSVGLength\",\n        \"createSVGMatrix\",\n        \"createSVGNumber\",\n        \"createSVGPathSegArcAbs\",\n        \"createSVGPathSegArcRel\",\n        \"createSVGPathSegClosePath\",\n        \"createSVGPathSegCurvetoCubicAbs\",\n        \"createSVGPathSegCurvetoCubicRel\",\n        \"createSVGPathSegCurvetoCubicSmoothAbs\",\n        \"createSVGPathSegCurvetoCubicSmoothRel\",\n        \"createSVGPathSegCurvetoQuadraticAbs\",\n        \"createSVGPathSegCurvetoQuadraticRel\",\n        \"createSVGPathSegCurvetoQuadraticSmoothAbs\",\n        \"createSVGPathSegCurvetoQuadraticSmoothRel\",\n        \"createSVGPathSegLinetoAbs\",\n        \"createSVGPathSegLinetoHorizontalAbs\",\n        \"createSVGPathSegLinetoHorizontalRel\",\n        \"createSVGPathSegLinetoRel\",\n        \"createSVGPathSegLinetoVerticalAbs\",\n        \"createSVGPathSegLinetoVerticalRel\",\n        \"createSVGPathSegMovetoAbs\",\n        \"createSVGPathSegMovetoRel\",\n        \"createSVGPoint\",\n        \"createSVGRect\",\n        \"createSVGTransform\",\n        \"createSVGTransformFromMatrix\",\n        \"createScriptProcessor\",\n        \"createSession\",\n        \"createShader\",\n        \"createShadowRoot\",\n        \"createStereoPanner\",\n        \"createStyleSheet\",\n        \"createTBody\",\n        \"createTFoot\",\n        \"createTHead\",\n        \"createTextNode\",\n        \"createTextRange\",\n        \"createTexture\",\n        \"createTouch\",\n        \"createTouchList\",\n        \"createTreeWalker\",\n        \"createWaveShaper\",\n        \"creationTime\",\n        \"crossOrigin\",\n        \"crypto\",\n        \"csi\",\n        \"cssFloat\",\n        \"cssRules\",\n        \"cssText\",\n        \"cssValueType\",\n        \"ctrlKey\",\n        \"ctrlLeft\",\n        \"cues\",\n        \"cullFace\",\n        \"currentNode\",\n        \"currentPage\",\n        \"currentScale\",\n        \"currentScript\",\n        \"currentSrc\",\n        \"currentState\",\n        \"currentStyle\",\n        \"currentTarget\",\n        \"currentTime\",\n        \"currentTranslate\",\n        \"currentView\",\n        \"cursor\",\n        \"curve\",\n        \"customError\",\n        \"cx\",\n        \"cy\",\n        \"d\",\n        \"data\",\n        \"dataFld\",\n        \"dataFormatAs\",\n        \"dataPageSize\",\n        \"dataSrc\",\n        \"dataTransfer\",\n        \"database\",\n        \"dataset\",\n        \"dateTime\",\n        \"db\",\n        \"debug\",\n        \"debuggerEnabled\",\n        \"declare\",\n        \"decode\",\n        \"decodeAudioData\",\n        \"decodeURI\",\n        \"decodeURIComponent\",\n        \"decrypt\",\n        \"default\",\n        \"defaultCharset\",\n        \"defaultChecked\",\n        \"defaultMuted\",\n        \"defaultPlaybackRate\",\n        \"defaultPrevented\",\n        \"defaultSelected\",\n        \"defaultStatus\",\n        \"defaultURL\",\n        \"defaultValue\",\n        \"defaultView\",\n        \"defaultstatus\",\n        \"defer\",\n        \"defineMagicFunction\",\n        \"defineMagicVariable\",\n        \"defineProperties\",\n        \"defineProperty\",\n        \"delayTime\",\n        \"delete\",\n        \"deleteBuffer\",\n        \"deleteCaption\",\n        \"deleteCell\",\n        \"deleteContents\",\n        \"deleteData\",\n        \"deleteDatabase\",\n        \"deleteFramebuffer\",\n        \"deleteFromDocument\",\n        \"deleteIndex\",\n        \"deleteMedium\",\n        \"deleteObjectStore\",\n        \"deleteProgram\",\n        \"deleteRenderbuffer\",\n        \"deleteRow\",\n        \"deleteRule\",\n        \"deleteShader\",\n        \"deleteTFoot\",\n        \"deleteTHead\",\n        \"deleteTexture\",\n        \"deliverChangeRecords\",\n        \"delivery\",\n        \"deliveryInfo\",\n        \"deliveryStatus\",\n        \"deliveryTimestamp\",\n        \"delta\",\n        \"deltaMode\",\n        \"deltaX\",\n        \"deltaY\",\n        \"deltaZ\",\n        \"depthFunc\",\n        \"depthMask\",\n        \"depthRange\",\n        \"deriveBits\",\n        \"deriveKey\",\n        \"description\",\n        \"deselectAll\",\n        \"designMode\",\n        \"destination\",\n        \"destinationURL\",\n        \"detach\",\n        \"detachEvent\",\n        \"detachShader\",\n        \"detail\",\n        \"detune\",\n        \"devicePixelRatio\",\n        \"deviceXDPI\",\n        \"deviceYDPI\",\n        \"diffuseConstant\",\n        \"digest\",\n        \"dimensions\",\n        \"dir\",\n        \"dirName\",\n        \"direction\",\n        \"dirxml\",\n        \"disable\",\n        \"disableVertexAttribArray\",\n        \"disabled\",\n        \"dischargingTime\",\n        \"disconnect\",\n        \"dispatchEvent\",\n        \"display\",\n        \"distanceModel\",\n        \"divisor\",\n        \"djsapi\",\n        \"djsproxy\",\n        \"doImport\",\n        \"doNotTrack\",\n        \"doScroll\",\n        \"doctype\",\n        \"document\",\n        \"documentElement\",\n        \"documentMode\",\n        \"documentURI\",\n        \"dolphin\",\n        \"dolphinGameCenter\",\n        \"dolphininfo\",\n        \"dolphinmeta\",\n        \"domComplete\",\n        \"domContentLoadedEventEnd\",\n        \"domContentLoadedEventStart\",\n        \"domInteractive\",\n        \"domLoading\",\n        \"domain\",\n        \"domainLookupEnd\",\n        \"domainLookupStart\",\n        \"dominant-baseline\",\n        \"dominantBaseline\",\n        \"done\",\n        \"dopplerFactor\",\n        \"download\",\n        \"dragDrop\",\n        \"draggable\",\n        \"drawArrays\",\n        \"drawArraysInstancedANGLE\",\n        \"drawCustomFocusRing\",\n        \"drawElements\",\n        \"drawElementsInstancedANGLE\",\n        \"drawFocusIfNeeded\",\n        \"drawImage\",\n        \"drawImageFromRect\",\n        \"drawSystemFocusRing\",\n        \"drawingBufferHeight\",\n        \"drawingBufferWidth\",\n        \"dropEffect\",\n        \"droppedVideoFrames\",\n        \"dropzone\",\n        \"dump\",\n        \"duplicate\",\n        \"duration\",\n        \"dvname\",\n        \"dvnum\",\n        \"dx\",\n        \"dy\",\n        \"dynsrc\",\n        \"e\",\n        \"edgeMode\",\n        \"effectAllowed\",\n        \"elapsedTime\",\n        \"elementFromPoint\",\n        \"elements\",\n        \"elevation\",\n        \"ellipse\",\n        \"email\",\n        \"embeds\",\n        \"empty\",\n        \"empty-cells\",\n        \"emptyCells\",\n        \"enable\",\n        \"enableBackground\",\n        \"enableStyleSheetsForSet\",\n        \"enableVertexAttribArray\",\n        \"enabled\",\n        \"enabledPlugin\",\n        \"encode\",\n        \"encodeURI\",\n        \"encodeURIComponent\",\n        \"encoding\",\n        \"encrypt\",\n        \"enctype\",\n        \"end\",\n        \"endContainer\",\n        \"endElement\",\n        \"endElementAt\",\n        \"endOfStream\",\n        \"endOffset\",\n        \"endTime\",\n        \"ended\",\n        \"endsWith\",\n        \"entities\",\n        \"entries\",\n        \"entryType\",\n        \"enumerate\",\n        \"enumerateEditable\",\n        \"error\",\n        \"errorCode\",\n        \"escape\",\n        \"eval\",\n        \"evaluate\",\n        \"event\",\n        \"eventPhase\",\n        \"every\",\n        \"exception\",\n        \"exec\",\n        \"execCommand\",\n        \"execCommandShowHelp\",\n        \"execScript\",\n        \"exitFullscreen\",\n        \"exitPointerLock\",\n        \"exp\",\n        \"expand\",\n        \"expandEntityReferences\",\n        \"expando\",\n        \"expansion\",\n        \"expiryDate\",\n        \"explicitOriginalTarget\",\n        \"expm1\",\n        \"exponent\",\n        \"exponentialRampToValueAtTime\",\n        \"exportKey\",\n        \"extend\",\n        \"extensions\",\n        \"extentNode\",\n        \"extentOffset\",\n        \"external\",\n        \"externalResourcesRequired\",\n        \"extractContents\",\n        \"extractable\",\n        \"f\",\n        \"face\",\n        \"factoryReset\",\n        \"fallback\",\n        \"familyName\",\n        \"farthestViewportElement\",\n        \"fastSeek\",\n        \"fatal\",\n        \"fetch\",\n        \"fetchStart\",\n        \"fftSize\",\n        \"fgColor\",\n        \"fileCreatedDate\",\n        \"fileHandle\",\n        \"fileModifiedDate\",\n        \"fileName\",\n        \"fileSize\",\n        \"fileUpdatedDate\",\n        \"filename\",\n        \"files\",\n        \"fill\",\n        \"fill-opacity\",\n        \"fill-rule\",\n        \"fillOpacity\",\n        \"fillRect\",\n        \"fillRule\",\n        \"fillStyle\",\n        \"fillText\",\n        \"filter\",\n        \"filterResX\",\n        \"filterResY\",\n        \"filterUnits\",\n        \"filters\",\n        \"find\",\n        \"findIndex\",\n        \"findRule\",\n        \"findText\",\n        \"finish\",\n        \"fireEvent\",\n        \"firstChild\",\n        \"firstElementChild\",\n        \"firstPage\",\n        \"fixed\",\n        \"flex\",\n        \"flex-basis\",\n        \"flex-direction\",\n        \"flex-flow\",\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-wrap\",\n        \"flexBasis\",\n        \"flexDirection\",\n        \"flexFlow\",\n        \"flexGrow\",\n        \"flexShrink\",\n        \"flexWrap\",\n        \"flipX\",\n        \"flipY\",\n        \"float\",\n        \"flood-color\",\n        \"flood-opacity\",\n        \"floodColor\",\n        \"floodOpacity\",\n        \"floor\",\n        \"flush\",\n        \"focus\",\n        \"focusNode\",\n        \"focusOffset\",\n        \"font\",\n        \"font-family\",\n        \"font-feature-settings\",\n        \"font-kerning\",\n        \"font-language-override\",\n        \"font-size\",\n        \"font-size-adjust\",\n        \"font-stretch\",\n        \"font-style\",\n        \"font-synthesis\",\n        \"font-variant\",\n        \"font-variant-alternates\",\n        \"font-variant-caps\",\n        \"font-variant-east-asian\",\n        \"font-variant-ligatures\",\n        \"font-variant-numeric\",\n        \"font-variant-position\",\n        \"font-weight\",\n        \"fontFamily\",\n        \"fontFeatureSettings\",\n        \"fontKerning\",\n        \"fontLanguageOverride\",\n        \"fontSize\",\n        \"fontSizeAdjust\",\n        \"fontSmoothingEnabled\",\n        \"fontStretch\",\n        \"fontStyle\",\n        \"fontSynthesis\",\n        \"fontVariant\",\n        \"fontVariantAlternates\",\n        \"fontVariantCaps\",\n        \"fontVariantEastAsian\",\n        \"fontVariantLigatures\",\n        \"fontVariantNumeric\",\n        \"fontVariantPosition\",\n        \"fontWeight\",\n        \"fontcolor\",\n        \"fonts\",\n        \"fontsize\",\n        \"for\",\n        \"forEach\",\n        \"forceRedraw\",\n        \"form\",\n        \"formAction\",\n        \"formEnctype\",\n        \"formMethod\",\n        \"formNoValidate\",\n        \"formTarget\",\n        \"format\",\n        \"forms\",\n        \"forward\",\n        \"fr\",\n        \"frame\",\n        \"frameBorder\",\n        \"frameElement\",\n        \"frameSpacing\",\n        \"framebufferRenderbuffer\",\n        \"framebufferTexture2D\",\n        \"frames\",\n        \"freeSpace\",\n        \"freeze\",\n        \"frequency\",\n        \"frequencyBinCount\",\n        \"from\",\n        \"fromCharCode\",\n        \"fromCodePoint\",\n        \"fromElement\",\n        \"frontFace\",\n        \"fround\",\n        \"fullScreen\",\n        \"fullscreenElement\",\n        \"fullscreenEnabled\",\n        \"fx\",\n        \"fy\",\n        \"gain\",\n        \"gamepad\",\n        \"gamma\",\n        \"genderIdentity\",\n        \"generateKey\",\n        \"generateMipmap\",\n        \"generateRequest\",\n        \"geolocation\",\n        \"gestureObject\",\n        \"get\",\n        \"getActiveAttrib\",\n        \"getActiveUniform\",\n        \"getAdjacentText\",\n        \"getAll\",\n        \"getAllResponseHeaders\",\n        \"getAsFile\",\n        \"getAsString\",\n        \"getAttachedShaders\",\n        \"getAttribLocation\",\n        \"getAttribute\",\n        \"getAttributeNS\",\n        \"getAttributeNode\",\n        \"getAttributeNodeNS\",\n        \"getAudioTracks\",\n        \"getBBox\",\n        \"getBattery\",\n        \"getBlob\",\n        \"getBookmark\",\n        \"getBoundingClientRect\",\n        \"getBufferParameter\",\n        \"getByteFrequencyData\",\n        \"getByteTimeDomainData\",\n        \"getCSSCanvasContext\",\n        \"getCTM\",\n        \"getCandidateWindowClientRect\",\n        \"getChannelData\",\n        \"getCharNumAtPosition\",\n        \"getClientRect\",\n        \"getClientRects\",\n        \"getCompositionAlternatives\",\n        \"getComputedStyle\",\n        \"getComputedTextLength\",\n        \"getConfiguration\",\n        \"getContext\",\n        \"getContextAttributes\",\n        \"getCounterValue\",\n        \"getCueAsHTML\",\n        \"getCueById\",\n        \"getCurrentPosition\",\n        \"getCurrentTime\",\n        \"getData\",\n        \"getDatabaseNames\",\n        \"getDate\",\n        \"getDay\",\n        \"getDefaultComputedStyle\",\n        \"getDestinationInsertionPoints\",\n        \"getDistributedNodes\",\n        \"getEditable\",\n        \"getElementById\",\n        \"getElementsByClassName\",\n        \"getElementsByName\",\n        \"getElementsByTagName\",\n        \"getElementsByTagNameNS\",\n        \"getEnclosureList\",\n        \"getEndPositionOfChar\",\n        \"getEntries\",\n        \"getEntriesByName\",\n        \"getEntriesByType\",\n        \"getError\",\n        \"getExtension\",\n        \"getExtentOfChar\",\n        \"getFeature\",\n        \"getFile\",\n        \"getFloat32\",\n        \"getFloat64\",\n        \"getFloatFrequencyData\",\n        \"getFloatTimeDomainData\",\n        \"getFloatValue\",\n        \"getFramebufferAttachmentParameter\",\n        \"getFrequencyResponse\",\n        \"getFullYear\",\n        \"getGamepads\",\n        \"getHours\",\n        \"getImageData\",\n        \"getInt16\",\n        \"getInt32\",\n        \"getInt8\",\n        \"getIntersectionList\",\n        \"getItem\",\n        \"getItems\",\n        \"getKey\",\n        \"getLineDash\",\n        \"getLocalStreams\",\n        \"getMarks\",\n        \"getMatchedCSSRules\",\n        \"getMeasures\",\n        \"getMetadata\",\n        \"getMilliseconds\",\n        \"getMinutes\",\n        \"getModifierState\",\n        \"getMonth\",\n        \"getNamedItem\",\n        \"getNamedItemNS\",\n        \"getNotifier\",\n        \"getNumberOfChars\",\n        \"getOverrideHistoryNavigationMode\",\n        \"getOverrideStyle\",\n        \"getOwnPropertyDescriptor\",\n        \"getOwnPropertyNames\",\n        \"getOwnPropertySymbols\",\n        \"getParameter\",\n        \"getPathSegAtLength\",\n        \"getPointAtLength\",\n        \"getPreference\",\n        \"getPreferenceDefault\",\n        \"getPresentationAttribute\",\n        \"getPreventDefault\",\n        \"getProgramInfoLog\",\n        \"getProgramParameter\",\n        \"getPropertyCSSValue\",\n        \"getPropertyPriority\",\n        \"getPropertyShorthand\",\n        \"getPropertyValue\",\n        \"getPrototypeOf\",\n        \"getRGBColorValue\",\n        \"getRandomValues\",\n        \"getRangeAt\",\n        \"getReceivers\",\n        \"getRectValue\",\n        \"getRegistration\",\n        \"getRemoteStreams\",\n        \"getRenderbufferParameter\",\n        \"getResponseHeader\",\n        \"getRoot\",\n        \"getRotationOfChar\",\n        \"getSVGDocument\",\n        \"getScreenCTM\",\n        \"getSeconds\",\n        \"getSelection\",\n        \"getSenders\",\n        \"getShaderInfoLog\",\n        \"getShaderParameter\",\n        \"getShaderPrecisionFormat\",\n        \"getShaderSource\",\n        \"getSimpleDuration\",\n        \"getSiteIcons\",\n        \"getSources\",\n        \"getSpeculativeParserUrls\",\n        \"getStartPositionOfChar\",\n        \"getStartTime\",\n        \"getStats\",\n        \"getStorageUpdates\",\n        \"getStreamById\",\n        \"getStringValue\",\n        \"getSubStringLength\",\n        \"getSubscription\",\n        \"getSupportedExtensions\",\n        \"getTexParameter\",\n        \"getTime\",\n        \"getTimezoneOffset\",\n        \"getTotalLength\",\n        \"getTrackById\",\n        \"getTracks\",\n        \"getTransformToElement\",\n        \"getUTCDate\",\n        \"getUTCDay\",\n        \"getUTCFullYear\",\n        \"getUTCHours\",\n        \"getUTCMilliseconds\",\n        \"getUTCMinutes\",\n        \"getUTCMonth\",\n        \"getUTCSeconds\",\n        \"getUint16\",\n        \"getUint32\",\n        \"getUint8\",\n        \"getUniform\",\n        \"getUniformLocation\",\n        \"getUserMedia\",\n        \"getValues\",\n        \"getVarDate\",\n        \"getVariableValue\",\n        \"getVertexAttrib\",\n        \"getVertexAttribOffset\",\n        \"getVideoPlaybackQuality\",\n        \"getVideoTracks\",\n        \"getWakeLockState\",\n        \"getYear\",\n        \"givenName\",\n        \"global\",\n        \"globalAlpha\",\n        \"globalCompositeOperation\",\n        \"glyphOrientationHorizontal\",\n        \"glyphOrientationVertical\",\n        \"glyphRef\",\n        \"go\",\n        \"gradientTransform\",\n        \"gradientUnits\",\n        \"grammars\",\n        \"green\",\n        \"group\",\n        \"groupCollapsed\",\n        \"groupEnd\",\n        \"hardwareConcurrency\",\n        \"has\",\n        \"hasAttribute\",\n        \"hasAttributeNS\",\n        \"hasAttributes\",\n        \"hasChildNodes\",\n        \"hasComposition\",\n        \"hasExtension\",\n        \"hasFeature\",\n        \"hasFocus\",\n        \"hasLayout\",\n        \"hasOwnProperty\",\n        \"hash\",\n        \"head\",\n        \"headers\",\n        \"heading\",\n        \"height\",\n        \"hidden\",\n        \"hide\",\n        \"hideFocus\",\n        \"high\",\n        \"hint\",\n        \"history\",\n        \"honorificPrefix\",\n        \"honorificSuffix\",\n        \"horizontalOverflow\",\n        \"host\",\n        \"hostname\",\n        \"href\",\n        \"hreflang\",\n        \"hspace\",\n        \"html5TagCheckInerface\",\n        \"htmlFor\",\n        \"htmlText\",\n        \"httpEquiv\",\n        \"hwTimestamp\",\n        \"hypot\",\n        \"iccId\",\n        \"iceConnectionState\",\n        \"iceGatheringState\",\n        \"icon\",\n        \"id\",\n        \"identifier\",\n        \"identity\",\n        \"ignoreBOM\",\n        \"ignoreCase\",\n        \"image-orientation\",\n        \"image-rendering\",\n        \"imageOrientation\",\n        \"imageRendering\",\n        \"images\",\n        \"ime-mode\",\n        \"imeMode\",\n        \"implementation\",\n        \"importKey\",\n        \"importNode\",\n        \"importStylesheet\",\n        \"imports\",\n        \"impp\",\n        \"imul\",\n        \"in1\",\n        \"in2\",\n        \"inBandMetadataTrackDispatchType\",\n        \"inRange\",\n        \"includes\",\n        \"incremental\",\n        \"indeterminate\",\n        \"index\",\n        \"indexNames\",\n        \"indexOf\",\n        \"indexedDB\",\n        \"inertiaDestinationX\",\n        \"inertiaDestinationY\",\n        \"info\",\n        \"init\",\n        \"initAnimationEvent\",\n        \"initBeforeLoadEvent\",\n        \"initClipboardEvent\",\n        \"initCloseEvent\",\n        \"initCommandEvent\",\n        \"initCompositionEvent\",\n        \"initCustomEvent\",\n        \"initData\",\n        \"initDeviceMotionEvent\",\n        \"initDeviceOrientationEvent\",\n        \"initDragEvent\",\n        \"initErrorEvent\",\n        \"initEvent\",\n        \"initFocusEvent\",\n        \"initGestureEvent\",\n        \"initHashChangeEvent\",\n        \"initKeyEvent\",\n        \"initKeyboardEvent\",\n        \"initMSManipulationEvent\",\n        \"initMessageEvent\",\n        \"initMouseEvent\",\n        \"initMouseScrollEvent\",\n        \"initMouseWheelEvent\",\n        \"initMutationEvent\",\n        \"initNSMouseEvent\",\n        \"initOverflowEvent\",\n        \"initPageEvent\",\n        \"initPageTransitionEvent\",\n        \"initPointerEvent\",\n        \"initPopStateEvent\",\n        \"initProgressEvent\",\n        \"initScrollAreaEvent\",\n        \"initSimpleGestureEvent\",\n        \"initStorageEvent\",\n        \"initTextEvent\",\n        \"initTimeEvent\",\n        \"initTouchEvent\",\n        \"initTransitionEvent\",\n        \"initUIEvent\",\n        \"initWebKitAnimationEvent\",\n        \"initWebKitTransitionEvent\",\n        \"initWebKitWheelEvent\",\n        \"initWheelEvent\",\n        \"initialTime\",\n        \"initialize\",\n        \"initiatorType\",\n        \"inner\",\n        \"innerHTML\",\n        \"innerHeight\",\n        \"innerText\",\n        \"innerWidth\",\n        \"input\",\n        \"inputBuffer\",\n        \"inputEncoding\",\n        \"inputMethod\",\n        \"insertAdjacentElement\",\n        \"insertAdjacentHTML\",\n        \"insertAdjacentText\",\n        \"insertBefore\",\n        \"insertCell\",\n        \"insertData\",\n        \"insertItemBefore\",\n        \"insertNode\",\n        \"insertRow\",\n        \"insertRule\",\n        \"instanceRoot\",\n        \"intercept\",\n        \"interimResults\",\n        \"internalSubset\",\n        \"intersectsNode\",\n        \"interval\",\n        \"invalidIteratorState\",\n        \"inverse\",\n        \"invertSelf\",\n        \"is\",\n        \"is2D\",\n        \"isAlternate\",\n        \"isArray\",\n        \"isBingCurrentSearchDefault\",\n        \"isBuffer\",\n        \"isCandidateWindowVisible\",\n        \"isChar\",\n        \"isCollapsed\",\n        \"isComposing\",\n        \"isContentEditable\",\n        \"isContentHandlerRegistered\",\n        \"isContextLost\",\n        \"isDefaultNamespace\",\n        \"isDisabled\",\n        \"isEnabled\",\n        \"isEqual\",\n        \"isEqualNode\",\n        \"isExtensible\",\n        \"isFinite\",\n        \"isFramebuffer\",\n        \"isFrozen\",\n        \"isGenerator\",\n        \"isId\",\n        \"isInjected\",\n        \"isInteger\",\n        \"isMap\",\n        \"isMultiLine\",\n        \"isNaN\",\n        \"isOpen\",\n        \"isPointInFill\",\n        \"isPointInPath\",\n        \"isPointInRange\",\n        \"isPointInStroke\",\n        \"isPrefAlternate\",\n        \"isPrimary\",\n        \"isProgram\",\n        \"isPropertyImplicit\",\n        \"isProtocolHandlerRegistered\",\n        \"isPrototypeOf\",\n        \"isRenderbuffer\",\n        \"isSafeInteger\",\n        \"isSameNode\",\n        \"isSealed\",\n        \"isShader\",\n        \"isSupported\",\n        \"isTextEdit\",\n        \"isTexture\",\n        \"isTrusted\",\n        \"isTypeSupported\",\n        \"isView\",\n        \"isolation\",\n        \"italics\",\n        \"item\",\n        \"itemId\",\n        \"itemProp\",\n        \"itemRef\",\n        \"itemScope\",\n        \"itemType\",\n        \"itemValue\",\n        \"iterateNext\",\n        \"iterator\",\n        \"javaEnabled\",\n        \"jobTitle\",\n        \"join\",\n        \"json\",\n        \"justify-content\",\n        \"justifyContent\",\n        \"k1\",\n        \"k2\",\n        \"k3\",\n        \"k4\",\n        \"kernelMatrix\",\n        \"kernelUnitLengthX\",\n        \"kernelUnitLengthY\",\n        \"kerning\",\n        \"key\",\n        \"keyCode\",\n        \"keyFor\",\n        \"keyIdentifier\",\n        \"keyLightEnabled\",\n        \"keyLocation\",\n        \"keyPath\",\n        \"keySystem\",\n        \"keyText\",\n        \"keyUsage\",\n        \"keys\",\n        \"keytype\",\n        \"kind\",\n        \"knee\",\n        \"label\",\n        \"labels\",\n        \"lang\",\n        \"language\",\n        \"languages\",\n        \"largeArcFlag\",\n        \"lastChild\",\n        \"lastElementChild\",\n        \"lastEventId\",\n        \"lastIndex\",\n        \"lastIndexOf\",\n        \"lastMatch\",\n        \"lastMessageSubject\",\n        \"lastMessageType\",\n        \"lastModified\",\n        \"lastModifiedDate\",\n        \"lastPage\",\n        \"lastParen\",\n        \"lastState\",\n        \"lastStyleSheetSet\",\n        \"latitude\",\n        \"layerX\",\n        \"layerY\",\n        \"layoutFlow\",\n        \"layoutGrid\",\n        \"layoutGridChar\",\n        \"layoutGridLine\",\n        \"layoutGridMode\",\n        \"layoutGridType\",\n        \"lbound\",\n        \"left\",\n        \"leftContext\",\n        \"leftMargin\",\n        \"length\",\n        \"lengthAdjust\",\n        \"lengthComputable\",\n        \"letter-spacing\",\n        \"letterSpacing\",\n        \"level\",\n        \"lighting-color\",\n        \"lightingColor\",\n        \"limitingConeAngle\",\n        \"line\",\n        \"line-height\",\n        \"lineAlign\",\n        \"lineBreak\",\n        \"lineCap\",\n        \"lineDashOffset\",\n        \"lineHeight\",\n        \"lineJoin\",\n        \"lineNumber\",\n        \"lineTo\",\n        \"lineWidth\",\n        \"linearRampToValueAtTime\",\n        \"lineno\",\n        \"link\",\n        \"linkColor\",\n        \"linkProgram\",\n        \"links\",\n        \"list\",\n        \"list-style\",\n        \"list-style-image\",\n        \"list-style-position\",\n        \"list-style-type\",\n        \"listStyle\",\n        \"listStyleImage\",\n        \"listStylePosition\",\n        \"listStyleType\",\n        \"listener\",\n        \"load\",\n        \"loadEventEnd\",\n        \"loadEventStart\",\n        \"loadTimes\",\n        \"loaded\",\n        \"localDescription\",\n        \"localName\",\n        \"localStorage\",\n        \"locale\",\n        \"localeCompare\",\n        \"location\",\n        \"locationbar\",\n        \"lock\",\n        \"lockedFile\",\n        \"log\",\n        \"log10\",\n        \"log1p\",\n        \"log2\",\n        \"logicalXDPI\",\n        \"logicalYDPI\",\n        \"longDesc\",\n        \"longitude\",\n        \"lookupNamespaceURI\",\n        \"lookupPrefix\",\n        \"loop\",\n        \"loopEnd\",\n        \"loopStart\",\n        \"looping\",\n        \"low\",\n        \"lower\",\n        \"lowerBound\",\n        \"lowerOpen\",\n        \"lowsrc\",\n        \"m11\",\n        \"m12\",\n        \"m13\",\n        \"m14\",\n        \"m21\",\n        \"m22\",\n        \"m23\",\n        \"m24\",\n        \"m31\",\n        \"m32\",\n        \"m33\",\n        \"m34\",\n        \"m41\",\n        \"m42\",\n        \"m43\",\n        \"m44\",\n        \"manifest\",\n        \"map\",\n        \"mapping\",\n        \"margin\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"margin-right\",\n        \"margin-top\",\n        \"marginBottom\",\n        \"marginHeight\",\n        \"marginLeft\",\n        \"marginRight\",\n        \"marginTop\",\n        \"marginWidth\",\n        \"mark\",\n        \"marker\",\n        \"marker-end\",\n        \"marker-mid\",\n        \"marker-offset\",\n        \"marker-start\",\n        \"markerEnd\",\n        \"markerHeight\",\n        \"markerMid\",\n        \"markerOffset\",\n        \"markerStart\",\n        \"markerUnits\",\n        \"markerWidth\",\n        \"marks\",\n        \"mask\",\n        \"mask-type\",\n        \"maskContentUnits\",\n        \"maskType\",\n        \"maskUnits\",\n        \"match\",\n        \"matchMedia\",\n        \"matchMedium\",\n        \"matches\",\n        \"matrix\",\n        \"matrixTransform\",\n        \"max\",\n        \"max-height\",\n        \"max-width\",\n        \"maxAlternatives\",\n        \"maxChannelCount\",\n        \"maxConnectionsPerServer\",\n        \"maxDecibels\",\n        \"maxDistance\",\n        \"maxHeight\",\n        \"maxLength\",\n        \"maxTouchPoints\",\n        \"maxValue\",\n        \"maxWidth\",\n        \"measure\",\n        \"measureText\",\n        \"media\",\n        \"mediaDevices\",\n        \"mediaElement\",\n        \"mediaGroup\",\n        \"mediaKeys\",\n        \"mediaText\",\n        \"meetOrSlice\",\n        \"memory\",\n        \"menubar\",\n        \"mergeAttributes\",\n        \"message\",\n        \"messageClass\",\n        \"messageHandlers\",\n        \"metaKey\",\n        \"method\",\n        \"mimeType\",\n        \"mimeTypes\",\n        \"min\",\n        \"min-height\",\n        \"min-width\",\n        \"minDecibels\",\n        \"minHeight\",\n        \"minValue\",\n        \"minWidth\",\n        \"miterLimit\",\n        \"mix-blend-mode\",\n        \"mixBlendMode\",\n        \"mode\",\n        \"modify\",\n        \"mount\",\n        \"move\",\n        \"moveBy\",\n        \"moveEnd\",\n        \"moveFirst\",\n        \"moveFocusDown\",\n        \"moveFocusLeft\",\n        \"moveFocusRight\",\n        \"moveFocusUp\",\n        \"moveNext\",\n        \"moveRow\",\n        \"moveStart\",\n        \"moveTo\",\n        \"moveToBookmark\",\n        \"moveToElementText\",\n        \"moveToPoint\",\n        \"mozAdd\",\n        \"mozAnimationStartTime\",\n        \"mozAnon\",\n        \"mozApps\",\n        \"mozAudioCaptured\",\n        \"mozAudioChannelType\",\n        \"mozAutoplayEnabled\",\n        \"mozCancelAnimationFrame\",\n        \"mozCancelFullScreen\",\n        \"mozCancelRequestAnimationFrame\",\n        \"mozCaptureStream\",\n        \"mozCaptureStreamUntilEnded\",\n        \"mozClearDataAt\",\n        \"mozContact\",\n        \"mozContacts\",\n        \"mozCreateFileHandle\",\n        \"mozCurrentTransform\",\n        \"mozCurrentTransformInverse\",\n        \"mozCursor\",\n        \"mozDash\",\n        \"mozDashOffset\",\n        \"mozDecodedFrames\",\n        \"mozExitPointerLock\",\n        \"mozFillRule\",\n        \"mozFragmentEnd\",\n        \"mozFrameDelay\",\n        \"mozFullScreen\",\n        \"mozFullScreenElement\",\n        \"mozFullScreenEnabled\",\n        \"mozGetAll\",\n        \"mozGetAllKeys\",\n        \"mozGetAsFile\",\n        \"mozGetDataAt\",\n        \"mozGetMetadata\",\n        \"mozGetUserMedia\",\n        \"mozHasAudio\",\n        \"mozHasItem\",\n        \"mozHidden\",\n        \"mozImageSmoothingEnabled\",\n        \"mozIndexedDB\",\n        \"mozInnerScreenX\",\n        \"mozInnerScreenY\",\n        \"mozInputSource\",\n        \"mozIsTextField\",\n        \"mozItem\",\n        \"mozItemCount\",\n        \"mozItems\",\n        \"mozLength\",\n        \"mozLockOrientation\",\n        \"mozMatchesSelector\",\n        \"mozMovementX\",\n        \"mozMovementY\",\n        \"mozOpaque\",\n        \"mozOrientation\",\n        \"mozPaintCount\",\n        \"mozPaintedFrames\",\n        \"mozParsedFrames\",\n        \"mozPay\",\n        \"mozPointerLockElement\",\n        \"mozPresentedFrames\",\n        \"mozPreservesPitch\",\n        \"mozPressure\",\n        \"mozPrintCallback\",\n        \"mozRTCIceCandidate\",\n        \"mozRTCPeerConnection\",\n        \"mozRTCSessionDescription\",\n        \"mozRemove\",\n        \"mozRequestAnimationFrame\",\n        \"mozRequestFullScreen\",\n        \"mozRequestPointerLock\",\n        \"mozSetDataAt\",\n        \"mozSetImageElement\",\n        \"mozSourceNode\",\n        \"mozSrcObject\",\n        \"mozSystem\",\n        \"mozTCPSocket\",\n        \"mozTextStyle\",\n        \"mozTypesAt\",\n        \"mozUnlockOrientation\",\n        \"mozUserCancelled\",\n        \"mozVisibilityState\",\n        \"msAnimation\",\n        \"msAnimationDelay\",\n        \"msAnimationDirection\",\n        \"msAnimationDuration\",\n        \"msAnimationFillMode\",\n        \"msAnimationIterationCount\",\n        \"msAnimationName\",\n        \"msAnimationPlayState\",\n        \"msAnimationStartTime\",\n        \"msAnimationTimingFunction\",\n        \"msBackfaceVisibility\",\n        \"msBlockProgression\",\n        \"msCSSOMElementFloatMetrics\",\n        \"msCaching\",\n        \"msCachingEnabled\",\n        \"msCancelRequestAnimationFrame\",\n        \"msCapsLockWarningOff\",\n        \"msClearImmediate\",\n        \"msClose\",\n        \"msContentZoomChaining\",\n        \"msContentZoomFactor\",\n        \"msContentZoomLimit\",\n        \"msContentZoomLimitMax\",\n        \"msContentZoomLimitMin\",\n        \"msContentZoomSnap\",\n        \"msContentZoomSnapPoints\",\n        \"msContentZoomSnapType\",\n        \"msContentZooming\",\n        \"msConvertURL\",\n        \"msCrypto\",\n        \"msDoNotTrack\",\n        \"msElementsFromPoint\",\n        \"msElementsFromRect\",\n        \"msExitFullscreen\",\n        \"msExtendedCode\",\n        \"msFillRule\",\n        \"msFirstPaint\",\n        \"msFlex\",\n        \"msFlexAlign\",\n        \"msFlexDirection\",\n        \"msFlexFlow\",\n        \"msFlexItemAlign\",\n        \"msFlexLinePack\",\n        \"msFlexNegative\",\n        \"msFlexOrder\",\n        \"msFlexPack\",\n        \"msFlexPositive\",\n        \"msFlexPreferredSize\",\n        \"msFlexWrap\",\n        \"msFlowFrom\",\n        \"msFlowInto\",\n        \"msFontFeatureSettings\",\n        \"msFullscreenElement\",\n        \"msFullscreenEnabled\",\n        \"msGetInputContext\",\n        \"msGetRegionContent\",\n        \"msGetUntransformedBounds\",\n        \"msGraphicsTrustStatus\",\n        \"msGridColumn\",\n        \"msGridColumnAlign\",\n        \"msGridColumnSpan\",\n        \"msGridColumns\",\n        \"msGridRow\",\n        \"msGridRowAlign\",\n        \"msGridRowSpan\",\n        \"msGridRows\",\n        \"msHidden\",\n        \"msHighContrastAdjust\",\n        \"msHyphenateLimitChars\",\n        \"msHyphenateLimitLines\",\n        \"msHyphenateLimitZone\",\n        \"msHyphens\",\n        \"msImageSmoothingEnabled\",\n        \"msImeAlign\",\n        \"msIndexedDB\",\n        \"msInterpolationMode\",\n        \"msIsStaticHTML\",\n        \"msKeySystem\",\n        \"msKeys\",\n        \"msLaunchUri\",\n        \"msLockOrientation\",\n        \"msManipulationViewsEnabled\",\n        \"msMatchMedia\",\n        \"msMatchesSelector\",\n        \"msMaxTouchPoints\",\n        \"msOrientation\",\n        \"msOverflowStyle\",\n        \"msPerspective\",\n        \"msPerspectiveOrigin\",\n        \"msPlayToDisabled\",\n        \"msPlayToPreferredSourceUri\",\n        \"msPlayToPrimary\",\n        \"msPointerEnabled\",\n        \"msRegionOverflow\",\n        \"msReleasePointerCapture\",\n        \"msRequestAnimationFrame\",\n        \"msRequestFullscreen\",\n        \"msSaveBlob\",\n        \"msSaveOrOpenBlob\",\n        \"msScrollChaining\",\n        \"msScrollLimit\",\n        \"msScrollLimitXMax\",\n        \"msScrollLimitXMin\",\n        \"msScrollLimitYMax\",\n        \"msScrollLimitYMin\",\n        \"msScrollRails\",\n        \"msScrollSnapPointsX\",\n        \"msScrollSnapPointsY\",\n        \"msScrollSnapType\",\n        \"msScrollSnapX\",\n        \"msScrollSnapY\",\n        \"msScrollTranslation\",\n        \"msSetImmediate\",\n        \"msSetMediaKeys\",\n        \"msSetPointerCapture\",\n        \"msTextCombineHorizontal\",\n        \"msTextSizeAdjust\",\n        \"msToBlob\",\n        \"msTouchAction\",\n        \"msTouchSelect\",\n        \"msTraceAsyncCallbackCompleted\",\n        \"msTraceAsyncCallbackStarting\",\n        \"msTraceAsyncOperationCompleted\",\n        \"msTraceAsyncOperationStarting\",\n        \"msTransform\",\n        \"msTransformOrigin\",\n        \"msTransformStyle\",\n        \"msTransition\",\n        \"msTransitionDelay\",\n        \"msTransitionDuration\",\n        \"msTransitionProperty\",\n        \"msTransitionTimingFunction\",\n        \"msUnlockOrientation\",\n        \"msUpdateAsyncCallbackRelation\",\n        \"msUserSelect\",\n        \"msVisibilityState\",\n        \"msWrapFlow\",\n        \"msWrapMargin\",\n        \"msWrapThrough\",\n        \"msWriteProfilerMark\",\n        \"msZoom\",\n        \"msZoomTo\",\n        \"mt\",\n        \"multiEntry\",\n        \"multiSelectionObj\",\n        \"multiline\",\n        \"multiple\",\n        \"multiply\",\n        \"multiplySelf\",\n        \"mutableFile\",\n        \"muted\",\n        \"n\",\n        \"name\",\n        \"nameProp\",\n        \"namedItem\",\n        \"namedRecordset\",\n        \"names\",\n        \"namespaceURI\",\n        \"namespaces\",\n        \"naturalHeight\",\n        \"naturalWidth\",\n        \"navigate\",\n        \"navigation\",\n        \"navigationMode\",\n        \"navigationStart\",\n        \"navigator\",\n        \"near\",\n        \"nearestViewportElement\",\n        \"negative\",\n        \"netscape\",\n        \"networkState\",\n        \"newScale\",\n        \"newTranslate\",\n        \"newURL\",\n        \"newValue\",\n        \"newValueSpecifiedUnits\",\n        \"newVersion\",\n        \"newhome\",\n        \"next\",\n        \"nextElementSibling\",\n        \"nextNode\",\n        \"nextPage\",\n        \"nextSibling\",\n        \"nickname\",\n        \"noHref\",\n        \"noResize\",\n        \"noShade\",\n        \"noValidate\",\n        \"noWrap\",\n        \"nodeName\",\n        \"nodeType\",\n        \"nodeValue\",\n        \"normalize\",\n        \"normalizedPathSegList\",\n        \"notationName\",\n        \"notations\",\n        \"note\",\n        \"noteGrainOn\",\n        \"noteOff\",\n        \"noteOn\",\n        \"now\",\n        \"numOctaves\",\n        \"number\",\n        \"numberOfChannels\",\n        \"numberOfInputs\",\n        \"numberOfItems\",\n        \"numberOfOutputs\",\n        \"numberValue\",\n        \"oMatchesSelector\",\n        \"object\",\n        \"object-fit\",\n        \"object-position\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"objectStore\",\n        \"objectStoreNames\",\n        \"observe\",\n        \"of\",\n        \"offscreenBuffering\",\n        \"offset\",\n        \"offsetHeight\",\n        \"offsetLeft\",\n        \"offsetNode\",\n        \"offsetParent\",\n        \"offsetTop\",\n        \"offsetWidth\",\n        \"offsetX\",\n        \"offsetY\",\n        \"ok\",\n        \"oldURL\",\n        \"oldValue\",\n        \"oldVersion\",\n        \"olderShadowRoot\",\n        \"onLine\",\n        \"onabort\",\n        \"onactivate\",\n        \"onactive\",\n        \"onaddstream\",\n        \"onaddtrack\",\n        \"onafterprint\",\n        \"onafterscriptexecute\",\n        \"onafterupdate\",\n        \"onaudioend\",\n        \"onaudioprocess\",\n        \"onaudiostart\",\n        \"onautocomplete\",\n        \"onautocompleteerror\",\n        \"onbeforeactivate\",\n        \"onbeforecopy\",\n        \"onbeforecut\",\n        \"onbeforedeactivate\",\n        \"onbeforeeditfocus\",\n        \"onbeforepaste\",\n        \"onbeforeprint\",\n        \"onbeforescriptexecute\",\n        \"onbeforeunload\",\n        \"onbeforeupdate\",\n        \"onblocked\",\n        \"onblur\",\n        \"onbounce\",\n        \"onboundary\",\n        \"oncached\",\n        \"oncancel\",\n        \"oncandidatewindowhide\",\n        \"oncandidatewindowshow\",\n        \"oncandidatewindowupdate\",\n        \"oncanplay\",\n        \"oncanplaythrough\",\n        \"oncellchange\",\n        \"onchange\",\n        \"onchargingchange\",\n        \"onchargingtimechange\",\n        \"onchecking\",\n        \"onclick\",\n        \"onclose\",\n        \"oncompassneedscalibration\",\n        \"oncomplete\",\n        \"oncontextmenu\",\n        \"oncontrolselect\",\n        \"oncopy\",\n        \"oncuechange\",\n        \"oncut\",\n        \"ondataavailable\",\n        \"ondatachannel\",\n        \"ondatasetchanged\",\n        \"ondatasetcomplete\",\n        \"ondblclick\",\n        \"ondeactivate\",\n        \"ondevicelight\",\n        \"ondevicemotion\",\n        \"ondeviceorientation\",\n        \"ondeviceproximity\",\n        \"ondischargingtimechange\",\n        \"ondisplay\",\n        \"ondownloading\",\n        \"ondrag\",\n        \"ondragend\",\n        \"ondragenter\",\n        \"ondragleave\",\n        \"ondragover\",\n        \"ondragstart\",\n        \"ondrop\",\n        \"ondurationchange\",\n        \"onemptied\",\n        \"onencrypted\",\n        \"onend\",\n        \"onended\",\n        \"onenter\",\n        \"onerror\",\n        \"onerrorupdate\",\n        \"onexit\",\n        \"onfilterchange\",\n        \"onfinish\",\n        \"onfocus\",\n        \"onfocusin\",\n        \"onfocusout\",\n        \"onfullscreenchange\",\n        \"onfullscreenerror\",\n        \"ongesturechange\",\n        \"ongestureend\",\n        \"ongesturestart\",\n        \"ongotpointercapture\",\n        \"onhashchange\",\n        \"onhelp\",\n        \"onicecandidate\",\n        \"oniceconnectionstatechange\",\n        \"oninactive\",\n        \"oninput\",\n        \"oninvalid\",\n        \"onkeydown\",\n        \"onkeypress\",\n        \"onkeyup\",\n        \"onlanguagechange\",\n        \"onlayoutcomplete\",\n        \"onlevelchange\",\n        \"onload\",\n        \"onloadeddata\",\n        \"onloadedmetadata\",\n        \"onloadend\",\n        \"onloadstart\",\n        \"onlosecapture\",\n        \"onlostpointercapture\",\n        \"only\",\n        \"onmark\",\n        \"onmessage\",\n        \"onmousedown\",\n        \"onmouseenter\",\n        \"onmouseleave\",\n        \"onmousemove\",\n        \"onmouseout\",\n        \"onmouseover\",\n        \"onmouseup\",\n        \"onmousewheel\",\n        \"onmove\",\n        \"onmoveend\",\n        \"onmovestart\",\n        \"onmozfullscreenchange\",\n        \"onmozfullscreenerror\",\n        \"onmozorientationchange\",\n        \"onmozpointerlockchange\",\n        \"onmozpointerlockerror\",\n        \"onmscontentzoom\",\n        \"onmsfullscreenchange\",\n        \"onmsfullscreenerror\",\n        \"onmsgesturechange\",\n        \"onmsgesturedoubletap\",\n        \"onmsgestureend\",\n        \"onmsgesturehold\",\n        \"onmsgesturestart\",\n        \"onmsgesturetap\",\n        \"onmsgotpointercapture\",\n        \"onmsinertiastart\",\n        \"onmslostpointercapture\",\n        \"onmsmanipulationstatechanged\",\n        \"onmsneedkey\",\n        \"onmsorientationchange\",\n        \"onmspointercancel\",\n        \"onmspointerdown\",\n        \"onmspointerenter\",\n        \"onmspointerhover\",\n        \"onmspointerleave\",\n        \"onmspointermove\",\n        \"onmspointerout\",\n        \"onmspointerover\",\n        \"onmspointerup\",\n        \"onmssitemodejumplistitemremoved\",\n        \"onmsthumbnailclick\",\n        \"onnegotiationneeded\",\n        \"onnomatch\",\n        \"onnoupdate\",\n        \"onobsolete\",\n        \"onoffline\",\n        \"ononline\",\n        \"onopen\",\n        \"onorientationchange\",\n        \"onpagechange\",\n        \"onpagehide\",\n        \"onpageshow\",\n        \"onpaste\",\n        \"onpause\",\n        \"onplay\",\n        \"onplaying\",\n        \"onpluginstreamstart\",\n        \"onpointercancel\",\n        \"onpointerdown\",\n        \"onpointerenter\",\n        \"onpointerleave\",\n        \"onpointerlockchange\",\n        \"onpointerlockerror\",\n        \"onpointermove\",\n        \"onpointerout\",\n        \"onpointerover\",\n        \"onpointerup\",\n        \"onpopstate\",\n        \"onprogress\",\n        \"onpropertychange\",\n        \"onratechange\",\n        \"onreadystatechange\",\n        \"onremovestream\",\n        \"onremovetrack\",\n        \"onreset\",\n        \"onresize\",\n        \"onresizeend\",\n        \"onresizestart\",\n        \"onresourcetimingbufferfull\",\n        \"onresult\",\n        \"onresume\",\n        \"onrowenter\",\n        \"onrowexit\",\n        \"onrowsdelete\",\n        \"onrowsinserted\",\n        \"onscroll\",\n        \"onsearch\",\n        \"onseeked\",\n        \"onseeking\",\n        \"onselect\",\n        \"onselectionchange\",\n        \"onselectstart\",\n        \"onshow\",\n        \"onsignalingstatechange\",\n        \"onsoundend\",\n        \"onsoundstart\",\n        \"onspeechend\",\n        \"onspeechstart\",\n        \"onstalled\",\n        \"onstart\",\n        \"onstatechange\",\n        \"onstop\",\n        \"onstorage\",\n        \"onstoragecommit\",\n        \"onsubmit\",\n        \"onsuccess\",\n        \"onsuspend\",\n        \"ontextinput\",\n        \"ontimeout\",\n        \"ontimeupdate\",\n        \"ontoggle\",\n        \"ontouchcancel\",\n        \"ontouchend\",\n        \"ontouchmove\",\n        \"ontouchstart\",\n        \"ontransitionend\",\n        \"onunload\",\n        \"onupdateready\",\n        \"onupgradeneeded\",\n        \"onuserproximity\",\n        \"onversionchange\",\n        \"onvoiceschanged\",\n        \"onvolumechange\",\n        \"onwaiting\",\n        \"onwarning\",\n        \"onwebkitanimationend\",\n        \"onwebkitanimationiteration\",\n        \"onwebkitanimationstart\",\n        \"onwebkitcurrentplaybacktargetiswirelesschanged\",\n        \"onwebkitfullscreenchange\",\n        \"onwebkitfullscreenerror\",\n        \"onwebkitkeyadded\",\n        \"onwebkitkeyerror\",\n        \"onwebkitkeymessage\",\n        \"onwebkitneedkey\",\n        \"onwebkitorientationchange\",\n        \"onwebkitplaybacktargetavailabilitychanged\",\n        \"onwebkitpointerlockchange\",\n        \"onwebkitpointerlockerror\",\n        \"onwebkitresourcetimingbufferfull\",\n        \"onwebkittransitionend\",\n        \"onwheel\",\n        \"onzoom\",\n        \"opacity\",\n        \"open\",\n        \"openCursor\",\n        \"openDatabase\",\n        \"openKeyCursor\",\n        \"opener\",\n        \"opera\",\n        \"operationType\",\n        \"operator\",\n        \"opr\",\n        \"optimum\",\n        \"options\",\n        \"order\",\n        \"orderX\",\n        \"orderY\",\n        \"ordered\",\n        \"org\",\n        \"orient\",\n        \"orientAngle\",\n        \"orientType\",\n        \"orientation\",\n        \"origin\",\n        \"originalTarget\",\n        \"orphans\",\n        \"oscpu\",\n        \"outerHTML\",\n        \"outerHeight\",\n        \"outerText\",\n        \"outerWidth\",\n        \"outline\",\n        \"outline-color\",\n        \"outline-offset\",\n        \"outline-style\",\n        \"outline-width\",\n        \"outlineColor\",\n        \"outlineOffset\",\n        \"outlineStyle\",\n        \"outlineWidth\",\n        \"outputBuffer\",\n        \"overflow\",\n        \"overflow-x\",\n        \"overflow-y\",\n        \"overflowX\",\n        \"overflowY\",\n        \"overrideMimeType\",\n        \"oversample\",\n        \"ownerDocument\",\n        \"ownerElement\",\n        \"ownerNode\",\n        \"ownerRule\",\n        \"ownerSVGElement\",\n        \"owningElement\",\n        \"p1\",\n        \"p2\",\n        \"p3\",\n        \"p4\",\n        \"pad\",\n        \"padding\",\n        \"padding-bottom\",\n        \"padding-left\",\n        \"padding-right\",\n        \"padding-top\",\n        \"paddingBottom\",\n        \"paddingLeft\",\n        \"paddingRight\",\n        \"paddingTop\",\n        \"page\",\n        \"page-break-after\",\n        \"page-break-before\",\n        \"page-break-inside\",\n        \"pageBreakAfter\",\n        \"pageBreakBefore\",\n        \"pageBreakInside\",\n        \"pageCount\",\n        \"pageX\",\n        \"pageXOffset\",\n        \"pageY\",\n        \"pageYOffset\",\n        \"pages\",\n        \"paint-order\",\n        \"paintOrder\",\n        \"paintRequests\",\n        \"paintType\",\n        \"palette\",\n        \"panningModel\",\n        \"parent\",\n        \"parentElement\",\n        \"parentNode\",\n        \"parentRule\",\n        \"parentStyleSheet\",\n        \"parentTextEdit\",\n        \"parentWindow\",\n        \"parse\",\n        \"parseFloat\",\n        \"parseFromString\",\n        \"parseInt\",\n        \"participants\",\n        \"password\",\n        \"pasteHTML\",\n        \"path\",\n        \"pathLength\",\n        \"pathSegList\",\n        \"pathSegType\",\n        \"pathSegTypeAsLetter\",\n        \"pathname\",\n        \"pattern\",\n        \"patternContentUnits\",\n        \"patternMismatch\",\n        \"patternTransform\",\n        \"patternUnits\",\n        \"pause\",\n        \"pauseAnimations\",\n        \"pauseOnExit\",\n        \"paused\",\n        \"pending\",\n        \"performance\",\n        \"permission\",\n        \"persisted\",\n        \"personalbar\",\n        \"perspective\",\n        \"perspective-origin\",\n        \"perspectiveOrigin\",\n        \"phoneticFamilyName\",\n        \"phoneticGivenName\",\n        \"photo\",\n        \"ping\",\n        \"pitch\",\n        \"pixelBottom\",\n        \"pixelDepth\",\n        \"pixelHeight\",\n        \"pixelLeft\",\n        \"pixelRight\",\n        \"pixelStorei\",\n        \"pixelTop\",\n        \"pixelUnitToMillimeterX\",\n        \"pixelUnitToMillimeterY\",\n        \"pixelWidth\",\n        \"placeholder\",\n        \"platform\",\n        \"play\",\n        \"playbackRate\",\n        \"playbackState\",\n        \"playbackTime\",\n        \"played\",\n        \"plugins\",\n        \"pluginspage\",\n        \"pname\",\n        \"pointer-events\",\n        \"pointerBeforeReferenceNode\",\n        \"pointerEnabled\",\n        \"pointerEvents\",\n        \"pointerId\",\n        \"pointerLockElement\",\n        \"pointerType\",\n        \"points\",\n        \"pointsAtX\",\n        \"pointsAtY\",\n        \"pointsAtZ\",\n        \"polygonOffset\",\n        \"pop\",\n        \"popupWindowFeatures\",\n        \"popupWindowName\",\n        \"popupWindowURI\",\n        \"port\",\n        \"port1\",\n        \"port2\",\n        \"ports\",\n        \"posBottom\",\n        \"posHeight\",\n        \"posLeft\",\n        \"posRight\",\n        \"posTop\",\n        \"posWidth\",\n        \"position\",\n        \"positionAlign\",\n        \"postError\",\n        \"postMessage\",\n        \"poster\",\n        \"pow\",\n        \"powerOff\",\n        \"preMultiplySelf\",\n        \"precision\",\n        \"preferredStyleSheetSet\",\n        \"preferredStylesheetSet\",\n        \"prefix\",\n        \"preload\",\n        \"preserveAlpha\",\n        \"preserveAspectRatio\",\n        \"preserveAspectRatioString\",\n        \"pressed\",\n        \"pressure\",\n        \"prevValue\",\n        \"preventDefault\",\n        \"preventExtensions\",\n        \"previousElementSibling\",\n        \"previousNode\",\n        \"previousPage\",\n        \"previousScale\",\n        \"previousSibling\",\n        \"previousTranslate\",\n        \"primaryKey\",\n        \"primitiveType\",\n        \"primitiveUnits\",\n        \"principals\",\n        \"print\",\n        \"privateKey\",\n        \"probablySupportsContext\",\n        \"process\",\n        \"processIceMessage\",\n        \"product\",\n        \"productSub\",\n        \"profile\",\n        \"profileEnd\",\n        \"profiles\",\n        \"prompt\",\n        \"properties\",\n        \"propertyIsEnumerable\",\n        \"propertyName\",\n        \"protocol\",\n        \"protocolLong\",\n        \"prototype\",\n        \"pseudoClass\",\n        \"pseudoElement\",\n        \"publicId\",\n        \"publicKey\",\n        \"published\",\n        \"push\",\n        \"pushNotification\",\n        \"pushState\",\n        \"put\",\n        \"putImageData\",\n        \"quadraticCurveTo\",\n        \"qualifier\",\n        \"queryCommandEnabled\",\n        \"queryCommandIndeterm\",\n        \"queryCommandState\",\n        \"queryCommandSupported\",\n        \"queryCommandText\",\n        \"queryCommandValue\",\n        \"querySelector\",\n        \"querySelectorAll\",\n        \"quote\",\n        \"quotes\",\n        \"r\",\n        \"r1\",\n        \"r2\",\n        \"race\",\n        \"radiogroup\",\n        \"radiusX\",\n        \"radiusY\",\n        \"random\",\n        \"range\",\n        \"rangeCount\",\n        \"rangeMax\",\n        \"rangeMin\",\n        \"rangeOffset\",\n        \"rangeOverflow\",\n        \"rangeParent\",\n        \"rangeUnderflow\",\n        \"rate\",\n        \"ratio\",\n        \"raw\",\n        \"read\",\n        \"readAsArrayBuffer\",\n        \"readAsBinaryString\",\n        \"readAsBlob\",\n        \"readAsDataURL\",\n        \"readAsText\",\n        \"readOnly\",\n        \"readPixels\",\n        \"readReportRequested\",\n        \"readyState\",\n        \"reason\",\n        \"reboot\",\n        \"receiver\",\n        \"receivers\",\n        \"recordNumber\",\n        \"recordset\",\n        \"rect\",\n        \"red\",\n        \"redirectCount\",\n        \"redirectEnd\",\n        \"redirectStart\",\n        \"reduce\",\n        \"reduceRight\",\n        \"reduction\",\n        \"refDistance\",\n        \"refX\",\n        \"refY\",\n        \"referenceNode\",\n        \"referrer\",\n        \"refresh\",\n        \"region\",\n        \"regionAnchorX\",\n        \"regionAnchorY\",\n        \"regionId\",\n        \"regions\",\n        \"register\",\n        \"registerContentHandler\",\n        \"registerElement\",\n        \"registerProtocolHandler\",\n        \"reject\",\n        \"rel\",\n        \"relList\",\n        \"relatedNode\",\n        \"relatedTarget\",\n        \"release\",\n        \"releaseCapture\",\n        \"releaseEvents\",\n        \"releasePointerCapture\",\n        \"releaseShaderCompiler\",\n        \"reliable\",\n        \"reload\",\n        \"remainingSpace\",\n        \"remoteDescription\",\n        \"remove\",\n        \"removeAllRanges\",\n        \"removeAttribute\",\n        \"removeAttributeNS\",\n        \"removeAttributeNode\",\n        \"removeBehavior\",\n        \"removeChild\",\n        \"removeCue\",\n        \"removeEventListener\",\n        \"removeFilter\",\n        \"removeImport\",\n        \"removeItem\",\n        \"removeListener\",\n        \"removeNamedItem\",\n        \"removeNamedItemNS\",\n        \"removeNode\",\n        \"removeParameter\",\n        \"removeProperty\",\n        \"removeRange\",\n        \"removeRegion\",\n        \"removeRule\",\n        \"removeSiteSpecificTrackingException\",\n        \"removeSourceBuffer\",\n        \"removeStream\",\n        \"removeTrack\",\n        \"removeVariable\",\n        \"removeWakeLockListener\",\n        \"removeWebWideTrackingException\",\n        \"removedNodes\",\n        \"renderbufferStorage\",\n        \"renderedBuffer\",\n        \"renderingMode\",\n        \"repeat\",\n        \"replace\",\n        \"replaceAdjacentText\",\n        \"replaceChild\",\n        \"replaceData\",\n        \"replaceId\",\n        \"replaceItem\",\n        \"replaceNode\",\n        \"replaceState\",\n        \"replaceTrack\",\n        \"replaceWholeText\",\n        \"reportValidity\",\n        \"requestAnimationFrame\",\n        \"requestAutocomplete\",\n        \"requestData\",\n        \"requestFullscreen\",\n        \"requestMediaKeySystemAccess\",\n        \"requestPermission\",\n        \"requestPointerLock\",\n        \"requestStart\",\n        \"requestingWindow\",\n        \"required\",\n        \"requiredExtensions\",\n        \"requiredFeatures\",\n        \"reset\",\n        \"resetTransform\",\n        \"resize\",\n        \"resizeBy\",\n        \"resizeTo\",\n        \"resolve\",\n        \"response\",\n        \"responseBody\",\n        \"responseEnd\",\n        \"responseStart\",\n        \"responseText\",\n        \"responseType\",\n        \"responseURL\",\n        \"responseXML\",\n        \"restore\",\n        \"result\",\n        \"resultType\",\n        \"resume\",\n        \"returnValue\",\n        \"rev\",\n        \"reverse\",\n        \"reversed\",\n        \"revocable\",\n        \"revokeObjectURL\",\n        \"rgbColor\",\n        \"right\",\n        \"rightContext\",\n        \"rightMargin\",\n        \"rolloffFactor\",\n        \"root\",\n        \"rootElement\",\n        \"rotate\",\n        \"rotateAxisAngle\",\n        \"rotateAxisAngleSelf\",\n        \"rotateFromVector\",\n        \"rotateFromVectorSelf\",\n        \"rotateSelf\",\n        \"rotation\",\n        \"rotationRate\",\n        \"round\",\n        \"rowIndex\",\n        \"rowSpan\",\n        \"rows\",\n        \"rubyAlign\",\n        \"rubyOverhang\",\n        \"rubyPosition\",\n        \"rules\",\n        \"runtime\",\n        \"runtimeStyle\",\n        \"rx\",\n        \"ry\",\n        \"safari\",\n        \"sampleCoverage\",\n        \"sampleRate\",\n        \"sandbox\",\n        \"save\",\n        \"scale\",\n        \"scale3d\",\n        \"scale3dSelf\",\n        \"scaleNonUniform\",\n        \"scaleNonUniformSelf\",\n        \"scaleSelf\",\n        \"scheme\",\n        \"scissor\",\n        \"scope\",\n        \"scopeName\",\n        \"scoped\",\n        \"screen\",\n        \"screenBrightness\",\n        \"screenEnabled\",\n        \"screenLeft\",\n        \"screenPixelToMillimeterX\",\n        \"screenPixelToMillimeterY\",\n        \"screenTop\",\n        \"screenX\",\n        \"screenY\",\n        \"scripts\",\n        \"scroll\",\n        \"scroll-behavior\",\n        \"scrollAmount\",\n        \"scrollBehavior\",\n        \"scrollBy\",\n        \"scrollByLines\",\n        \"scrollByPages\",\n        \"scrollDelay\",\n        \"scrollHeight\",\n        \"scrollIntoView\",\n        \"scrollIntoViewIfNeeded\",\n        \"scrollLeft\",\n        \"scrollLeftMax\",\n        \"scrollMaxX\",\n        \"scrollMaxY\",\n        \"scrollTo\",\n        \"scrollTop\",\n        \"scrollTopMax\",\n        \"scrollWidth\",\n        \"scrollX\",\n        \"scrollY\",\n        \"scrollbar3dLightColor\",\n        \"scrollbarArrowColor\",\n        \"scrollbarBaseColor\",\n        \"scrollbarDarkShadowColor\",\n        \"scrollbarFaceColor\",\n        \"scrollbarHighlightColor\",\n        \"scrollbarShadowColor\",\n        \"scrollbarTrackColor\",\n        \"scrollbars\",\n        \"scrolling\",\n        \"sdp\",\n        \"sdpMLineIndex\",\n        \"sdpMid\",\n        \"seal\",\n        \"search\",\n        \"searchBox\",\n        \"searchBoxJavaBridge_\",\n        \"searchParams\",\n        \"sectionRowIndex\",\n        \"secureConnectionStart\",\n        \"security\",\n        \"seed\",\n        \"seekable\",\n        \"seeking\",\n        \"select\",\n        \"selectAllChildren\",\n        \"selectNode\",\n        \"selectNodeContents\",\n        \"selectNodes\",\n        \"selectSingleNode\",\n        \"selectSubString\",\n        \"selected\",\n        \"selectedIndex\",\n        \"selectedOptions\",\n        \"selectedStyleSheetSet\",\n        \"selectedStylesheetSet\",\n        \"selection\",\n        \"selectionDirection\",\n        \"selectionEnd\",\n        \"selectionStart\",\n        \"selector\",\n        \"selectorText\",\n        \"self\",\n        \"send\",\n        \"sendAsBinary\",\n        \"sendBeacon\",\n        \"sender\",\n        \"sentTimestamp\",\n        \"separator\",\n        \"serializeToString\",\n        \"serviceWorker\",\n        \"sessionId\",\n        \"sessionStorage\",\n        \"set\",\n        \"setActive\",\n        \"setAlpha\",\n        \"setAttribute\",\n        \"setAttributeNS\",\n        \"setAttributeNode\",\n        \"setAttributeNodeNS\",\n        \"setBaseAndExtent\",\n        \"setBingCurrentSearchDefault\",\n        \"setCapture\",\n        \"setColor\",\n        \"setCompositeOperation\",\n        \"setCurrentTime\",\n        \"setCustomValidity\",\n        \"setData\",\n        \"setDate\",\n        \"setDragImage\",\n        \"setEnd\",\n        \"setEndAfter\",\n        \"setEndBefore\",\n        \"setEndPoint\",\n        \"setFillColor\",\n        \"setFilterRes\",\n        \"setFloat32\",\n        \"setFloat64\",\n        \"setFloatValue\",\n        \"setFullYear\",\n        \"setHours\",\n        \"setImmediate\",\n        \"setInt16\",\n        \"setInt32\",\n        \"setInt8\",\n        \"setInterval\",\n        \"setItem\",\n        \"setLineCap\",\n        \"setLineDash\",\n        \"setLineJoin\",\n        \"setLineWidth\",\n        \"setLocalDescription\",\n        \"setMatrix\",\n        \"setMatrixValue\",\n        \"setMediaKeys\",\n        \"setMilliseconds\",\n        \"setMinutes\",\n        \"setMiterLimit\",\n        \"setMonth\",\n        \"setNamedItem\",\n        \"setNamedItemNS\",\n        \"setNonUserCodeExceptions\",\n        \"setOrientToAngle\",\n        \"setOrientToAuto\",\n        \"setOrientation\",\n        \"setOverrideHistoryNavigationMode\",\n        \"setPaint\",\n        \"setParameter\",\n        \"setPeriodicWave\",\n        \"setPointerCapture\",\n        \"setPosition\",\n        \"setPreference\",\n        \"setProperty\",\n        \"setPrototypeOf\",\n        \"setRGBColor\",\n        \"setRGBColorICCColor\",\n        \"setRadius\",\n        \"setRangeText\",\n        \"setRemoteDescription\",\n        \"setRequestHeader\",\n        \"setResizable\",\n        \"setResourceTimingBufferSize\",\n        \"setRotate\",\n        \"setScale\",\n        \"setSeconds\",\n        \"setSelectionRange\",\n        \"setServerCertificate\",\n        \"setShadow\",\n        \"setSkewX\",\n        \"setSkewY\",\n        \"setStart\",\n        \"setStartAfter\",\n        \"setStartBefore\",\n        \"setStdDeviation\",\n        \"setStringValue\",\n        \"setStrokeColor\",\n        \"setSuggestResult\",\n        \"setTargetAtTime\",\n        \"setTargetValueAtTime\",\n        \"setTime\",\n        \"setTimeout\",\n        \"setTransform\",\n        \"setTranslate\",\n        \"setUTCDate\",\n        \"setUTCFullYear\",\n        \"setUTCHours\",\n        \"setUTCMilliseconds\",\n        \"setUTCMinutes\",\n        \"setUTCMonth\",\n        \"setUTCSeconds\",\n        \"setUint16\",\n        \"setUint32\",\n        \"setUint8\",\n        \"setUri\",\n        \"setValueAtTime\",\n        \"setValueCurveAtTime\",\n        \"setVariable\",\n        \"setVelocity\",\n        \"setVersion\",\n        \"setYear\",\n        \"settingName\",\n        \"settingValue\",\n        \"sex\",\n        \"shaderSource\",\n        \"shadowBlur\",\n        \"shadowColor\",\n        \"shadowOffsetX\",\n        \"shadowOffsetY\",\n        \"shadowRoot\",\n        \"shape\",\n        \"shape-rendering\",\n        \"shapeRendering\",\n        \"sheet\",\n        \"shift\",\n        \"shiftKey\",\n        \"shiftLeft\",\n        \"show\",\n        \"showHelp\",\n        \"showModal\",\n        \"showModalDialog\",\n        \"showModelessDialog\",\n        \"showNotification\",\n        \"sidebar\",\n        \"sign\",\n        \"signalingState\",\n        \"sin\",\n        \"singleNodeValue\",\n        \"sinh\",\n        \"size\",\n        \"sizeToContent\",\n        \"sizes\",\n        \"skewX\",\n        \"skewXSelf\",\n        \"skewY\",\n        \"skewYSelf\",\n        \"slice\",\n        \"slope\",\n        \"small\",\n        \"smil\",\n        \"smoothingTimeConstant\",\n        \"snapToLines\",\n        \"snapshotItem\",\n        \"snapshotLength\",\n        \"some\",\n        \"sort\",\n        \"source\",\n        \"sourceBuffer\",\n        \"sourceBuffers\",\n        \"sourceIndex\",\n        \"spacing\",\n        \"span\",\n        \"speakAs\",\n        \"speaking\",\n        \"specified\",\n        \"specularConstant\",\n        \"specularExponent\",\n        \"speechSynthesis\",\n        \"speed\",\n        \"speedOfSound\",\n        \"spellcheck\",\n        \"splice\",\n        \"split\",\n        \"splitText\",\n        \"spreadMethod\",\n        \"sqrt\",\n        \"src\",\n        \"srcElement\",\n        \"srcFilter\",\n        \"srcUrn\",\n        \"srcdoc\",\n        \"srclang\",\n        \"srcset\",\n        \"stack\",\n        \"stackTraceLimit\",\n        \"stacktrace\",\n        \"standalone\",\n        \"standby\",\n        \"start\",\n        \"startContainer\",\n        \"startIce\",\n        \"startOffset\",\n        \"startRendering\",\n        \"startTime\",\n        \"startsWith\",\n        \"state\",\n        \"status\",\n        \"statusMessage\",\n        \"statusText\",\n        \"statusbar\",\n        \"stdDeviationX\",\n        \"stdDeviationY\",\n        \"stencilFunc\",\n        \"stencilFuncSeparate\",\n        \"stencilMask\",\n        \"stencilMaskSeparate\",\n        \"stencilOp\",\n        \"stencilOpSeparate\",\n        \"step\",\n        \"stepDown\",\n        \"stepMismatch\",\n        \"stepUp\",\n        \"sticky\",\n        \"stitchTiles\",\n        \"stop\",\n        \"stop-color\",\n        \"stop-opacity\",\n        \"stopColor\",\n        \"stopImmediatePropagation\",\n        \"stopOpacity\",\n        \"stopPropagation\",\n        \"storageArea\",\n        \"storageName\",\n        \"storageStatus\",\n        \"storeSiteSpecificTrackingException\",\n        \"storeWebWideTrackingException\",\n        \"stpVersion\",\n        \"stream\",\n        \"strike\",\n        \"stringValue\",\n        \"stringify\",\n        \"stroke\",\n        \"stroke-dasharray\",\n        \"stroke-dashoffset\",\n        \"stroke-linecap\",\n        \"stroke-linejoin\",\n        \"stroke-miterlimit\",\n        \"stroke-opacity\",\n        \"stroke-width\",\n        \"strokeDasharray\",\n        \"strokeDashoffset\",\n        \"strokeLinecap\",\n        \"strokeLinejoin\",\n        \"strokeMiterlimit\",\n        \"strokeOpacity\",\n        \"strokeRect\",\n        \"strokeStyle\",\n        \"strokeText\",\n        \"strokeWidth\",\n        \"style\",\n        \"styleFloat\",\n        \"styleMedia\",\n        \"styleSheet\",\n        \"styleSheetSets\",\n        \"styleSheets\",\n        \"sub\",\n        \"subarray\",\n        \"subject\",\n        \"submit\",\n        \"subscribe\",\n        \"substr\",\n        \"substring\",\n        \"substringData\",\n        \"subtle\",\n        \"suffix\",\n        \"suffixes\",\n        \"summary\",\n        \"sup\",\n        \"supports\",\n        \"surfaceScale\",\n        \"surroundContents\",\n        \"suspend\",\n        \"suspendRedraw\",\n        \"swapCache\",\n        \"swapNode\",\n        \"sweepFlag\",\n        \"symbols\",\n        \"system\",\n        \"systemCode\",\n        \"systemId\",\n        \"systemLanguage\",\n        \"systemXDPI\",\n        \"systemYDPI\",\n        \"tBodies\",\n        \"tFoot\",\n        \"tHead\",\n        \"tabIndex\",\n        \"table\",\n        \"table-layout\",\n        \"tableLayout\",\n        \"tableValues\",\n        \"tag\",\n        \"tagName\",\n        \"tagUrn\",\n        \"tags\",\n        \"taintEnabled\",\n        \"takeRecords\",\n        \"tan\",\n        \"tanh\",\n        \"target\",\n        \"targetElement\",\n        \"targetTouches\",\n        \"targetX\",\n        \"targetY\",\n        \"tel\",\n        \"terminate\",\n        \"test\",\n        \"texImage2D\",\n        \"texParameterf\",\n        \"texParameteri\",\n        \"texSubImage2D\",\n        \"text\",\n        \"text-align\",\n        \"text-anchor\",\n        \"text-decoration\",\n        \"text-decoration-color\",\n        \"text-decoration-line\",\n        \"text-decoration-style\",\n        \"text-indent\",\n        \"text-overflow\",\n        \"text-rendering\",\n        \"text-shadow\",\n        \"text-transform\",\n        \"textAlign\",\n        \"textAlignLast\",\n        \"textAnchor\",\n        \"textAutospace\",\n        \"textBaseline\",\n        \"textContent\",\n        \"textDecoration\",\n        \"textDecorationBlink\",\n        \"textDecorationColor\",\n        \"textDecorationLine\",\n        \"textDecorationLineThrough\",\n        \"textDecorationNone\",\n        \"textDecorationOverline\",\n        \"textDecorationStyle\",\n        \"textDecorationUnderline\",\n        \"textIndent\",\n        \"textJustify\",\n        \"textJustifyTrim\",\n        \"textKashida\",\n        \"textKashidaSpace\",\n        \"textLength\",\n        \"textOverflow\",\n        \"textRendering\",\n        \"textShadow\",\n        \"textTracks\",\n        \"textTransform\",\n        \"textUnderlinePosition\",\n        \"then\",\n        \"threadId\",\n        \"threshold\",\n        \"tiltX\",\n        \"tiltY\",\n        \"time\",\n        \"timeEnd\",\n        \"timeStamp\",\n        \"timeout\",\n        \"timestamp\",\n        \"timestampOffset\",\n        \"timing\",\n        \"title\",\n        \"toArray\",\n        \"toBlob\",\n        \"toDataURL\",\n        \"toDateString\",\n        \"toElement\",\n        \"toExponential\",\n        \"toFixed\",\n        \"toFloat32Array\",\n        \"toFloat64Array\",\n        \"toGMTString\",\n        \"toISOString\",\n        \"toJSON\",\n        \"toLocaleDateString\",\n        \"toLocaleFormat\",\n        \"toLocaleLowerCase\",\n        \"toLocaleString\",\n        \"toLocaleTimeString\",\n        \"toLocaleUpperCase\",\n        \"toLowerCase\",\n        \"toMethod\",\n        \"toPrecision\",\n        \"toSdp\",\n        \"toSource\",\n        \"toStaticHTML\",\n        \"toString\",\n        \"toStringTag\",\n        \"toTimeString\",\n        \"toUTCString\",\n        \"toUpperCase\",\n        \"toggle\",\n        \"toggleLongPressEnabled\",\n        \"tooLong\",\n        \"toolbar\",\n        \"top\",\n        \"topMargin\",\n        \"total\",\n        \"totalFrameDelay\",\n        \"totalVideoFrames\",\n        \"touchAction\",\n        \"touches\",\n        \"trace\",\n        \"track\",\n        \"transaction\",\n        \"transactions\",\n        \"transform\",\n        \"transform-origin\",\n        \"transform-style\",\n        \"transformOrigin\",\n        \"transformPoint\",\n        \"transformString\",\n        \"transformStyle\",\n        \"transformToDocument\",\n        \"transformToFragment\",\n        \"transition\",\n        \"transition-delay\",\n        \"transition-duration\",\n        \"transition-property\",\n        \"transition-timing-function\",\n        \"transitionDelay\",\n        \"transitionDuration\",\n        \"transitionProperty\",\n        \"transitionTimingFunction\",\n        \"translate\",\n        \"translateSelf\",\n        \"translationX\",\n        \"translationY\",\n        \"trim\",\n        \"trimLeft\",\n        \"trimRight\",\n        \"trueSpeed\",\n        \"trunc\",\n        \"truncate\",\n        \"type\",\n        \"typeDetail\",\n        \"typeMismatch\",\n        \"typeMustMatch\",\n        \"types\",\n        \"ubound\",\n        \"undefined\",\n        \"unescape\",\n        \"uneval\",\n        \"unicode-bidi\",\n        \"unicodeBidi\",\n        \"uniform1f\",\n        \"uniform1fv\",\n        \"uniform1i\",\n        \"uniform1iv\",\n        \"uniform2f\",\n        \"uniform2fv\",\n        \"uniform2i\",\n        \"uniform2iv\",\n        \"uniform3f\",\n        \"uniform3fv\",\n        \"uniform3i\",\n        \"uniform3iv\",\n        \"uniform4f\",\n        \"uniform4fv\",\n        \"uniform4i\",\n        \"uniform4iv\",\n        \"uniformMatrix2fv\",\n        \"uniformMatrix3fv\",\n        \"uniformMatrix4fv\",\n        \"unique\",\n        \"uniqueID\",\n        \"uniqueNumber\",\n        \"unitType\",\n        \"units\",\n        \"unloadEventEnd\",\n        \"unloadEventStart\",\n        \"unlock\",\n        \"unmount\",\n        \"unobserve\",\n        \"unpause\",\n        \"unpauseAnimations\",\n        \"unreadCount\",\n        \"unregister\",\n        \"unregisterContentHandler\",\n        \"unregisterProtocolHandler\",\n        \"unscopables\",\n        \"unselectable\",\n        \"unshift\",\n        \"unsubscribe\",\n        \"unsuspendRedraw\",\n        \"unsuspendRedrawAll\",\n        \"unwatch\",\n        \"unwrapKey\",\n        \"update\",\n        \"updateCommands\",\n        \"updateIce\",\n        \"updateInterval\",\n        \"updateSettings\",\n        \"updated\",\n        \"updating\",\n        \"upload\",\n        \"upper\",\n        \"upperBound\",\n        \"upperOpen\",\n        \"uri\",\n        \"url\",\n        \"urn\",\n        \"urns\",\n        \"usages\",\n        \"useCurrentView\",\n        \"useMap\",\n        \"useProgram\",\n        \"usedSpace\",\n        \"userAgent\",\n        \"userLanguage\",\n        \"username\",\n        \"v8BreakIterator\",\n        \"vAlign\",\n        \"vLink\",\n        \"valid\",\n        \"validateProgram\",\n        \"validationMessage\",\n        \"validity\",\n        \"value\",\n        \"valueAsDate\",\n        \"valueAsNumber\",\n        \"valueAsString\",\n        \"valueInSpecifiedUnits\",\n        \"valueMissing\",\n        \"valueOf\",\n        \"valueText\",\n        \"valueType\",\n        \"values\",\n        \"vector-effect\",\n        \"vectorEffect\",\n        \"velocityAngular\",\n        \"velocityExpansion\",\n        \"velocityX\",\n        \"velocityY\",\n        \"vendor\",\n        \"vendorSub\",\n        \"verify\",\n        \"version\",\n        \"vertexAttrib1f\",\n        \"vertexAttrib1fv\",\n        \"vertexAttrib2f\",\n        \"vertexAttrib2fv\",\n        \"vertexAttrib3f\",\n        \"vertexAttrib3fv\",\n        \"vertexAttrib4f\",\n        \"vertexAttrib4fv\",\n        \"vertexAttribDivisorANGLE\",\n        \"vertexAttribPointer\",\n        \"vertical\",\n        \"vertical-align\",\n        \"verticalAlign\",\n        \"verticalOverflow\",\n        \"vibrate\",\n        \"videoHeight\",\n        \"videoTracks\",\n        \"videoWidth\",\n        \"view\",\n        \"viewBox\",\n        \"viewBoxString\",\n        \"viewTarget\",\n        \"viewTargetString\",\n        \"viewport\",\n        \"viewportAnchorX\",\n        \"viewportAnchorY\",\n        \"viewportElement\",\n        \"visibility\",\n        \"visibilityState\",\n        \"visible\",\n        \"vlinkColor\",\n        \"voice\",\n        \"volume\",\n        \"vrml\",\n        \"vspace\",\n        \"w\",\n        \"wand\",\n        \"warn\",\n        \"wasClean\",\n        \"watch\",\n        \"watchPosition\",\n        \"webdriver\",\n        \"webkitAddKey\",\n        \"webkitAnimation\",\n        \"webkitAnimationDelay\",\n        \"webkitAnimationDirection\",\n        \"webkitAnimationDuration\",\n        \"webkitAnimationFillMode\",\n        \"webkitAnimationIterationCount\",\n        \"webkitAnimationName\",\n        \"webkitAnimationPlayState\",\n        \"webkitAnimationTimingFunction\",\n        \"webkitAppearance\",\n        \"webkitAudioContext\",\n        \"webkitAudioDecodedByteCount\",\n        \"webkitAudioPannerNode\",\n        \"webkitBackfaceVisibility\",\n        \"webkitBackground\",\n        \"webkitBackgroundAttachment\",\n        \"webkitBackgroundClip\",\n        \"webkitBackgroundColor\",\n        \"webkitBackgroundImage\",\n        \"webkitBackgroundOrigin\",\n        \"webkitBackgroundPosition\",\n        \"webkitBackgroundPositionX\",\n        \"webkitBackgroundPositionY\",\n        \"webkitBackgroundRepeat\",\n        \"webkitBackgroundSize\",\n        \"webkitBackingStorePixelRatio\",\n        \"webkitBorderImage\",\n        \"webkitBorderImageOutset\",\n        \"webkitBorderImageRepeat\",\n        \"webkitBorderImageSlice\",\n        \"webkitBorderImageSource\",\n        \"webkitBorderImageWidth\",\n        \"webkitBoxAlign\",\n        \"webkitBoxDirection\",\n        \"webkitBoxFlex\",\n        \"webkitBoxOrdinalGroup\",\n        \"webkitBoxOrient\",\n        \"webkitBoxPack\",\n        \"webkitBoxSizing\",\n        \"webkitCancelAnimationFrame\",\n        \"webkitCancelFullScreen\",\n        \"webkitCancelKeyRequest\",\n        \"webkitCancelRequestAnimationFrame\",\n        \"webkitClearResourceTimings\",\n        \"webkitClosedCaptionsVisible\",\n        \"webkitConvertPointFromNodeToPage\",\n        \"webkitConvertPointFromPageToNode\",\n        \"webkitCreateShadowRoot\",\n        \"webkitCurrentFullScreenElement\",\n        \"webkitCurrentPlaybackTargetIsWireless\",\n        \"webkitDirectionInvertedFromDevice\",\n        \"webkitDisplayingFullscreen\",\n        \"webkitEnterFullScreen\",\n        \"webkitEnterFullscreen\",\n        \"webkitExitFullScreen\",\n        \"webkitExitFullscreen\",\n        \"webkitExitPointerLock\",\n        \"webkitFullScreenKeyboardInputAllowed\",\n        \"webkitFullscreenElement\",\n        \"webkitFullscreenEnabled\",\n        \"webkitGenerateKeyRequest\",\n        \"webkitGetAsEntry\",\n        \"webkitGetDatabaseNames\",\n        \"webkitGetEntries\",\n        \"webkitGetEntriesByName\",\n        \"webkitGetEntriesByType\",\n        \"webkitGetFlowByName\",\n        \"webkitGetGamepads\",\n        \"webkitGetImageDataHD\",\n        \"webkitGetNamedFlows\",\n        \"webkitGetRegionFlowRanges\",\n        \"webkitGetUserMedia\",\n        \"webkitHasClosedCaptions\",\n        \"webkitHidden\",\n        \"webkitIDBCursor\",\n        \"webkitIDBDatabase\",\n        \"webkitIDBDatabaseError\",\n        \"webkitIDBDatabaseException\",\n        \"webkitIDBFactory\",\n        \"webkitIDBIndex\",\n        \"webkitIDBKeyRange\",\n        \"webkitIDBObjectStore\",\n        \"webkitIDBRequest\",\n        \"webkitIDBTransaction\",\n        \"webkitImageSmoothingEnabled\",\n        \"webkitIndexedDB\",\n        \"webkitInitMessageEvent\",\n        \"webkitIsFullScreen\",\n        \"webkitKeys\",\n        \"webkitLineDashOffset\",\n        \"webkitLockOrientation\",\n        \"webkitMatchesSelector\",\n        \"webkitMediaStream\",\n        \"webkitNotifications\",\n        \"webkitOfflineAudioContext\",\n        \"webkitOrientation\",\n        \"webkitPeerConnection00\",\n        \"webkitPersistentStorage\",\n        \"webkitPointerLockElement\",\n        \"webkitPostMessage\",\n        \"webkitPreservesPitch\",\n        \"webkitPutImageDataHD\",\n        \"webkitRTCPeerConnection\",\n        \"webkitRegionOverset\",\n        \"webkitRequestAnimationFrame\",\n        \"webkitRequestFileSystem\",\n        \"webkitRequestFullScreen\",\n        \"webkitRequestFullscreen\",\n        \"webkitRequestPointerLock\",\n        \"webkitResolveLocalFileSystemURL\",\n        \"webkitSetMediaKeys\",\n        \"webkitSetResourceTimingBufferSize\",\n        \"webkitShadowRoot\",\n        \"webkitShowPlaybackTargetPicker\",\n        \"webkitSlice\",\n        \"webkitSpeechGrammar\",\n        \"webkitSpeechGrammarList\",\n        \"webkitSpeechRecognition\",\n        \"webkitSpeechRecognitionError\",\n        \"webkitSpeechRecognitionEvent\",\n        \"webkitStorageInfo\",\n        \"webkitSupportsFullscreen\",\n        \"webkitTemporaryStorage\",\n        \"webkitTextSizeAdjust\",\n        \"webkitTransform\",\n        \"webkitTransformOrigin\",\n        \"webkitTransition\",\n        \"webkitTransitionDelay\",\n        \"webkitTransitionDuration\",\n        \"webkitTransitionProperty\",\n        \"webkitTransitionTimingFunction\",\n        \"webkitURL\",\n        \"webkitUnlockOrientation\",\n        \"webkitUserSelect\",\n        \"webkitVideoDecodedByteCount\",\n        \"webkitVisibilityState\",\n        \"webkitWirelessVideoPlaybackDisabled\",\n        \"webkitdropzone\",\n        \"webstore\",\n        \"weight\",\n        \"whatToShow\",\n        \"wheelDelta\",\n        \"wheelDeltaX\",\n        \"wheelDeltaY\",\n        \"which\",\n        \"white-space\",\n        \"whiteSpace\",\n        \"wholeText\",\n        \"widows\",\n        \"width\",\n        \"will-change\",\n        \"willChange\",\n        \"willValidate\",\n        \"window\",\n        \"withCredentials\",\n        \"word-break\",\n        \"word-spacing\",\n        \"word-wrap\",\n        \"wordBreak\",\n        \"wordSpacing\",\n        \"wordWrap\",\n        \"wrap\",\n        \"wrapKey\",\n        \"write\",\n        \"writeln\",\n        \"writingMode\",\n        \"x\",\n        \"x1\",\n        \"x2\",\n        \"xChannelSelector\",\n        \"xmlEncoding\",\n        \"xmlStandalone\",\n        \"xmlVersion\",\n        \"xmlbase\",\n        \"xmllang\",\n        \"xmlspace\",\n        \"y\",\n        \"y1\",\n        \"y2\",\n        \"yChannelSelector\",\n        \"yandex\",\n        \"z\",\n        \"z-index\",\n        \"zIndex\",\n        \"zoom\",\n        \"zoomAndPan\",\n        \"zoomRectScreen\"\n    ]\n}\n",
  "uglify-js/tools/node.js": "var path = require(\"path\");\nvar fs = require(\"fs\");\nvar vm = require(\"vm\");\n\nvar UglifyJS = vm.createContext({\n    console       : console,\n    process       : process,\n    Buffer        : Buffer,\n    MOZ_SourceMap : require(\"source-map\")\n});\n\nfunction load_global(file) {\n    file = path.resolve(path.dirname(module.filename), file);\n    try {\n        var code = fs.readFileSync(file, \"utf8\");\n        return vm.runInContext(code, UglifyJS, file);\n    } catch(ex) {\n        // XXX: in case of a syntax error, the message is kinda\n        // useless. (no location information).\n        console.log(\"ERROR in file: \" + file + \" / \" + ex);\n        process.exit(1);\n    }\n};\n\nvar FILES = exports.FILES = [\n    \"../lib/utils.js\",\n    \"../lib/ast.js\",\n    \"../lib/parse.js\",\n    \"../lib/transform.js\",\n    \"../lib/scope.js\",\n    \"../lib/output.js\",\n    \"../lib/compress.js\",\n    \"../lib/sourcemap.js\",\n    \"../lib/mozilla-ast.js\",\n    \"../lib/propmangle.js\"\n].map(function(file){\n    return fs.realpathSync(path.join(path.dirname(__filename), file));\n});\n\nFILES.forEach(load_global);\n\nUglifyJS.AST_Node.warn_function = function(txt) {\n    console.error(\"WARN: %s\", txt);\n};\n\n// XXX: perhaps we shouldn't export everything but heck, I'm lazy.\nfor (var i in UglifyJS) {\n    if (UglifyJS.hasOwnProperty(i)) {\n        exports[i] = UglifyJS[i];\n    }\n}\n\nexports.minify = function(files, options) {\n    options = UglifyJS.defaults(options, {\n        spidermonkey : false,\n        outSourceMap : null,\n        sourceRoot   : null,\n        inSourceMap  : null,\n        fromString   : false,\n        warnings     : false,\n        mangle       : {},\n        output       : null,\n        compress     : {}\n    });\n    UglifyJS.base54.reset();\n\n    // 1. parse\n    var toplevel = null,\n        sourcesContent = {};\n\n    if (options.spidermonkey) {\n        toplevel = UglifyJS.AST_Node.from_mozilla_ast(files);\n    } else {\n        if (typeof files == \"string\")\n            files = [ files ];\n        files.forEach(function(file){\n            var code = options.fromString\n                ? file\n                : fs.readFileSync(file, \"utf8\");\n            sourcesContent[file] = code;\n            toplevel = UglifyJS.parse(code, {\n                filename: options.fromString ? \"?\" : file,\n                toplevel: toplevel\n            });\n        });\n    }\n\n    // 2. compress\n    if (options.compress) {\n        var compress = { warnings: options.warnings };\n        UglifyJS.merge(compress, options.compress);\n        toplevel.figure_out_scope();\n        var sq = UglifyJS.Compressor(compress);\n        toplevel = toplevel.transform(sq);\n    }\n\n    // 3. mangle\n    if (options.mangle) {\n        toplevel.figure_out_scope(options.mangle);\n        toplevel.compute_char_frequency(options.mangle);\n        toplevel.mangle_names(options.mangle);\n    }\n\n    // 4. output\n    var inMap = options.inSourceMap;\n    var output = {};\n    if (typeof options.inSourceMap == \"string\") {\n        inMap = fs.readFileSync(options.inSourceMap, \"utf8\");\n    }\n    if (options.outSourceMap) {\n        output.source_map = UglifyJS.SourceMap({\n            file: options.outSourceMap,\n            orig: inMap,\n            root: options.sourceRoot\n        });\n        if (options.sourceMapIncludeSources) {\n            for (var file in sourcesContent) {\n                if (sourcesContent.hasOwnProperty(file)) {\n                    output.source_map.get().setSourceContent(file, sourcesContent[file]);\n                }\n            }\n        }\n\n    }\n    if (options.output) {\n        UglifyJS.merge(output, options.output);\n    }\n    var stream = UglifyJS.OutputStream(output);\n    toplevel.print(stream);\n\n    if(options.outSourceMap){\n        stream += \"\\n//# sourceMappingURL=\" + options.outSourceMap;\n    }\n\n    var source_map = output.source_map;\n    if (source_map) {\n        source_map = source_map + \"\";\n    }\n\n    return {\n        code : stream + \"\",\n        map  : source_map\n    };\n};\n\n// exports.describe_ast = function() {\n//     function doitem(ctor) {\n//         var sub = {};\n//         ctor.SUBCLASSES.forEach(function(ctor){\n//             sub[ctor.TYPE] = doitem(ctor);\n//         });\n//         var ret = {};\n//         if (ctor.SELF_PROPS.length > 0) ret.props = ctor.SELF_PROPS;\n//         if (ctor.SUBCLASSES.length > 0) ret.sub = sub;\n//         return ret;\n//     }\n//     return doitem(UglifyJS.AST_Node).sub;\n// }\n\nexports.describe_ast = function() {\n    var out = UglifyJS.OutputStream({ beautify: true });\n    function doitem(ctor) {\n        out.print(\"AST_\" + ctor.TYPE);\n        var props = ctor.SELF_PROPS.filter(function(prop){\n            return !/^\\$/.test(prop);\n        });\n        if (props.length > 0) {\n            out.space();\n            out.with_parens(function(){\n                props.forEach(function(prop, i){\n                    if (i) out.space();\n                    out.print(prop);\n                });\n            });\n        }\n        if (ctor.documentation) {\n            out.space();\n            out.print_string(ctor.documentation);\n        }\n        if (ctor.SUBCLASSES.length > 0) {\n            out.space();\n            out.with_block(function(){\n                ctor.SUBCLASSES.forEach(function(ctor, i){\n                    out.indent();\n                    doitem(ctor);\n                    out.newline();\n                });\n            });\n        }\n    };\n    doitem(UglifyJS.AST_Node);\n    return out + \"\";\n};\n\nfunction readReservedFile(filename, reserved) {\n    if (!reserved) {\n        reserved = { vars: [], props: [] };\n    }\n    var data = fs.readFileSync(filename, \"utf8\");\n    data = JSON.parse(data);\n    if (data.vars) {\n        data.vars.forEach(function(name){\n            UglifyJS.push_uniq(reserved.vars, name);\n        });\n    }\n    if (data.props) {\n        data.props.forEach(function(name){\n            UglifyJS.push_uniq(reserved.props, name);\n        });\n    }\n    return reserved;\n}\n\nexports.readReservedFile = readReservedFile;\n\nexports.readDefaultReservedFile = function(reserved) {\n    return readReservedFile(path.join(__dirname, \"domprops.json\"), reserved);\n};\n\nexports.readNameCache = function(filename, key) {\n    var cache = null;\n    if (filename) {\n        try {\n            var cache = fs.readFileSync(filename, \"utf8\");\n            cache = JSON.parse(cache)[key];\n            if (!cache) throw \"init\";\n            cache.props = UglifyJS.Dictionary.fromObject(cache.props);\n        } catch(ex) {\n            cache = {\n                cname: -1,\n                props: new UglifyJS.Dictionary()\n            };\n        }\n    }\n    return cache;\n};\n\nexports.writeNameCache = function(filename, key, cache) {\n    if (filename) {\n        var data;\n        try {\n            data = fs.readFileSync(filename, \"utf8\");\n            data = JSON.parse(data);\n        } catch(ex) {\n            data = {};\n        }\n        data[key] = {\n            cname: cache.cname,\n            props: cache.props.toObject()\n        };\n        fs.writeFileSync(filename, JSON.stringify(data, null, 2), \"utf8\");\n    }\n};\n",
  "cli/cli.js": "/**\n * Copyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n //Note: cli includes kof/node-natives and creationix/stack. I couldn't find\n //license information for either - contact me if you want your license added\n\nvar cli = exports,\n    argv, curr_opt, curr_val, full_opt, is_long,\n    short_tags = [], opt_list, parsed = {},\n    usage, argv_parsed, command_list, commands,\n    daemon, daemon_arg, no_color, show_debug;\n\ncli.app = null;\ncli.version = null;\ncli.argv = [];\ncli.argc = 0;\n\ncli.options = {};\ncli.args = [];\ncli.command = null;\n\ncli.width = 70;\ncli.option_width = 25;\n\n/**\n * Bind kof's node-natives (https://github.com/kof/node-natives) to `cli.native`\n *\n * Rather than requiring node natives (e.g. var fs = require('fs')), all\n * native modules can be accessed like `cli.native.fs`\n */\ncli.native = {};\nvar define_native = function (module) {\n    Object.defineProperty(cli.native, module, {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n            delete cli.native[module];\n            return (cli.native[module] = require(module));\n        }\n    });\n};\nvar natives = process.binding('natives');\nfor (var module in natives) {\n    define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\n\n/**\n * Define plugins. Plugins can be enabled and disabled by calling:\n *\n *     `cli.enable(plugin1, [plugin2, ...])`\n *     `cli.disable(plugin1, [plugin2, ...])`\n *\n * Methods are chainable - `cli.enable(plugin).disable(plugin2)`.\n *\n * The 'help' plugin is enabled by default.\n */\nvar enable = {\n    help: true,      //Adds -h, --help\n    version: false,  //Adds -v,--version => gets version by parsing a nearby package.json\n    daemon: false,   //Adds -d,--daemon [ARG] => (see cli.daemon() below)\n    status: false,   //Adds -k,--no-color & --debug => display plain status messages /display debug messages\n    timeout: false,  //Adds -t,--timeout N => timeout the process after N seconds\n    catchall: false, //Adds -c,--catch => catch and output uncaughtExceptions\n    glob: false      //Adds glob matching => use cli.glob(arg)\n}\ncli.enable = function (/*plugins*/) {\n    Array.prototype.slice.call(arguments).forEach(function (plugin) {\n        switch (plugin) {\n        case 'daemon':\n            try {\n                daemon = require('daemon');\n                if (typeof daemon.daemonize !== 'function') {\n                    throw 'Invalid module';\n                }\n            } catch (e) {\n                cli.fatal('daemon.node not installed. Please run `npm install daemon`');\n            }\n            break;\n        case 'catchall':\n            process.on('uncaughtException', function (err) {\n                cli.error('Uncaught exception: ' + (err.msg || err));\n            });\n            break;\n        case 'help': case 'version': case 'status':\n        case 'autocomplete': case 'timeout':\n            //Just add switches.\n            break;\n        case 'glob':\n            cli.glob = require('glob');\n            break;\n        default:\n            cli.fatal('Unknown plugin \"' + plugin + '\"');\n            break;\n        }\n        enable[plugin] = true;\n    });\n    return cli;\n}\ncli.disable = function (/*plugins*/) {\n    Array.prototype.slice.call(arguments).forEach(function (plugin) {\n        if (enable[plugin]) {\n            enable[plugin] = false;\n        }\n    });\n    return cli;\n}\n\n/**\n * Sets argv (default is process.argv).\n *\n * @param {Array|String} argv\n * @param {Boolean} keep_arg0 (optional - default is false)\n * @api public\n */\ncli.setArgv = function (arr, keep_arg0) {\n    if (typeof arr == 'string') {\n      arr = arr.split(' ');\n    } else {\n      arr = arr.slice();\n    }\n    cli.app = arr.shift();\n    // Strip off argv[0] if it's a node binary\n    // So this is still broken and will break if you are calling node through a\n    // symlink, unless you are lucky enough to have it as 'node' literal. Latter\n    // is a hack, but resolving abspaths/symlinks is an unportable can of worms.\n    if (!keep_arg0 && (['node', 'node.exe'].indexOf(cli.native.path.basename(cli.app)) !== -1\n            || cli.native.path.basename(process.execPath) === cli.app\n            || process.execPath === cli.app)) {\n        cli.app = arr.shift();\n    }\n    cli.app = cli.native.path.basename(cli.app);\n    argv_parsed = false;\n    cli.args = cli.argv = argv = arr;\n    cli.argc = argv.length;\n    cli.options = {};\n    cli.command = null;\n};\ncli.setArgv(process.argv);\n\n/**\n * Returns the next opt, or false if no opts are found.\n *\n * @return {String} opt\n * @api public\n */\ncli.next = function () {\n    if (!argv_parsed) {\n        cli.args = [];\n        argv_parsed = true;\n    }\n\n    curr_val = null;\n\n    //If we're currently in a group of short opts (e.g. -abc), return the next opt\n    if (short_tags.length) {\n        curr_opt = short_tags.shift();\n        full_opt = '-' + curr_opt;\n        return curr_opt;\n    }\n\n    if (!argv.length) {\n        return false;\n    }\n\n    curr_opt = argv.shift();\n\n    //If an escape sequence is found (- or --), subsequent opts are ignored\n    if (curr_opt === '-' || curr_opt === '--') {\n        while (argv.length) {\n            cli.args.push(argv.shift());\n        }\n        return false;\n    }\n\n    //If the next element in argv isn't an opt, add it to the list of args\n    if (curr_opt[0] !== '-') {\n        cli.args.push(curr_opt);\n        return cli.next();\n    } else {\n        //Check if the opt is short/long\n        is_long = curr_opt[1] === '-';\n        curr_opt = curr_opt.substr(is_long ? 2 : 1);\n    }\n\n    //Accept grouped short opts, e.g. -abc => -a -b -c\n    if (!is_long && curr_opt.length > 1) {\n        short_tags = curr_opt.split('');\n        return cli.next();\n    }\n\n    var eq, len;\n\n    //Check if the long opt is in the form --option=VALUE\n    if (is_long && (eq = curr_opt.indexOf('=')) >= 0) {\n        curr_val = curr_opt.substr(eq + 1);\n        curr_opt = curr_opt.substr(0, eq);\n        len = curr_val.length;\n        //Allow values to be quoted\n        if ((curr_val[0] === '\"' && curr_val[len - 1] === '\"') ||\n            (curr_val[0] === \"'\" && curr_val[len - 1] === \"'\"))\n        {\n            curr_val = curr_val.substr(1, len-2);\n        }\n        if (curr_val.match(/^[0-9]+$/)) {\n            curr_val = parseInt(curr_val, 10);\n        }\n    }\n\n    //Save the opt representation for later\n    full_opt = (is_long ? '--' : '-') + curr_opt;\n\n    return curr_opt;\n};\n\n/**\n * Parses command line opts.\n *\n * `opts` must be an object with opts defined like:\n *        long_tag: [short_tag, description, value_type, default_value];\n *\n * `commands` is an optional array or object for apps that are of the form\n *      my_app [OPTIONS] <command> [ARGS]\n *  The command list is output with usage information + there is bundled\n *  support for auto-completion, etc.\n *\n * See README.md for more information.\n *\n * @param {Object} opts\n * @param {Object} commands (optional)\n * @return {Object} opts (parsed)\n * @api public\n */\ncli.parse = function (opts, command_def) {\n    var default_val, i, parsed = cli.options, seen,\n        catch_all = !opts;\n    opt_list = opts || {};\n    commands = command_def;\n    command_list = commands || [];\n    if (commands && !Array.isArray(commands)) {\n        command_list = Object.keys(commands);\n    }\n    while ((o = cli.next())) {\n        seen = false;\n        for (var opt in opt_list) {\n            if (!(opt_list[opt] instanceof Array)) {\n                continue;\n            }\n            if (!opt_list[opt][0]) {\n                opt_list[opt][0] = opt;\n            }\n            if (o === opt || o === opt_list[opt][0]) {\n                seen = true;\n                if (opt_list[opt].length === 2) {\n                    parsed[opt] = true;\n                    break;\n                }\n                default_val = null;\n                if (opt_list[opt].length === 4) {\n                    default_val = opt_list[opt][3];\n                }\n                if (opt_list[opt][2] instanceof Array) {\n                    for (i = 0, l = opt_list[opt][2].length; i < l; i++) {\n                        if (typeof opt_list[opt][2][i] === 'number') {\n                            opt_list[opt][2][i] += '';\n                        }\n                    }\n                    parsed[opt] = cli.getArrayValue(opt_list[opt][2], is_long ? null : default_val);\n                    break;\n                }\n                if (opt_list[opt][2].toLowerCase) {\n                    opt_list[opt][2] = opt_list[opt][2].toLowerCase();\n                }\n                switch (opt_list[opt][2]) {\n                case 'string': case 1: case true:\n                    parsed[opt] = cli.getValue(default_val);\n                    break;\n                case 'int': case 'number': case 'num':\n                case 'time': case 'seconds': case 'secs': case 'minutes': case 'mins':\n                case 'x': case 'n':\n                    parsed[opt] = cli.getInt(default_val);\n                    break;\n                case 'float': case 'decimal':\n                    parsed[opt] = cli.getFloat(default_val);\n                    break;\n                case 'path': case 'file': case 'directory': case 'dir':\n                    parsed[opt] = cli.getPath(default_val, opt_list[opt][2]);\n                    break;\n                case 'email':\n                    parsed[opt] = cli.getEmail(default_val);\n                    break;\n                case 'url': case 'uri': case 'domain': case 'host':\n                    parsed[opt] = cli.getUrl(default_val, opt_list[opt][2]);\n                    break;\n                case 'ip':\n                    parsed[opt] = cli.getIp(default_val);\n                    break;\n                case 'bool': case 'boolean': case 'on':\n                    parsed[opt] = true;\n                    break;\n                case 'false': case 'off': case false: case 0:\n                    parsed[opt] = false;\n                    break;\n                default:\n                     cli.fatal('Unknown opt type \"' + opt_list[opt][2] + '\"');\n                }\n                break;\n            }\n        }\n        if (process.env.NODE_DISABLE_COLORS) {\n            no_color = true;\n        }\n        if (!seen) {\n            if (enable.help && (o === 'h' || o === 'help')) {\n                cli.getUsage();\n            } else if (enable.version && (o === 'v' || o === 'version')) {\n                if (cli.version == null) {\n                    cli.parsePackageJson();\n                }\n                console.error(cli.app + ' v' + cli.version);\n                cli.exit();\n                break;\n            } else if (enable.daemon && (o === 'd' || o === 'daemon')) {\n                daemon_arg = cli.getArrayValue(['start','stop','restart','pid','log'], is_long ? null : 'start');\n                continue;\n            } else if (enable.catchall && (o === 'c' || o === 'catch')) {\n                continue;\n            } else if (enable.status && (o === 'k' || o === 'no-color' || o === 'debug')) {\n                no_color = (o === 'k' || o === 'no-color');\n                show_debug = o === 'debug';\n                continue;\n            } else if (enable.timeout && (o === 't' || o === 'timeout')) {\n                var secs = cli.getInt();\n                setTimeout(function () {\n                    cli.fatal('Process timed out after ' + secs + 's');\n                }, secs * 1000);\n                continue;\n            } else if (catch_all) {\n                parsed[o] = curr_val || true;\n                continue;\n            }\n            cli.fatal('Unknown option ' + full_opt);\n        }\n    }\n    //Fill the remaining options with their default value or null\n    for (var opt in opt_list) {\n        default_val = opt_list[opt].length === 4 ? opt_list[opt][3] : null;\n        if (!(opt_list[opt] instanceof Array)) {\n            parsed[opt] = opt_list[opt];\n            continue;\n        } else if (typeof parsed[opt] === 'undefined') {\n            parsed[opt] = default_val;\n        }\n    }\n    if (command_list.length) {\n        if (cli.args.length === 0) {\n            if (enable.help) {\n                cli.getUsage();\n            } else {\n                cli.fatal('A command is required (' + command_list.join(', ') + ').');\n            }\n            return cli.exit(1);\n        } else {\n            cli.command = cli.autocompleteCommand(cli.args.shift());\n        }\n    }\n    cli.argc = cli.args.length;\n    return parsed;\n};\n\n/**\n * Helper method for matching a command from the command list.\n *\n * @param {String} command\n * @return {String} full_command\n * @api public\n */\ncli.autocompleteCommand = function (command) {\n    var list;\n    if (!(command_list instanceof Array)) {\n        list = Object.keys(command_list);\n    } else {\n        list = command_list;\n    }\n    var i, j = 0, c = command.length, tmp_list;\n    if (list.length === 0 || list.indexOf(command) !== -1) {\n        return command;\n    }\n    for (i = 0; i < c; i++) {\n        tmp_list = [];\n        l = list.length;\n        if (l <= 1) break;\n        for (j = 0; j < l; j++)\n            if (list[j].length >= i && list[j][i] === command[i])\n                tmp_list.push(list[j]);\n        list = tmp_list;\n    }\n    l = list.length;\n    if (l === 1) {\n        return list[0];\n    } else if (l === 0) {\n        cli.fatal('Unknown command \"' + command + '\"' + (enable.help ? '. Please see --help for more information' : ''));\n    } else {\n        list.sort();\n        cli.fatal('The command \"' + command + '\" is ambiguous and could mean \"' + list.join('\", \"') + '\"');\n    }\n};\n\n/**\n * Adds methods to output styled status messages to stderr.\n *\n * Added methods are cli.info(msg), cli.error(msg), cli.ok(msg), and\n * cli.debug(msg).\n *\n * To control status messages, use the 'status' plugin\n *    1) debug() messages are hidden by default. Display them with\n *       the --debug opt.\n *    2) to hide all status messages, use the -s or --silent opt.\n *\n * @api private\n */\ncli.status = function (msg, type) {\n    var pre;\n    switch (type) {\n    case 'info':\n        pre = no_color ? 'INFO:' : '\\x1B[33mINFO\\x1B[0m:';\n        break;\n    case 'debug':\n        pre = no_color ? 'DEBUG:' : '\\x1B[36mDEBUG\\x1B[0m:';\n        break;\n    case 'error':\n    case 'fatal':\n        pre = no_color ? 'ERROR:' : '\\x1B[31mERROR\\x1B[0m:';\n        break;\n    case 'ok':\n        pre = no_color ? 'OK:' : '\\x1B[32mOK\\x1B[0m:';\n        break;\n    }\n    msg = pre + ' ' + msg;\n    if (type === 'fatal') {\n        console.error(msg);\n        return cli.exit(1);\n    }\n    if (enable.status && !show_debug && type === 'debug') {\n        return;\n    }\n    console.error(msg);\n};\n['info','error','ok','debug','fatal'].forEach(function (type) {\n    cli[type] = function (msg) {\n        cli.status(msg, type);\n    };\n});\n\n/**\n * Sets the app name and version.\n *\n * Usage:\n *     setApp('myapp', '0.1.0');\n *     setApp('./package.json'); //Pull name/version from package.json\n *\n * @param {String} name\n * @return cli (for chaining)\n * @api public\n */\ncli.setApp = function (name, version) {\n    if (name.indexOf('package.json') !== -1) {\n        cli.parsePackageJson(name);\n    } else {\n        cli.app = name;\n        cli.version = version;\n    }\n    return cli;\n};\n\n/**\n * Parses the version number from package.json. If no path is specified, cli\n * will attempt to locate a package.json in ./, ../ or ../../\n *\n * @param {String} path (optional)\n * @api public\n */\ncli.parsePackageJson = function (path) {\n    var parse_packagejson = function (path) {\n        var packagejson = JSON.parse(cli.native.fs.readFileSync(path, 'utf8'));\n        cli.version = packagejson.version;\n        cli.app = packagejson.name;\n    };\n    var try_all = function (arr, func, err) {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            try {\n                func(arr[i]);\n                return;\n            } catch (e) {\n                if (i === l-1) {\n                    cli.fatal(err);\n                }\n            }\n        }\n    };\n    try {\n        if (path) {\n            return parse_packagejson(path);\n        }\n        try_all([\n            __dirname + '/package.json',\n            __dirname + '/../package.json',\n            __dirname + '/../../package.json'\n        ], parse_packagejson);\n    } catch (e) {\n        cli.fatal('Could not detect ' + cli.app + ' version');\n    }\n};\n\n/**\n * Sets the usage string - default is `app [OPTIONS] [ARGS]`.\n *\n * @param {String} u\n * @return cli (for chaining)\n * @api public\n */\ncli.setUsage = function (u) {\n    usage = u;\n    return cli;\n};\n\nvar pad = function (str, len) {\n    if (typeof len === 'undefined') {\n        len = str;\n        str = '';\n    }\n    if (str.length < len) {\n        len -= str.length;\n        while (len--) str += ' ';\n    }\n    return str;\n};\n\n/**\n * Automatically build usage information from the opts list. If the help\n * plugin is enabled (default), this info is displayed with -h, --help.\n *\n * @api public\n */\ncli.getUsage = function (code) {\n    var short, desc, optional, line, seen_opts = [],\n        switch_pad = cli.option_width;\n\n    var trunc_desc = function (pref, desc, len) {\n        var pref_len = pref.length,\n            desc_len = cli.width - pref_len,\n            truncated = '';\n        if (desc.length <= desc_len) {\n            return desc;\n        }\n        var desc_words = (desc+'').split(' '), chars = 0, word;\n        while (desc_words.length) {\n            truncated += (word = desc_words.shift()) + ' ';\n            chars += word.length;\n            if (desc_words.length && chars + desc_words[0].length > desc_len) {\n                truncated += '\\n' + pad(pref_len);\n                chars = 0;\n            }\n        }\n        return truncated;\n    };\n\n    usage = usage || cli.app + ' [OPTIONS]' + (command_list.length ? ' <command>' : '') + ' [ARGS]';\n    if (no_color) {\n        console.error('Usage:\\n  ' + usage);\n        console.error('Options: ');\n    } else {\n        console.error('\\x1b[1mUsage\\x1b[0m:\\n  ' + usage);\n        console.error('\\n\\x1b[1mOptions\\x1b[0m: ');\n    }\n    for (var opt in opt_list) {\n\n        if (opt.length === 1) {\n            long = opt_list[opt][0];\n            short = opt;\n        } else {\n            long = opt;\n            short = opt_list[opt][0];\n        }\n\n        //Parse opt_list\n        desc = opt_list[opt][1].trim();\n        type = opt_list[opt].length >= 3 ? opt_list[opt][2] : null;\n        optional = opt_list[opt].length === 4 ? opt_list[opt][3] : null;\n\n        //Build usage line\n        if (short === long) {\n            if (short.length === 1) {\n                line = '  -' + short;\n            } else {\n                line = '      --' + long;\n            }\n        } else if (short) {\n            line = '  -' + short + ', --' + long;\n        } else {\n            line = '      --' + long;\n        }\n        line += ' ';\n\n        if (type) {\n            if (type instanceof Array) {\n                desc += '. VALUE must be either [' + type.join('|') + ']';\n                type = 'VALUE';\n            }\n            if (type === true || type === 1) {\n                type = long.toUpperCase();\n            }\n            type = type.toUpperCase();\n            if (type === 'FLOAT' || type === 'INT') {\n                type = 'NUMBER';\n            }\n            line += optional ? '[' + type + ']' : type;\n        }\n        line = pad(line, switch_pad);\n        line += trunc_desc(line, desc);\n        line += optional ? ' (Default is ' + optional + ')' : '';\n        console.error(line.replace('%s', '%\\0s'));\n\n        seen_opts.push(short);\n        seen_opts.push(long);\n    }\n    if (enable.timeout && seen_opts.indexOf('t') === -1 && seen_opts.indexOf('timeout') === -1) {\n        console.error(pad('  -t, --timeout N', switch_pad) + 'Exit if the process takes longer than N seconds');\n    }\n    if (enable.status) {\n        if (seen_opts.indexOf('k') === -1 && seen_opts.indexOf('no-color') === -1) {\n            console.error(pad('  -k, --no-color', switch_pad) + 'Omit color from output');\n        }\n        if (seen_opts.indexOf('debug') === -1) {\n            console.error(pad('      --debug', switch_pad) + 'Show debug information');\n        }\n    }\n    if (enable.catchall && seen_opts.indexOf('c') === -1 && seen_opts.indexOf('catch') === -1) {\n        console.error(pad('  -c, --catch', switch_pad) + 'Catch unanticipated errors');\n    }\n    if (enable.daemon && seen_opts.indexOf('d') === -1 && seen_opts.indexOf('daemon') === -1) {\n        console.error(pad('  -d, --daemon [ARG]', switch_pad) + 'Daemonize the process. Control the daemon using [start, stop, restart, log, pid]');\n    }\n    if (enable.version && seen_opts.indexOf('v') === -1 && seen_opts.indexOf('version') === -1) {\n        console.error(pad('  -v, --version', switch_pad) + 'Display the current version');\n    }\n    if (enable.help && seen_opts.indexOf('h') === -1 && seen_opts.indexOf('help') === -1) {\n        console.error(pad('  -h, --help', switch_pad) + 'Display help and usage details');\n    }\n    if (command_list.length) {\n        console.error('\\n\\x1b[1mCommands\\x1b[0m: ');\n        if (!Array.isArray(commands)) {\n            for (var c in commands) {\n                line = '  ' + pad(c, switch_pad - 2);\n                line += trunc_desc(line, commands[c]);\n                console.error(line);\n            }\n        } else {\n            command_list.sort();\n            console.error('  ' + trunc_desc('  ', command_list.join(', ')));\n        }\n    }\n    return cli.exit(code);\n};\n\n/**\n * Generates an error message when an opt is incorrectly used.\n *\n * @param {String} expects (e.g. 'a value')\n * @param {String} type (e.g. 'VALUE')\n * @api public\n */\ncli.getOptError = function (expects, type) {\n    var err = full_opt + ' expects ' + expects\n            + '. Use `' + cli.app + ' ' + full_opt + (is_long ? '=' : ' ') + type + '`';\n    return err;\n};\n\n/**\n * Gets the next opt value and validates it with an optional validation\n * function. If validation fails or no value can be obtained, this method\n * will return the default value (if specified) or exit with err_msg.\n *\n * @param {String} default_val\n * @param {Function} validate_func\n * @param {String} err_msg\n * @api public\n */\ncli.getValue = function (default_val, validate_func, err_msg) {\n    err_msg = err_msg || cli.getOptError('a value', 'VALUE');\n\n    var value;\n\n    try {\n        if (curr_val) {\n            if (validate_func) {\n                curr_val = validate_func(curr_val);\n            }\n            return curr_val;\n        }\n\n        //Grouped short opts aren't allowed to have values\n        if (short_tags.length) {\n            throw 'Short tags';\n        }\n\n        //If there's no args left or the next arg is an opt, return the\n        //default value (if specified) - otherwise fail\n        if (!argv.length || (argv[0].length === 1 && argv[0][0] === '-')) {\n            throw 'No value';\n        }\n\n        value = argv.shift();\n\n        if (value.match(/^[0-9]+$/)) {\n            value = parseInt(value, 10);\n        }\n\n        //Run the value through a validation/transformation function if specified\n        if (validate_func) {\n            value = validate_func(value);\n        }\n    } catch (e) {\n\n        //The value didn't pass the validation/transformation. Unshift the value and\n        //return the default value (if specified)\n        if (value) {\n            argv.unshift(value);\n        }\n        return default_val != null ? default_val : cli.fatal(err_msg);\n    }\n    return value;\n};\n\ncli.getInt = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (typeof value === 'number') return value;\n        if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))$/)) {\n            throw 'Invalid int';\n        }\n        return parseInt(value);\n    }, cli.getOptError('a number', 'NUMBER'));\n}\n\ncli.getFloat = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))?(?:\\.[0-9]*)?$/)) {\n            throw 'Invalid float';\n        }\n        return parseFloat(value, 10);\n    }, cli.getOptError('a number', 'NUMBER'));\n}\n\ncli.getUrl = function (default_val, identifier) {\n    identifier = identifier || 'url';\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?:\\w+:\\w+@)?((?:(?:[-\\w\\d{1-3}]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\\.uk|ac\\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2})?)|((\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)(\\.(\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)){3}))(?::[\\d]{1,5})?(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$ |\\/.,*:;=]|%[a-f\\d]{2})*)?$/i)) {\n            throw 'Invalid URL';\n        }\n        return value;\n    }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n}\n\ncli.getEmail = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/)) {\n            throw 'Invalid email';\n        }\n        return value;\n    }, cli.getOptError('an email', 'EMAIL'));\n}\n\ncli.getIp = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)) {\n            throw 'Invalid IP';\n        }\n        return value;\n    }, cli.getOptError('an IP', 'IP'));\n}\n\ncli.getPath = function (default_val, identifier) {\n    identifier = identifier || 'path';\n    return cli.getValue(default_val, function (value) {\n        if (value.match(/[?*;{}]/)) {\n            throw 'Invalid path';\n        }\n        return value;\n    }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n}\n\ncli.getArrayValue = function (arr, default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (arr.indexOf(value) === -1) {\n            throw 'Unexpected value';\n        }\n        return value;\n    }, cli.getOptError('either [' + arr.join('|') + ']', 'VALUE'));\n}\n\n/**\n * Gets all data from STDIN (with optional encoding) and sends it to callback.\n *\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback\n * @api public\n */\ncli.withStdin = function (encoding, callback) {\n    if (typeof encoding === 'function') {\n        callback = encoding;\n        encoding = 'utf8';\n    }\n    var stream = process.openStdin(), data = '';\n    stream.setEncoding(encoding);\n    stream.on('data', function (chunk) {\n        data += chunk;\n    });\n    stream.on('end', function () {\n        callback.apply(cli, [data]);\n    });\n};\n\n/**\n * Gets all data from STDIN, splits the data into lines and sends it\n * to callback (callback isn't called until all of STDIN is read. To\n * process each line as it's received, see the method below\n *\n * @param {Function} callback\n * @api public\n */\ncli.withStdinLines = function (callback) {\n    cli.withStdin(function (data) {\n        var sep = data.indexOf('\\r\\n') !== -1 ? '\\r\\n' : '\\n';\n        callback.apply(cli, [data.split(sep), sep]);\n    });\n};\n\n/**\n * Asynchronously reads a file line by line. When a line is received,\n * callback is called with (line, sep) - when EOF is reached, callback\n * receives (null, null, true)\n *\n * @param {String} file (optional - default is 'stdin')\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback (line, sep, eof)\n * @api public\n */\ncli.withInput = function (file, encoding, callback) {\n    if (typeof encoding === 'function') {\n        callback = encoding;\n        encoding = 'utf8';\n    } else if (typeof file === 'function') {\n        callback = file;\n        encoding = 'utf8';\n        file = 'stdin';\n    }\n    if (file === 'stdin') {\n        file = process.openStdin();\n    } else {\n        try {\n            file = cli.native.fs.createReadStream(file);\n            file.on('error', cli.fatal);\n        } catch (e) {\n            return cli.fatal(e);\n        }\n    }\n    file.setEncoding(encoding);\n    var lines = [], data = '', eof, sep;\n    file.on('data', function (chunk) {\n        if (eof) return;\n        data += chunk;\n        if (!sep) {\n            if (data.indexOf('\\r\\n') !== -1) {\n                sep = '\\r\\n';\n            } else if (data.indexOf('\\n') !== -1) {\n                sep = '\\n';\n            } else {\n                last_line = data;\n                return;\n            }\n        }\n        lines = data.split(sep);\n        data = eof ? null : lines.pop();\n        while (lines.length) {\n            callback.apply(cli, [lines.shift(), sep, false]);\n        }\n    });\n    file.on('end', function () {\n        eof = true;\n        if (data.length) {\n            callback.apply(cli, [data, sep || '', false]);\n        }\n        callback.apply(cli, [null, null, true]);\n    });\n};\n\n/**\n * A method for creating and controlling a daemon.\n *\n * `arg` can be:\n *      start = daemonizes the process\n *      stop  = stops the daemon if it is running\n *      restart = alias for stop -> start\n *      pid = outputs the daemon's PID if it is running\n *      log = outputs the daemon's log file (stdout + stderr)\n *\n * @param {String} arg (Optional - default is 'start')\n * @param {Function} callback\n * @api public\n */\ncli.daemon = function (arg, callback) {\n    if (typeof daemon === 'undefined') {\n        cli.fatal('Daemon is not initialized');\n    }\n\n    if (typeof arg === 'function') {\n        callback = arg;\n        arg = 'start';\n    }\n\n    var lock_file = '/tmp/' + cli.app + '.pid',\n        log_file = '/tmp/' + cli.app + '.log';\n\n    var start = function () {\n        daemon.daemonize(log_file, lock_file, function (err) {\n            if (err) return cli.error('Error starting daemon: ' + err);\n            callback();\n        });\n    };\n\n    var stop = function () {\n        try {\n            cli.native.fs.readFileSync(lock_file);\n        } catch (e) {\n            return cli.error('Daemon is not running');\n        }\n        daemon.kill(lock_file, function (err, pid) {\n            if (err && err.errno === 3) {\n                return cli.error('Daemon is not running');\n            } else if (err) {\n                return cli.error('Error stopping daemon: ' + err.errno);\n            }\n            cli.ok('Successfully stopped daemon with pid: ' + pid);\n        });\n    };\n\n    switch(arg) {\n    case 'stop':\n        stop();\n        break;\n    case 'restart':\n        daemon.stop(lock_file, function () {\n            start();\n        });\n        break;\n    case 'log':\n        try {\n            cli.native.fs.createReadStream(log_file, {encoding: 'utf8'}).pipe(process.stdout);\n        } catch (e) {\n            return cli.error('No daemon log file');\n        }\n        break;\n    case 'pid':\n        try {\n            var pid = cli.native.fs.readFileSync(lock_file, 'utf8');\n            cli.native.fs.statSync('/proc/' + pid);\n            cli.info(pid);\n        } catch (e) {\n            return cli.error('Daemon is not running');\n        }\n        break;\n    default:\n        start();\n        break;\n    }\n}\n\n/**\n * The main entry method. Calling cli.main() is only necessary in\n * scripts that have daemon support enabled. `callback` receives (args, options)\n *\n * @param {Function} callback\n * @api public\n */\ncli.main = function (callback) {\n    var after = function () {\n        callback.apply(cli, [cli.args, cli.options]);\n    };\n    if (enable.daemon && daemon_arg) {\n        cli.daemon(daemon_arg, after);\n    } else {\n        after();\n    }\n}\n\n/**\n * Bind creationix's stack (https://github.com/creationix/stack).\n *\n * Create a simple middleware stack by calling:\n *\n *     cli.createServer(middleware).listen(port);\n *\n * @return {Server} server\n * @api public\n */\ncli.createServer = function(/*layers*/) {\n    var defaultStackErrorHandler = function (req, res, err) {\n        if (err) {\n            console.error(err.stack);\n            res.writeHead(500, {\"Content-Type\": \"text/plain\"});\n            return res.end(err.stack + \"\\n\");\n        }\n        res.writeHead(404, {\"Content-Type\": \"text/plain\"});\n        res.end(\"Not Found\\n\");\n    };\n    var handle, error;\n    handle = error = defaultStackErrorHandler;\n    var layers = Array.prototype.slice.call(arguments);\n\n    //Allow createServer(a,b,c) and createServer([a,b,c])\n    if (layers.length && layers[0] instanceof Array) {\n        layers = layers[0];\n    }\n    layers.reverse().forEach(function (layer) {\n        var child = handle;\n        handle = function (req, res) {\n            try {\n                layer(req, res, function (err) {\n                    if (err) return error(req, res, err);\n                    child(req, res);\n                });\n            } catch (err) {\n                error(req, res, err);\n            }\n        };\n    });\n    return cli.native.http.createServer(handle);\n};\n\n/**\n * A wrapper for child_process.exec().\n *\n * If the child_process exits successfully, `callback` receives an array of\n * stdout lines. The current process exits if the child process has an error\n * and `errback` isn't defined.\n *\n * @param {String} cmd\n * @param {Function} callback (optional)\n * @param {Function} errback (optional)\n * @api public\n */\ncli.exec = function (cmd, callback, errback) {\n    cli.native.child_process.exec(cmd, function (err, stdout, stderr) {\n        err = err || stderr;\n        if (err) {\n            if (errback) {\n                return errback(err, stdout);\n            }\n            return cli.fatal('exec() failed\\n' + err);\n        }\n        if (callback) {\n            callback(stdout.split('\\n'));\n        }\n    });\n};\n\n/**\n * Helper method for outputting a progress bar to the console.\n *\n * @param {Number} progress (0 <= progress <= 1)\n * @api public\n */\nvar last_progress_call, progress_len = 74;\ncli.progress = function (progress, decimals, stream) {\n    stream = stream || process.stdout;\n    if (progress < 0 || progress > 1 || isNaN(progress)) return;\n    if (!decimals) decimals = 0;\n    var now = (new Date()).getTime();\n    if (last_progress_call && (now - last_progress_call) < 100 && progress !== 1) {\n        return; //Throttle progress calls\n    }\n    last_progress_call = now;\n\n\n    var barLength = Math.floor(progress_len * progress),\n        str       = '';\n    if (barLength == 0 && progress > 0) {\n        barLength = 1;\n    }\n    for (var i = 1; i <= progress_len; i++) {\n        str += i <= barLength ? '#' : ' ';\n    }\n    var pwr = Math.pow(10, decimals);\n    var percentage = Math.floor(progress * 100 * pwr) / pwr + '%';\n    for (i = 0; i < decimals; i++) {\n        percentage += ' ';\n    }\n    stream.clearLine();\n    stream.write('[' + str + '] ' +  percentage);\n    if (progress === 1) {\n        stream.write('\\n');\n    } else {\n        stream.cursorTo(0);\n    }\n};\n\n/**\n * Helper method for outputting a spinner to the console.\n *\n * @param {String|Boolean} prefix (optional)\n * @api public\n */\nvar spinnerInterval;\ncli.spinner = function (prefix, end, stream) {\n    stream = stream || process.stdout;\n    if(!stream.clearLine) {\n        stream.write(prefix + '\\n');\n        return;\n    }\n    if (end) {\n        stream.clearLine();\n        stream.cursorTo(0);\n        stream.write(prefix + '\\n');\n        return clearInterval(spinnerInterval);\n    }\n    prefix = prefix + ' ' || '';\n    var spinner = ['-','\\\\','|','/'], i = 0, l = spinner.length;\n    spinnerInterval = setInterval(function () {\n        stream.clearLine();\n        stream.cursorTo(0);\n        stream.write(prefix + spinner[i++]);\n        if (i == l) i = 0;\n    }, 200);\n};\n",
  "cli/index.js": "module.exports = require('./cli');\n",
  "cli/package.json": "{\n  \"name\": \"cli\",\n  \"description\": \"A tool for rapidly building command line apps\",\n  \"version\": \"0.7.1\",\n  \"homepage\": \"http://github.com/chriso/cli\",\n  \"keywords\": [\n    \"cli\",\n    \"command line\",\n    \"opts\",\n    \"parseopt\",\n    \"opt\",\n    \"args\",\n    \"console\",\n    \"argsparse\",\n    \"optparse\",\n    \"daemon\",\n    \"autocomplete\",\n    \"command\",\n    \"autocompletion\"\n  ],\n  \"author\": {\n    \"name\": \"Chris O'Hara\",\n    \"email\": \"cohara87@gmail.com\"\n  },\n  \"main\": \"cli.js\",\n  \"bugs\": {\n    \"url\": \"http://github.com/chriso/cli/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/chriso/cli.git\"\n  },\n  \"dependencies\": {\n    \"glob\": \"^5.0.10\",\n    \"exit\": \"0.1.2\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Douglas Meyer\"\n    }\n  ],\n  \"engines\": {\n    \"node\": \">=0.2.5\"\n  },\n  \"license\": \"MIT\",\n  \"gitHead\": \"2b46947e1b8f9e1f47e2ee09735a586fb2fa91bc\",\n  \"_id\": \"cli@0.7.1\",\n  \"scripts\": {},\n  \"_shasum\": \"d7055d8d2d30b0edea13c92d2bc0ebba87d69672\",\n  \"_from\": \"cli@0.7.1\",\n  \"_npmVersion\": \"2.10.1\",\n  \"_nodeVersion\": \"0.12.4\",\n  \"_npmUser\": {\n    \"name\": \"cohara87\",\n    \"email\": \"cohara87@gmail.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"d7055d8d2d30b0edea13c92d2bc0ebba87d69672\",\n    \"tarball\": \"http://registry.npmjs.org/cli/-/cli-0.7.1.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"cohara87\",\n      \"email\": \"cohara87@gmail.com\"\n    }\n  ],\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/cli/-/cli-0.7.1.tgz\"\n}\n",
  "cli/node_modules/exit/Gruntfile.js": "'use strict';\n\nmodule.exports = function(grunt) {\n\n  // Project configuration.\n  grunt.initConfig({\n    nodeunit: {\n      files: ['test/**/*_test.js'],\n    },\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc'\n      },\n      gruntfile: {\n        src: 'Gruntfile.js'\n      },\n      lib: {\n        src: ['lib/**/*.js']\n      },\n      test: {\n        src: ['test/**/*.js']\n      },\n    },\n    watch: {\n      gruntfile: {\n        files: '<%= jshint.gruntfile.src %>',\n        tasks: ['jshint:gruntfile']\n      },\n      lib: {\n        files: '<%= jshint.lib.src %>',\n        tasks: ['jshint:lib', 'nodeunit']\n      },\n      test: {\n        files: '<%= jshint.test.src %>',\n        tasks: ['jshint:test', 'nodeunit']\n      },\n    },\n  });\n\n  // These plugins provide necessary tasks.\n  grunt.loadNpmTasks('grunt-contrib-nodeunit');\n  grunt.loadNpmTasks('grunt-contrib-jshint');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n\n  // Default task.\n  grunt.registerTask('default', ['jshint', 'nodeunit']);\n\n};\n",
  "cli/node_modules/exit/lib/exit.js": "/*\n * exit\n * https://github.com/cowboy/node-exit\n *\n * Copyright (c) 2013 \"Cowboy\" Ben Alman\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function exit(exitCode, streams) {\n  if (!streams) { streams = [process.stdout, process.stderr]; }\n  var drainCount = 0;\n  // Actually exit if all streams are drained.\n  function tryToExit() {\n    if (drainCount === streams.length) {\n      process.exit(exitCode);\n    }\n  }\n  streams.forEach(function(stream) {\n    // Count drained streams now, but monitor non-drained streams.\n    if (stream.bufferSize === 0) {\n      drainCount++;\n    } else {\n      stream.write('', 'utf-8', function() {\n        drainCount++;\n        tryToExit();\n      });\n    }\n    // Prevent further writing.\n    stream.write = function() {};\n  });\n  // If all streams were already drained, exit now.\n  tryToExit();\n  // In Windows, when run as a Node.js child process, a script utilizing\n  // this library might just exit with a 0 exit code, regardless. This code,\n  // despite the fact that it looks a bit crazy, appears to fix that.\n  process.on('exit', function() {\n    process.exit(exitCode);\n  });\n};\n",
  "cli/node_modules/exit/package.json": "{\n  \"name\": \"exit\",\n  \"description\": \"A replacement for process.exit that ensures stdio are fully drained before exiting.\",\n  \"version\": \"0.1.2\",\n  \"homepage\": \"https://github.com/cowboy/node-exit\",\n  \"author\": {\n    \"name\": \"\\\"Cowboy\\\" Ben Alman\",\n    \"url\": \"http://benalman.com/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/cowboy/node-exit.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/cowboy/node-exit/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/cowboy/node-exit/blob/master/LICENSE-MIT\"\n    }\n  ],\n  \"main\": \"lib/exit\",\n  \"engines\": {\n    \"node\": \">= 0.8.0\"\n  },\n  \"scripts\": {\n    \"test\": \"grunt nodeunit\"\n  },\n  \"devDependencies\": {\n    \"grunt-contrib-jshint\": \"~0.6.4\",\n    \"grunt-contrib-nodeunit\": \"~0.2.0\",\n    \"grunt-contrib-watch\": \"~0.5.3\",\n    \"grunt\": \"~0.4.1\",\n    \"which\": \"~1.0.5\"\n  },\n  \"keywords\": [\n    \"exit\",\n    \"process\",\n    \"stdio\",\n    \"stdout\",\n    \"stderr\",\n    \"drain\",\n    \"flush\",\n    \"3584\"\n  ],\n  \"readme\": \"# exit [![Build Status](https://secure.travis-ci.org/cowboy/node-exit.png?branch=master)](http://travis-ci.org/cowboy/node-exit)\\n\\nA replacement for process.exit that ensures stdio are fully drained before exiting.\\n\\nTo make a long story short, if `process.exit` is called on Windows, script output is often truncated when pipe-redirecting `stdout` or `stderr`. This module attempts to work around this issue by waiting until those streams have been completely drained before actually calling `process.exit`.\\n\\nSee [Node.js issue #3584](https://github.com/joyent/node/issues/3584) for further reference.\\n\\nTested in OS X 10.8, Windows 7 on Node.js 0.8.25 and 0.10.18.\\n\\nBased on some code by [@vladikoff](https://github.com/vladikoff).\\n\\n## Getting Started\\nInstall the module with: `npm install exit`\\n\\n```javascript\\nvar exit = require('exit');\\n\\n// These lines should appear in the output, EVEN ON WINDOWS.\\nconsole.log(\\\"omg\\\");\\nconsole.error(\\\"yay\\\");\\n\\n// process.exit(5);\\nexit(5);\\n\\n// These lines shouldn't appear in the output.\\nconsole.log(\\\"wtf\\\");\\nconsole.error(\\\"bro\\\");\\n```\\n\\n## Don't believe me? Try it for yourself.\\n\\nIn Windows, clone the repo and cd to the `test\\\\fixtures` directory. The only difference between [log.js](test/fixtures/log.js) and [log-broken.js](test/fixtures/log-broken.js) is that the former uses `exit` while the latter calls `process.exit` directly.\\n\\nThis test was done using cmd.exe, but you can see the same results using `| grep \\\"std\\\"` in either PowerShell or git-bash.\\n\\n```\\nC:\\\\node-exit\\\\test\\\\fixtures>node log.js 0 10 stdout stderr 2>&1 | find \\\"std\\\"\\nstdout 0\\nstderr 0\\nstdout 1\\nstderr 1\\nstdout 2\\nstderr 2\\nstdout 3\\nstderr 3\\nstdout 4\\nstderr 4\\nstdout 5\\nstderr 5\\nstdout 6\\nstderr 6\\nstdout 7\\nstderr 7\\nstdout 8\\nstderr 8\\nstdout 9\\nstderr 9\\n\\nC:\\\\node-exit\\\\test\\\\fixtures>node log-broken.js 0 10 stdout stderr 2>&1 | find \\\"std\\\"\\n\\nC:\\\\node-exit\\\\test\\\\fixtures>\\n```\\n\\n## Contributing\\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\\n\\n## Release History\\n2013-11-26 - v0.1.2 - Fixed a bug with hanging processes.  \\n2013-09-26 - v0.1.1 - Fixed some bugs. It seems to actually work now!  \\n2013-09-20 - v0.1.0 - Initial release.\\n\\n## License\\nCopyright (c) 2013 \\\"Cowboy\\\" Ben Alman  \\nLicensed under the MIT license.\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"_id\": \"exit@0.1.2\",\n  \"dist\": {\n    \"shasum\": \"0632638f8d877cc82107d30a0fff1a17cba1cd0c\",\n    \"tarball\": \"http://registry.npmjs.org/exit/-/exit-0.1.2.tgz\"\n  },\n  \"_from\": \"exit@0.1.2\",\n  \"_npmVersion\": \"1.3.11\",\n  \"_npmUser\": {\n    \"name\": \"cowboy\",\n    \"email\": \"cowboy@rj3.net\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"cowboy\",\n      \"email\": \"cowboy@rj3.net\"\n    }\n  ],\n  \"directories\": {},\n  \"_shasum\": \"0632638f8d877cc82107d30a0fff1a17cba1cd0c\",\n  \"_resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\"\n}\n",
  "cli/node_modules/exit/test/exit_test.js": "'use strict';\n\n/*\n  ======== A Handy Little Nodeunit Reference ========\n  https://github.com/caolan/nodeunit\n\n  Test methods:\n    test.expect(numAssertions)\n    test.done()\n  Test assertions:\n    test.ok(value, [message])\n    test.equal(actual, expected, [message])\n    test.notEqual(actual, expected, [message])\n    test.deepEqual(actual, expected, [message])\n    test.notDeepEqual(actual, expected, [message])\n    test.strictEqual(actual, expected, [message])\n    test.notStrictEqual(actual, expected, [message])\n    test.throws(block, [error], [message])\n    test.doesNotThrow(block, [error], [message])\n    test.ifError(value)\n*/\n\nvar fs = require('fs');\nvar exec = require('child_process').exec;\n\nvar _which = require('which').sync;\nfunction which(command) {\n  try {\n    _which(command);\n    return command;\n  } catch (err) {\n    return false;\n  }\n}\n\n// Look for grep first (any OS). If not found (but on Windows) look for find,\n// which is Windows' horribly crippled grep alternative.\nvar grep = which('grep') || process.platform === 'win32' && which('find');\n\nexports['exit'] = {\n  setUp: function(done) {\n    this.origCwd = process.cwd();\n    process.chdir('test/fixtures');\n    done();\n  },\n  tearDown: function(done) {\n    process.chdir(this.origCwd);\n    done();\n  },\n  'grep': function(test) {\n    test.expect(1);\n    // Many unit tests depend on this.\n    test.ok(grep, 'A suitable \"grep\" or \"find\" program was not found in the PATH.');\n    test.done();\n  },\n  // The rest of the tests are built dynamically, to keep things sane.\n};\n\n// A few helper functions.\nfunction normalizeLineEndings(s) {\n  return s.replace(/\\r?\\n/g, '\\n');\n}\n\n// Capture command output, normalizing captured stdout to unix file endings.\nfunction run(command, callback) {\n  exec(command, function(error, stdout) {\n    callback(error ? error.code : 0, normalizeLineEndings(stdout));\n  });\n}\n\n// Read a fixture file, normalizing file contents to unix file endings.\nfunction fixture(filename) {\n  return normalizeLineEndings(String(fs.readFileSync(filename)));\n}\n\nfunction buildTests() {\n  // Build individual unit tests for command output.\n  var counts = [10, 100, 1000];\n  var outputs = [' stdout stderr', ' stdout', ' stderr'];\n  var pipes = ['', ' | ' + grep + ' \"std\"'];\n  counts.forEach(function(count) {\n    outputs.forEach(function(output) {\n      pipes.forEach(function(pipe) {\n        var command = 'node log.js 0 ' + count + output + ' 2>&1' + pipe;\n        exports['exit']['output (' + command + ')'] = function(test) {\n          test.expect(2);\n          run(command, function(code, actual) {\n            var expected = fixture(count + output.replace(/ /g, '-') + '.txt');\n            // Sometimes, the actual file lines are out of order on Windows.\n            // But since the point of this lib is to drain the buffer and not\n            // guarantee output order, we only test the length.\n            test.equal(actual.length, expected.length, 'should be the same length.');\n            // The \"fail\" lines in log.js should NOT be output!\n            test.ok(actual.indexOf('fail') === -1, 'should not output after exit is called.');\n            test.done();\n          });\n        };\n      });\n    });\n  });\n\n  // Build individual unit tests for exit codes.\n  var codes = [0, 1, 123];\n  codes.forEach(function(code) {\n    var command = 'node log.js ' + code + ' 10 stdout stderr';\n    exports['exit']['exit code (' + command + ')'] = function(test) {\n      test.expect(1);\n      run(command, function(actual) {\n        // The specified exit code should be passed through.\n        test.equal(actual, code, 'should exit with ' + code + ' error code.');\n        test.done();\n      });\n    };\n  });\n}\n\n// Don't bother building tests if grep wasn't found, otherwise everything will\n// fail and the error will get lost.\nif (grep) {\n  buildTests();\n}\n",
  "cli/node_modules/exit/test/fixtures/log-broken.js": "var errorCode = process.argv[2];\nvar max = process.argv[3];\nvar modes = process.argv.slice(4);\n\nfunction stdout(message) {\n  if (modes.indexOf('stdout') === -1) { return; }\n  process.stdout.write('stdout ' + message + '\\n');\n}\n\nfunction stderr(message) {\n  if (modes.indexOf('stderr') === -1) { return; }\n  process.stderr.write('stderr ' + message + '\\n');\n}\n\nfor (var i = 0; i < max; i++) {\n  stdout(i);\n  stderr(i);\n}\n\nprocess.exit(errorCode);\n\nstdout('fail');\nstderr('fail');\n",
  "cli/node_modules/exit/test/fixtures/log.js": "var exit = require('../../lib/exit');\n\nvar errorCode = process.argv[2];\nvar max = process.argv[3];\nvar modes = process.argv.slice(4);\n\nfunction stdout(message) {\n  if (modes.indexOf('stdout') === -1) { return; }\n  process.stdout.write('stdout ' + message + '\\n');\n}\n\nfunction stderr(message) {\n  if (modes.indexOf('stderr') === -1) { return; }\n  process.stderr.write('stderr ' + message + '\\n');\n}\n\nfor (var i = 0; i < max; i++) {\n  stdout(i);\n  stderr(i);\n}\n\nexit(errorCode);\n\nstdout('fail');\nstderr('fail');\n"
}