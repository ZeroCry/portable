// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = {
    dest: './build',
    layer: {
      lib: {
        base: './lib',
        globs: ['**/*.js']
      },
      libmin: {
        base: './libmin',
        globs: ['**/*.js'],
        transform: [
          [
            '.+\.js$', function(file) {
              var uglify;
              if (!file.filepath.match('portable\.js')) {
                uglify = require('uglify-js');
                return file.raw = uglify.minify(file.raw, {
                  fromString: true,
                  mangle: true
                }).code;
              }
            }
          ]
        ]
      },
      clisrc: {
        base: './src',
        globs: ['**/*.js']
      },
      clinode: {
        base: './node_modules',
        globs: ['!(cli)/**/*.+(js|json)', 'cli/*.+(js|json)', 'cli/!(examples)/**/*.+(js|json)']
      },
      example: {
        base: './example/app',
        filename: 'example.json',
        globs: ['**/*.+(js|json)'],
        transform: [
          [
            '.+\.js$', function(file) {
              return file.raw += '\n// Some comment...';
            }
          ]
        ]
      },
      test: {
        base: './test',
        globs: ['**/*.+(js|json)']
      }
    },
    merge: {
      cli: {
        layers: [['clinode', ''], ['clisrc', 'node_modules']]
      }
    },
    bundle: {
      example: {
        target: 'browser',
        props: {
          argv: ['/app/hello.js'],
          env: {
            PWD: '/app'
          }
        },
        volumes: [['/app', 'example']]
      },
      test: {
        target: 'browser-full',
        props: {
          argv: ['/test/mocha.js'],
          env: {
            PWD: '/test'
          }
        },
        volumes: [['/test', 'test']]
      }
    },
    server: {
      port: 1777
    }
  };

}).call(this);
